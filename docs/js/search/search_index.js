var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.77,1,2.728]],["body/controllers/AppController.html",[0,3.337,1,4.577,2,2.314,3,0.273,4,0.247,5,0.197,6,4.574,7,0.532,8,4.233,9,4.577,10,5.008,11,4.577,12,6.46,13,2.694,14,0.889,15,2.694,16,6.278,17,2.012,18,0.017,19,1.208,20,5.291,21,3.947,22,5.008,23,5.145,24,3.701,25,5.008,26,2.35,27,0.83,28,5.584,29,3.487,30,5.008,31,2.969,32,0.922,33,1.62,34,3.467,35,2.206,36,4.26,37,4.574,38,5.291,39,5.291,40,0.273,41,0.247,42,3.467,43,2.431,44,1.842,45,5.291,46,0.013,47,0.013]],["title/modules/AppModule.html",[48,1.401,49,2.728]],["body/modules/AppModule.html",[1,4.809,2,2.722,3,0.257,4,0.233,5,0.185,18,0.017,32,1.027,33,1.525,36,4.56,37,4.306,40,0.257,41,0.233,46,0.013,47,0.013,48,2.469,49,5.64,50,2.289,51,2.077,52,2.854,53,2.854,54,2.541,55,3.664,56,2.854,57,4.306,58,4.306,59,4.306,60,4.891,61,4.891,62,4.891,63,4.891,64,4.56,65,3.566,66,2.409,67,2.688,68,4.981,69,3.566,70,4.981,71,3.861,72,3.529,73,2.289,74,4.981,75,4.981,76,4.981,77,4.981,78,4.981,79,4.306,80,4.981,81,4.981]],["title/injectables/AppService.html",[36,2.352,82,1.13]],["body/injectables/AppService.html",[3,0.206,4,0.186,5,0.148,7,0.541,9,4.978,14,0.67,16,3.445,18,0.017,19,1.49,22,5.568,23,4.319,24,3.493,25,4.725,26,2.657,27,0.87,28,3.445,30,4.725,31,2.801,32,0.711,33,1.22,36,4.165,40,0.206,41,0.251,42,2.611,43,1.831,44,2.273,46,0.011,47,0.011,71,3.089,82,1.58,83,1.831,84,3.445,85,3.523,86,4.173,87,4.277,88,6.469,89,3.084,90,5.383,91,5.896,92,6.095,93,6.095,94,1.586,95,3.985,96,7.305,97,3.985,98,1.281,99,1.453,100,1.516,101,0.872,102,0.67,103,1.076,104,3.814,105,4.978,106,3.985,107,3.985,108,5.383,109,4.653,110,3.994,111,4.653,112,6.528,113,3.985,114,3.985,115,4.173,116,4.173,117,4.83,118,3.11,119,3.985,120,3.527,121,3.814,122,2.604,123,3.527,124,4.83,125,3.814,126,6.074,127,1.762,128,0.989,129,2.151,130,1.927,131,5.383,132,3.445,133,2.604,134,1.927,135,3.445,136,3.985,137,1.874,138,3.985,139,6.528,140,3.985,141,1.586,142,3.985,143,2.033,144,1.831,145,3.089,146,3.985,147,1.831,148,3.985,149,4.653,150,4.173,151,3.985,152,3.445,153,2.434,154,3.985,155,3.445,156,2.823,157,3.985,158,3.985,159,3.985]],["title/controllers/AuthController.html",[0,1.77,160,2.728]],["body/controllers/AuthController.html",[0,2.443,2,1.354,3,0.16,4,0.145,5,0.115,7,0.762,8,2.028,13,2.435,14,0.52,15,1.88,17,2.022,18,0.017,19,1.213,26,2.493,29,2.433,32,0.938,33,0.948,34,2.028,35,1.29,40,0.16,41,0.211,43,1.422,44,1.851,46,0.009,47,0.009,85,2.433,89,2.582,94,1.232,98,0.737,99,0.835,100,2.022,101,1.417,102,1.043,103,1.435,122,2.18,128,1.608,130,3.134,147,3.149,160,4.138,161,2.675,162,2.193,163,3.095,164,1.834,165,3.248,166,2.754,167,4.138,168,3.61,169,3.211,170,3.483,171,4.595,172,2.675,173,4.187,174,3.095,175,5.048,176,3.568,177,4.507,178,2.18,179,2.675,180,5.048,181,5.84,182,4.507,183,3.896,184,2.471,185,3.095,186,3.896,187,3.248,188,3.095,189,3.896,190,3.046,191,4.138,192,1.838,193,2.977,194,2.268,195,3.568,196,3.11,197,3.958,198,2.675,199,4.491,200,3.095,201,5.048,202,3.095,203,3.896,204,3.35,205,3.046,206,3.483,207,3.766,208,3.095,209,3.896,210,1.947,211,3.896,212,3.306,213,3.095,214,4.579,215,4.527,216,3.002,217,3.095,218,3.095,219,2.433,220,3.927,221,2.582,222,1.972,223,1.773,224,2.193,225,3.095,226,2.399,227,3.494,228,5.312,229,2.399,230,3.35,231,2.675,232,3.792,233,2.675,234,2.675,235,4.121,236,3.095,237,2.028,238,3.095,239,1.891,240,2.399,241,3.095,242,3.095,243,2.675,244,1.579,245,1.773,246,1.972,247,4.507,248,2.675,249,2.193,250,3.483,251,3.095,252,2.925,253,3.095,254,3.095,255,2.193,256,2.675,257,3.095,258,1.354,259,2.675,260,3.095,261,3.095,262,3.095,263,3.095,264,2.028,265,0.989,266,2.399,267,3.095,268,3.095,269,3.095]],["title/modules/AuthModule.html",[48,1.401,60,2.523]],["body/modules/AuthModule.html",[2,2.787,3,0.267,4,0.242,5,0.192,18,0.017,32,0.996,33,1.584,40,0.267,41,0.242,46,0.013,47,0.013,48,2.511,50,2.377,51,2.157,52,2.964,53,2.964,54,2.639,55,3.726,56,3.956,60,5.151,64,4.603,65,3.65,66,2.502,67,2.792,69,3.65,79,4.471,160,4.891,232,4.823,233,4.471,270,4.471,271,5.172,272,4.471,273,4.471,274,4.603,275,5.172,276,5.172,277,4.009,278,5.172,279,5.172,280,5.172,281,5.172,282,4.471,283,5.172,284,5.172,285,5.172]],["title/injectables/AuthService.html",[82,1.13,232,2.352]],["body/injectables/AuthService.html",[3,0.22,4,0.199,5,0.159,7,0.634,8,3.69,14,0.717,15,2.348,18,0.017,19,1.285,26,2.049,29,3.62,32,0.886,33,1.305,40,0.22,41,0.263,44,1.484,46,0.012,47,0.012,82,1.653,83,1.959,85,3.867,94,2.242,98,1.341,99,1.52,100,2.142,101,1.232,102,0.946,103,1.52,121,3.99,128,1.566,130,2.062,137,2.195,147,3.082,164,1.765,165,3.441,166,3.441,168,4.05,169,2.898,172,4.868,173,4.463,184,1.697,189,4.868,190,4.105,191,5.076,192,1.398,193,2.588,194,2.143,195,4.261,196,2.908,197,3.441,204,3.404,212,2.873,230,4.003,232,4.261,234,3.686,235,3.305,244,2.873,245,3.227,246,2.463,250,2.794,255,3.021,259,4.868,277,3.305,286,3.686,287,4.868,288,4.132,289,3.686,290,7.504,291,4.264,292,4.868,293,5.631,294,4.868,295,4.264,296,5.631,297,3.69,298,4.365,299,4.264,300,4.264,301,2.062,302,4.264,303,3.686,304,4.264,305,3.686,306,4.264,307,4.264]],["title/interfaces/CompoDocConfig.html",[308,1.533,309,2.523]],["body/interfaces/CompoDocConfig.html",[3,0.136,4,0.123,5,0.227,14,0.262,18,0.017,27,0.805,31,0.718,32,0.589,40,0.081,41,0.073,43,0.718,44,1.952,46,0.005,47,0.005,51,0.651,66,1.646,87,1.023,94,0.622,101,0.342,102,1.202,103,2.054,117,1.862,118,3.971,122,1.931,123,1.023,127,0.422,129,1.419,133,1.931,137,2.124,141,1.355,143,1.341,144,1.834,153,0.954,169,2.476,176,0.954,196,2.012,210,1.485,222,0.683,223,0.895,246,2.669,252,0.683,301,2.882,308,1.355,309,2.23,310,0.843,311,0.797,312,0.895,313,1.106,314,1.042,315,3.094,316,3.094,317,3.094,318,3.094,319,3.094,320,3.094,321,3.094,322,3.094,323,3.094,324,3.094,325,3.094,326,3.094,327,3.094,328,3.094,329,3.094,330,3.094,331,3.094,332,3.094,333,3.094,334,3.094,335,3.094,336,3.094,337,3.452,338,1.606,339,2.037,340,1.211,341,2.638,342,2.037,343,0.895,344,2.037,345,1.106,346,1.419,347,3.959,348,1.106,349,1.419,350,2.23,351,1.106,352,1.419,353,0.954,354,1.106,355,1.606,356,0.954,357,2.918,358,2.037,359,1.722,360,1.106,361,3.998,362,0.954,363,1.211,364,1.211,365,3.452,366,1.862,367,2.037,368,2.037,369,1.211,370,4.346,371,2.23,372,3.904,373,1.722,374,2.037,375,1.211,376,1.106,377,1.211,378,5.186,379,0.954,380,1.023,381,2.411,382,1.862,383,0.954,384,1.023,385,1.106,386,1.106,387,1.023,388,1.106,389,1.211,390,1.211,391,1.211,392,1.211,393,1.862,394,2.638,395,1.211,396,2.037,397,2.638,398,1.211,399,1.211,400,1.106,401,3.155,402,2.037,403,1.023,404,4.08,405,5.239,406,2.411,407,2.638,408,2.638,409,1.211,410,4.74,411,1.862,412,1.211,413,0.797,414,1.211,415,1.211,416,1.211,417,1.211,418,1.106,419,1.106,420,3.155,421,2.638,422,2.918,423,2.638,424,2.411,425,3.978,426,3.741,427,3.978,428,4.322,429,3.741,430,3.094,431,4.628,432,3.094,433,4.687,434,2.828,435,3.636,436,3.636,437,3.741,438,3.094,439,4.492,440,3.978,441,4.687,442,3.452,443,1.211,444,1.862,445,1.211,446,3.452,447,1.211,448,2.638,449,1.106,450,4.346,451,1.211,452,2.037,453,2.638,454,1.211,455,2.638,456,2.037,457,1.211,458,3.094,459,2.638,460,1.211,461,3.293,462,1.722,463,2.037,464,1.211,465,1.211,466,1.211,467,1.211,468,1.211,469,3.636,470,1.211,471,1.106,472,2.037,473,1.211,474,2.638,475,1.211,476,2.411,477,1.211,478,2.638,479,2.245,480,1.211,481,2.638,482,1.211,483,2.918,484,2.638,485,2.411,486,1.106,487,1.211,488,1.211,489,2.411,490,1.211,491,1.211,492,2.037,493,2.037,494,2.638,495,1.106,496,2.037,497,1.211,498,1.211,499,2.411,500,3.419,501,1.211,502,2.037,503,2.037,504,1.106,505,3.741,506,1.211,507,2.828,508,1.862,509,2.037,510,1.211,511,1.211,512,1.211,513,1.106,514,1.211,515,1.211,516,1.211,517,4.177,518,1.211,519,1.211,520,2.037,521,1.023,522,1.211,523,1.211,524,1.211,525,1.211,526,1.211,527,1.211,528,1.211,529,1.211,530,1.211,531,1.211,532,1.211,533,1.211,534,1.211,535,0.954,536,1.211,537,1.211,538,2.037,539,1.211,540,1.211,541,1.211,542,1.211,543,2.287,544,1.211,545,1.419,546,1.211,547,1.211,548,1.106,549,1.211,550,1.211,551,1.211,552,4.492,553,1.211,554,0.954,555,1.211,556,1.211,557,1.211,558,1.106,559,2.948,560,1.211,561,1.211,562,1.211,563,1.211,564,2.721,565,1.5,566,3.452,567,1.211,568,1.211,569,2.638,570,2.037,571,1.211,572,4.28,573,1.211,574,3.094,575,3.741,576,1.211,577,1.211,578,0.755,579,1.95,580,2.638,581,1.238,582,1.211,583,1.211,584,1.211,585,1.211,586,1.023,587,1.106,588,1.211,589,3.094,590,1.211,591,1.211,592,1.211,593,2.037,594,1.211,595,1.106,596,1.211,597,0.954,598,1.211,599,2.638,600,1.023,601,1.211,602,1.211,603,1.211,604,1.211,605,1.211,606,1.419,607,1.211,608,2.438,609,1.211,610,0.404,611,1.106,612,2.638,613,1.211,614,1.211,615,1.211,616,1.211,617,1.211,618,1.211,619,1.211,620,1.211,621,1.211,622,1.211,623,1.211,624,0.797,625,1.211,626,2.037,627,1.211,628,1.211,629,2.037,630,1.211,631,1.211,632,1.211,633,1.211,634,1.211,635,1.211,636,0.843,637,1.211,638,1.211,639,1.211,640,1.106,641,1.023,642,1.211,643,1.211,644,1.211,645,1.023,646,0.843,647,1.106,648,1.211,649,2.615,650,1.211,651,1.023,652,1.106,653,1.023,654,1.106,655,1.211,656,1.211,657,1.862,658,1.211,659,2.037,660,1.211,661,2.828,662,1.211,663,1.211,664,2.037,665,1.211,666,1.211,667,1.211,668,2.037,669,1.211,670,1.211,671,1.211,672,1.722,673,1.211,674,1.106,675,1.106,676,1.106,677,1.106,678,1.106,679,1.106,680,1.211,681,1.211,682,1.211,683,1.211,684,1.211,685,1.211,686,1.211]],["title/classes/CreateProjectDto.html",[41,0.18,687,2.352]],["body/classes/CreateProjectDto.html",[3,0.203,4,0.184,5,0.146,7,0.757,14,0.66,17,2.58,18,0.017,19,1.381,27,0.888,32,0.8,35,1.637,40,0.203,41,0.317,46,0.011,47,0.011,101,1.565,102,1.176,103,1.831,122,2.578,144,1.804,192,1.737,193,2.449,194,1.702,210,2.386,258,3.32,314,1.632,479,2.838,581,1.939,687,3.696,688,0.896,689,5.609,690,3.044,691,3.054,692,3.492,693,2.043,694,3.054,695,2.719,696,1.826,697,3.776,698,2.838,699,3.492,700,3.776,701,3.265,702,5.329,703,3.718,704,3.929,705,4.689,706,3.696,707,5.609,708,5.23,709,3.927,710,3.927,711,5.609,712,5.03,713,3.696,714,3.384,715,4.956,716,2.25,717,3.927,718,3.927,719,4.131,720,4.607,721,1.632,722,3.054,723,2.719,724,3.927,725,3.927,726,3.718,727,3.696,728,3.964,729,3.492,730,3.776,731,2.119,732,1.637,733,4.607,734,4.607]],["title/classes/CreateTicketDto.html",[41,0.18,735,2.352]],["body/classes/CreateTicketDto.html",[3,0.147,4,0.133,5,0.106,7,0.749,10,3.287,14,0.479,17,2.478,18,0.017,19,1.487,27,0.917,32,0.669,35,1.188,40,0.147,41,0.28,46,0.009,47,0.009,102,1.305,103,2.043,122,2.051,141,1.688,144,2.579,164,1.01,168,3.692,192,1.393,210,1.414,252,3.09,258,3.395,314,1.718,413,2.164,479,2.455,545,3.902,581,1.543,636,2.289,646,3.238,688,0.65,691,2.43,692,2.779,693,1.628,694,2.43,695,2.164,696,1.194,697,3.005,698,2.75,699,2.779,701,1.538,703,1.632,704,3.613,706,3.98,713,3.842,716,2.43,722,2.43,726,3.835,727,3.665,728,3.677,729,3.931,730,3.005,731,1.538,732,1.188,735,3.095,736,5.786,737,2.208,738,2.323,739,4.241,740,4.482,741,4.846,742,1.376,743,5.005,744,4.875,745,4.241,746,4.241,747,3.666,748,4.241,749,3.927,750,3.589,751,2.849,752,2.849,753,3.287,754,3.005,755,3.666,756,4.851,757,4.379,758,4.379,759,2.849,760,2.849,761,4.851,762,3.287,763,4.851,764,3.927,765,3.927,766,4.379,767,2.849,768,2.849,769,3.005,770,4.241,771,4.651,772,4.241,773,2.849,774,3.666,775,3.287,776,3.005,777,4.35,778,2.849,779,2.849,780,5.437,781,3.931,782,2.849,783,2.779,784,4.241,785,2.779,786,3.287,787,3.287,788,3.287,789,3.927,790,2.849,791,2.849,792,3.927,793,3.666,794,3.666,795,3.666,796,4.241]],["title/interfaces/ExpressRequestWithUser.html",[216,1.863,308,1.533]],["body/interfaces/ExpressRequestWithUser.html",[3,0.285,4,0.258,5,0.205,7,0.555,13,2.763,14,0.927,18,0.017,32,0.729,40,0.285,46,0.014,47,0.014,102,1.114,164,1.821,194,2.117,212,3.381,216,3.435,220,4.383,221,3.796,308,2.637,310,2.978,314,2.029,785,4.341,797,4.769,798,1.988,799,4.341,800,4.176,801,3.576,802,5.136,803,3.909]],["title/interfaces/ExpressRequestWithUser-1.html",[216,1.555,308,1.279,472,1.64]],["body/interfaces/ExpressRequestWithUser-1.html",[3,0.285,4,0.258,5,0.205,7,0.555,13,2.763,14,0.927,18,0.017,32,0.729,40,0.285,46,0.014,47,0.014,102,1.114,164,1.821,194,2.117,212,3.381,216,3.435,220,4.383,221,3.796,308,2.637,310,2.978,314,2.029,785,4.341,798,1.988,799,4.341,800,4.176,801,3.576,802,5.136,803,3.909,804,4.769]],["title/interfaces/ExpressRequestWithUser-2.html",[216,1.555,308,1.279,805,2.491]],["body/interfaces/ExpressRequestWithUser-2.html",[3,0.285,4,0.258,5,0.205,7,0.555,13,2.763,14,0.927,18,0.017,32,0.729,40,0.285,46,0.014,47,0.014,102,1.114,164,1.821,194,2.117,212,3.381,216,3.435,220,4.383,221,3.796,308,2.637,310,2.978,314,2.029,785,4.341,798,1.988,799,4.341,800,4.176,801,3.576,802,5.136,803,3.909,806,4.769]],["title/injectables/HbsRenderService.html",[82,1.13,352,2.078]],["body/injectables/HbsRenderService.html",[3,0.31,4,0.294,5,0.209,7,0.655,13,1.188,14,0.713,15,2.502,18,0.017,19,1.435,26,2.041,27,0.852,31,1.309,32,0.376,40,0.147,41,0.133,44,2.46,46,0.009,47,0.009,48,1.543,50,1.949,82,1.245,83,1.309,94,2.016,99,0.769,100,1.084,101,1.376,102,0.943,103,0.769,118,1.454,129,1.538,133,1.378,134,1.378,137,2.381,144,1.309,153,1.74,170,4.386,192,1.489,210,0.95,223,2.43,246,2.992,258,2.624,311,3.324,314,1.837,338,3.842,343,1.632,347,3.758,352,2.289,360,3.589,361,1.867,362,1.74,372,1.867,373,1.867,379,2.591,388,2.018,393,3.005,400,2.018,401,4.846,403,2.779,410,3.005,411,3.005,418,3.005,419,3.005,428,3.589,431,3.005,433,3.589,434,2.018,435,3.005,436,3.589,441,2.018,461,3.238,462,4.121,469,3.589,471,3.589,472,2.164,476,4.251,495,2.018,499,2.018,504,4.456,558,3.005,559,2.591,564,1.74,565,1.553,581,1.543,606,2.289,608,3.428,636,2.289,646,1.538,647,2.018,672,1.867,695,1.454,703,1.632,708,4.379,740,2.779,742,1.108,807,5.049,808,2.208,809,5.066,810,5.611,811,5.611,812,5.611,813,4.241,814,4.241,815,2.849,816,2.849,817,2.849,818,4.241,819,2.849,820,2.849,821,2.208,822,2.208,823,2.849,824,2.849,825,2.849,826,2.463,827,2.849,828,2.849,829,2.208,830,6.514,831,2.849,832,4.241,833,3.732,834,2.463,835,4.851,836,5.611,837,6.289,838,6.289,839,2.463,840,2.849,841,5.066,842,2.849,843,4.241,844,2.849,845,2.849,846,2.849,847,4.241,848,2.463,849,2.463,850,2.849,851,2.849,852,3.666,853,5.066,854,4.241,855,4.241,856,2.849,857,2.849,858,2.849,859,2.849,860,2.849,861,2.849,862,3.287,863,4.241,864,2.849,865,2.849,866,5.999,867,5.611,868,2.849,869,2.849,870,2.849,871,2.849,872,4.241,873,2.849,874,2.849,875,2.849,876,3.287,877,1.74,878,2.849,879,4.241,880,2.849,881,2.463,882,4.241,883,5.999,884,2.849,885,2.849,886,2.463,887,2.849,888,2.849,889,2.849,890,4.241,891,2.849,892,2.849,893,2.208,894,2.208,895,2.849,896,2.849,897,2.849,898,2.849,899,2.849,900,2.849,901,1.74,902,2.463,903,2.849,904,4.241,905,2.849,906,2.463,907,2.849,908,2.849,909,2.849,910,2.849,911,5.066]],["title/controllers/HealthController.html",[0,1.77,912,2.728]],["body/controllers/HealthController.html",[0,2.932,2,1.91,3,0.226,4,0.204,5,0.162,7,0.439,14,0.734,15,2.386,17,1.661,18,0.017,19,0.997,26,2.081,32,0.843,33,1.337,34,2.862,35,1.821,40,0.226,41,0.267,44,1.521,46,0.012,47,0.012,85,2.357,94,1.738,98,1.04,99,1.179,115,5.696,128,1.745,162,3.094,166,3.495,196,3.173,197,3.495,246,3.075,250,2.862,355,2.668,444,4.797,548,4.054,554,4.294,611,3.094,714,3.4,833,3.278,893,5.844,912,4.797,913,3.776,914,6.736,915,4.435,916,4.367,917,4.367,918,5.721,919,5.721,920,5.721,921,6.076,922,7.029,923,6.381,924,6.381,925,5.721,926,6.381,927,6.381,928,6.381,929,4.367,930,4.367,931,3.386,932,4.367,933,4.367,934,4.367,935,4.367,936,4.367,937,3.776,938,4.367,939,4.367,940,4.367,941,7.348,942,4.367,943,4.367,944,4.367,945,4.367]],["title/modules/HealthModule.html",[48,1.401,61,2.523]],["body/modules/HealthModule.html",[2,3.003,3,0.303,4,0.274,5,0.218,18,0.016,32,0.993,33,1.793,40,0.303,41,0.274,46,0.014,47,0.014,48,2.497,50,2.692,61,4.498,69,3.356,912,5.16,931,4.541,946,5.857,947,6.865,948,5.063,949,6.865,950,5.857]],["title/injectables/JwtAuthGuard.html",[82,1.13,239,2.352]],["body/injectables/JwtAuthGuard.html",[3,0.291,4,0.264,5,0.21,7,0.675,11,4.758,18,0.016,24,3.233,32,0.887,33,1.728,40,0.291,41,0.314,46,0.014,47,0.014,82,1.971,83,2.593,165,3.447,190,4.108,239,4.38,383,3.447,798,1.935,951,4.878,952,4.878,953,7.17,954,5.805,955,5.205,956,6.415,957,5.205,958,6.715,959,6.715,960,4.374,961,5.642]],["title/injectables/JwtStrategy.html",[82,1.13,274,2.352]],["body/injectables/JwtStrategy.html",[3,0.218,4,0.197,5,0.157,7,0.631,13,2.787,14,0.71,15,2.334,18,0.017,19,1.278,21,3.42,24,3.207,26,2.036,27,0.796,32,0.919,33,1.293,40,0.218,41,0.262,42,2.768,43,1.941,44,1.471,46,0.011,47,0.011,82,1.643,83,1.941,85,3.021,94,2.228,98,1.333,99,1.511,100,2.129,101,1.224,102,1.123,103,1.511,128,1.39,130,2.043,137,1.471,144,1.941,147,2.572,164,1.815,169,2.885,187,2.581,190,4.398,194,1.788,196,2.899,197,3.42,204,3.021,210,1.409,212,2.856,221,3.207,229,3.275,230,3.995,231,3.652,250,2.768,255,4.447,274,4.248,282,3.652,288,4.113,289,3.652,294,4.839,301,2.043,303,6.177,305,4.839,420,3.966,579,2.421,798,1.694,801,3.388,955,3.275,956,6.301,960,3.275,962,3.652,963,5.597,964,3.966,965,5.597,966,5.597,967,5.597,968,5.597,969,5.777,970,5.597,971,4.866,972,4.225,973,4.339,974,3.829,975,5.597,976,5.597,977,4.225,978,5.597,979,4.225,980,4.225,981,4.225,982,4.225,983,4.225,984,4.225,985,4.225]],["title/classes/LoginUserDto.html",[41,0.18,173,2.352]],["body/classes/LoginUserDto.html",[3,0.21,4,0.19,5,0.151,7,0.747,14,0.684,17,2.504,18,0.017,19,1.503,27,0.909,32,0.814,35,1.697,40,0.21,41,0.288,46,0.011,47,0.011,102,1.107,103,2.007,127,1.099,143,2.786,164,1.838,165,2.487,168,2.197,173,3.764,192,1.01,193,1.87,194,1.3,195,2.487,204,4.232,205,4.492,243,4.72,258,3.338,297,4.872,314,1.672,387,3.578,688,0.929,691,3.128,696,1.734,698,2.077,699,2.667,704,2.197,706,3.764,721,1.886,726,3.773,727,4.023,728,3.578,729,4.037,731,2.197,957,4.233,986,5.323,987,2.884,988,5.46,989,6.584,990,4.07,991,4.07,992,4.632,993,5.46,994,5.763,995,6.111,996,4.07,997,4.07,998,4.07,999,4.07,1000,4.07,1001,4.07,1002,4.233,1003,4.07,1004,4.72,1005,4.72,1006,4.72,1007,2.332,1008,3.518]],["title/classes/Project.html",[41,0.18,693,0.997]],["body/classes/Project.html",[3,0.161,4,0.146,5,0.116,7,0.715,14,0.525,17,2.614,18,0.017,19,1.568,27,0.774,32,0.823,33,0.957,40,0.276,41,0.274,46,0.009,47,0.009,73,1.436,101,1.532,102,1.263,103,1.584,118,2.727,133,2.195,134,1.511,137,1.088,141,2.901,164,1.751,178,3.324,222,2.338,258,3.244,314,1.796,366,3.787,578,2.585,645,3.503,688,0.713,693,2.057,694,2.601,695,2.316,698,2.706,701,1.687,705,4.59,707,2.701,713,4.452,716,3.57,722,3.724,732,2.446,738,1.908,742,1.169,754,4.605,783,2.974,798,0.843,800,3.62,801,2.885,877,3.584,901,1.909,964,3.787,974,3.063,992,4.502,1009,2.214,1010,2.773,1011,4.605,1012,4.259,1013,3.518,1014,3.924,1015,3.924,1016,4.156,1017,5.071,1018,5.866,1019,5.071,1020,4.548,1021,5.94,1022,3.125,1023,3.518,1024,3.125,1025,2.422,1026,3.125,1027,4.621,1028,3.216,1029,3.125,1030,3.125,1031,3.125,1032,3.125,1033,4.621,1034,3.125,1035,3.125,1036,4.539,1037,5.43,1038,2.422,1039,3.125,1040,2.701,1041,3.216,1042,2.701,1043,3.125,1044,2.422,1045,3.125,1046,2.047,1047,2.701,1048,2.701,1049,4.156,1050,2.701,1051,2.701,1052,2.701,1053,3.125,1054,3.125,1055,3.125,1056,2.701,1057,3.503,1058,2.422,1059,2.701,1060,2.701]],["title/controllers/ProjectController.html",[0,1.77,1061,2.728]],["body/controllers/ProjectController.html",[0,2.239,2,0.804,3,0.095,4,0.086,5,0.068,7,0.791,14,0.309,15,1.255,17,1.853,18,0.017,19,1.112,21,2.698,24,2.997,26,2.232,27,0.8,29,1.624,32,0.788,33,0.563,34,1.204,35,0.767,40,0.095,41,0.179,42,1.204,43,0.845,44,1.696,46,0.006,47,0.006,89,1.053,98,0.716,100,1.853,101,1.261,102,1.209,103,1.315,104,2.132,110,1.972,120,2.894,121,2.132,128,1.524,130,3.59,137,2.006,147,2.948,162,1.302,164,1.619,165,3.374,169,3.088,175,2.601,176,3.749,179,1.589,180,4.982,183,5.305,184,2.198,186,4.522,187,3.374,190,1.724,192,1.593,194,2.049,196,2.802,203,2.601,206,2.503,207,2.132,210,1.744,212,2.94,215,5.208,216,3.324,219,1.624,220,3.975,221,3.676,222,1.932,223,2.189,224,2.132,226,1.425,227,2.333,228,5.543,237,1.204,239,3.196,240,1.425,244,1.535,245,1.724,252,3.108,264,3.428,265,2.146,266,3.776,301,2.356,356,1.838,359,2.894,386,2.132,413,1.535,479,1.932,521,3.428,543,2.53,559,2.976,564,2.976,565,1.261,572,2.894,578,2.136,581,2.286,610,0.779,624,1.535,687,3.644,692,1.972,693,2.064,698,2.192,721,1.491,723,1.535,742,1.688,833,2.997,915,2.333,973,2.333,1028,4.997,1061,2.132,1062,1.589,1063,1.589,1064,2.601,1065,4.76,1066,3.009,1067,2.601,1068,3.817,1069,4.055,1070,4.021,1071,2.132,1072,2.132,1073,1.589,1074,1.838,1075,1.838,1076,1.838,1077,3.821,1078,3.009,1079,4.416,1080,1.838,1081,3.821,1082,1.838,1083,4.625,1084,1.589,1085,1.838,1086,3.009,1087,3.821,1088,3.009,1089,4.982,1090,1.838,1091,3.009,1092,3.009,1093,1.838,1094,2.132,1095,1.589,1096,1.838,1097,4.982,1098,4.416,1099,3.423,1100,1.838,1101,3.423,1102,1.838,1103,1.838,1104,1.589,1105,1.838,1106,3.423,1107,1.838,1108,1.589,1109,4.119,1110,1.589,1111,1.838,1112,1.972,1113,1.838,1114,1.838,1115,1.838,1116,1.425,1117,3.303,1118,4.522,1119,3.817,1120,1.302,1121,2.333,1122,1.838,1123,2.334,1124,1.589,1125,1.589,1126,1.204,1127,1.302,1128,1.302,1129,1.838,1130,1.838,1131,1.841,1132,4.211,1133,4.211,1134,1.589,1135,3.618,1136,3.817,1137,3.817,1138,1.838,1139,3.776,1140,1.593,1141,1.589,1142,3.303,1143,1.589,1144,1.838,1145,0.804,1146,2.601,1147,1.838,1148,0.804,1149,1.123,1150,1.425,1151,1.204,1152,1.589,1153,1.589,1154,2.601,1155,1.838,1156,0.804,1157,1.589,1158,1.425,1159,1.589,1160,1.838]],["title/classes/ProjectDoesNotExist.html",[41,0.18,1131,1.606]],["body/classes/ProjectDoesNotExist.html",[3,0.243,4,0.22,5,0.175,7,0.473,18,0.017,27,0.715,40,0.391,41,0.375,46,0.012,47,0.012,98,1.12,99,1.27,127,1.621,128,1.168,184,1.873,192,1.168,265,1.503,565,1.995,610,1.554,688,1.074,693,1.96,696,1.69,721,1.441,742,1.029,798,2.136,1131,2.503,1140,1.962,1145,2.058,1148,2.058,1156,2.058,1161,2.401,1162,3.647,1163,1.79,1164,1.79,1165,1.79,1166,1.79,1167,1.79,1168,2.09,1169,2.276,1170,1.79,1171,1.441,1172,2.184,1173,1.638,1174,2.162]],["title/classes/ProjectError.html",[41,0.18,1162,1.77]],["body/classes/ProjectError.html",[3,0.236,4,0.214,5,0.17,7,0.593,18,0.017,19,1.043,27,0.82,40,0.389,41,0.374,46,0.012,47,0.012,94,1.82,98,1.403,99,1.591,100,1.739,101,1,102,0.768,103,1.234,127,1.86,128,1.135,184,1.82,192,1.135,244,2.333,265,1.46,565,2.01,610,1.184,688,1.043,693,1.948,696,1.659,721,1.4,742,1,798,2.13,1007,2.619,1131,1.906,1140,1.906,1145,2,1148,2,1156,2,1161,2.333,1162,3.646,1163,2.242,1164,1.739,1165,1.739,1166,1.739,1167,1.739,1168,2.271,1169,2.211,1170,1.739,1171,1.4,1172,2.144,1173,1.592,1174,2.101,1175,4.572]],["title/classes/ProjectIdValidationError.html",[41,0.18,1140,1.606]],["body/classes/ProjectIdValidationError.html",[3,0.242,4,0.219,5,0.174,7,0.472,18,0.017,27,0.713,40,0.391,41,0.375,46,0.012,47,0.012,98,1.117,99,1.266,127,1.618,128,1.165,184,1.867,192,1.165,265,1.499,565,1.994,610,1.214,688,1.071,693,1.959,696,1.858,721,1.436,742,1.311,798,2.136,1131,1.956,1140,2.499,1145,2.052,1148,2.052,1156,2.052,1161,2.394,1162,3.646,1163,1.784,1164,1.784,1165,1.784,1166,1.784,1167,1.784,1168,2.299,1169,2.269,1170,1.784,1171,1.436,1172,2.18,1173,1.633,1174,2.156]],["title/classes/ProjectInsufficientPermissionsError.html",[41,0.18,1156,1.684]],["body/classes/ProjectInsufficientPermissionsError.html",[3,0.243,4,0.22,5,0.175,7,0.472,18,0.017,27,0.714,40,0.391,41,0.375,46,0.012,47,0.012,98,1.118,99,1.268,127,1.619,128,1.166,184,1.87,192,1.166,265,1.501,565,1.994,610,1.216,688,1.072,693,1.959,696,1.688,721,1.438,742,1.028,798,2.136,1131,1.959,1140,1.959,1145,2.055,1148,2.055,1156,2.624,1161,2.397,1162,3.646,1163,1.787,1164,1.787,1165,1.787,1166,1.787,1167,1.787,1168,2.088,1169,2.272,1170,2.281,1171,1.836,1172,2.182,1173,1.636,1174,2.159]],["title/modules/ProjectModule.html",[48,1.401,62,2.523]],["body/modules/ProjectModule.html",[2,2.895,3,0.285,4,0.257,5,0.205,18,0.016,32,0.995,33,1.686,40,0.285,41,0.257,46,0.014,47,0.014,48,2.581,50,2.531,51,2.297,52,3.156,53,3.156,54,2.81,55,3.83,56,3.156,62,5.011,65,3.792,66,2.664,67,2.973,69,3.156,72,3.902,73,2.531,101,1.205,178,2.664,693,1.426,1057,4.337,1061,5.028,1123,4.672,1124,4.761,1126,3.609,1176,4.761,1177,4.761,1178,5.508,1179,5.508,1180,4.269,1181,3.902]],["title/classes/ProjectNotModifiedError.html",[41,0.18,1148,1.684]],["body/classes/ProjectNotModifiedError.html",[3,0.243,4,0.22,5,0.175,7,0.472,18,0.017,27,0.714,40,0.391,41,0.375,46,0.012,47,0.012,98,1.118,99,1.268,127,1.619,128,1.166,184,1.87,192,1.166,265,1.501,565,1.994,610,1.216,688,1.072,693,1.959,696,1.688,721,1.438,742,1.028,798,2.136,1131,1.959,1140,1.959,1145,2.055,1148,2.624,1156,2.055,1161,2.397,1162,3.646,1163,1.787,1164,1.787,1165,1.787,1166,1.787,1167,1.787,1168,2.088,1169,2.272,1170,1.787,1171,1.438,1172,2.403,1173,2.088,1174,2.159]],["title/classes/ProjectRelationConflict.html",[41,0.18,1145,1.684]],["body/classes/ProjectRelationConflict.html",[3,0.243,4,0.22,5,0.175,7,0.472,18,0.017,27,0.714,40,0.391,41,0.375,46,0.012,47,0.012,98,1.118,99,1.268,127,1.619,128,1.166,184,1.87,192,1.166,265,1.501,565,1.994,610,1.216,688,1.072,693,1.959,696,1.688,721,1.438,742,1.028,798,2.136,1131,1.959,1140,1.959,1145,2.624,1148,2.055,1156,2.055,1161,2.397,1162,3.646,1163,1.787,1164,1.787,1165,2.281,1166,2.281,1167,1.787,1168,2.088,1169,2.272,1170,1.787,1171,1.438,1172,2.182,1173,1.636,1174,2.159]],["title/injectables/ProjectService.html",[82,1.13,1123,2.352]],["body/injectables/ProjectService.html",[3,0.119,4,0.107,5,0.085,7,0.581,8,2.355,14,0.386,15,2.091,18,0.017,19,1.318,21,2.707,26,2.337,27,0.798,29,2.707,32,0.849,33,0.702,40,0.119,41,0.207,43,1.054,44,1.746,46,0.007,47,0.007,73,1.054,82,1.055,83,1.054,85,2.707,94,1.431,98,0.856,100,2.197,101,1.489,102,0.971,103,1.559,122,1.738,128,1.499,129,1.94,130,3.415,137,2.458,141,0.913,143,1.171,147,1.652,164,1.755,169,3.245,178,1.11,184,1.764,187,2.196,192,1.552,193,1.652,194,1.148,196,2.914,206,2.355,207,2.546,210,2.396,219,1.94,222,2.193,237,1.503,244,1.834,245,3.309,246,1.004,249,1.625,264,1.503,265,1.928,288,4.627,301,3.023,355,2.707,461,1.238,472,1.834,479,1.572,565,0.93,578,1.738,579,3.839,581,1.307,586,3.784,624,1.834,653,3.784,687,3.818,692,2.355,693,2.04,705,2.355,720,4.335,721,1.667,723,2.559,732,1.499,742,1.613,750,4.824,801,1.94,833,1.314,852,1.983,1010,2.196,1011,4.824,1016,1.625,1041,1.625,1065,4.95,1070,3.956,1071,2.546,1072,3.139,1073,3.107,1083,2.546,1094,2.546,1106,1.778,1109,4.39,1120,1.625,1121,2.786,1123,2.707,1126,1.503,1128,1.625,1131,2.271,1132,1.983,1135,4.709,1140,2.091,1145,1.572,1146,3.107,1148,1.572,1149,3.063,1151,2.355,1154,3.107,1156,1.572,1158,3.887,1162,1.652,1171,1.1,1174,1.652,1181,1.625,1182,1.983,1183,5.219,1184,3.594,1185,3.107,1186,4.431,1187,3.107,1188,3.594,1189,2.294,1190,3.553,1191,2.294,1192,3.107,1193,5.474,1194,2.294,1195,3.594,1196,2.294,1197,3.594,1198,3.107,1199,3.107,1200,3.107,1201,2.294,1202,3.107,1203,2.294,1204,3.107,1205,2.294,1206,3.594,1207,2.294,1208,4.335,1209,1.778,1210,1.983,1211,1.625,1212,2.294,1213,1.625,1214,1.625,1215,1.983,1216,2.294,1217,3.594,1218,3.594,1219,2.294,1220,2.294,1221,4.431,1222,2.294,1223,2.294,1224,5.014,1225,2.294,1226,1.778,1227,4.431,1228,5.402,1229,3.594,1230,4.431,1231,3.83,1232,3.887,1233,2.294,1234,4.707,1235,3.83,1236,3.83,1237,2.294,1238,2.294,1239,2.294,1240,2.294,1241,3.107,1242,2.786,1243,2.294,1244,2.294,1245,3.594,1246,2.294,1247,3.594,1248,2.294,1249,3.594,1250,2.294,1251,2.294,1252,2.294,1253,2.294,1254,3.594,1255,2.294,1256,2.294,1257,2.294,1258,1.983,1259,2.294,1260,2.294,1261,2.294,1262,3.107,1263,2.294]],["title/classes/ProjectSlugValidationError.html",[41,0.18,1169,1.863]],["body/classes/ProjectSlugValidationError.html",[3,0.242,4,0.219,5,0.174,7,0.472,18,0.017,27,0.713,40,0.391,41,0.375,46,0.012,47,0.012,98,1.117,99,1.266,127,1.618,128,1.165,184,1.867,192,1.165,265,1.499,565,1.994,610,1.214,688,1.071,693,1.959,696,1.858,721,1.436,742,1.026,798,2.136,1131,1.956,1140,1.956,1145,2.052,1148,2.052,1156,2.052,1161,2.394,1162,3.646,1163,1.784,1164,1.784,1165,1.784,1166,1.784,1167,2.279,1168,2.299,1169,2.898,1170,1.784,1171,1.436,1172,2.18,1173,1.633,1174,2.156]],["title/classes/ProjectUpdateDataValidationError.html",[41,0.18,1174,1.77]],["body/classes/ProjectUpdateDataValidationError.html",[3,0.242,4,0.219,5,0.174,7,0.47,18,0.017,27,0.712,40,0.391,41,0.375,46,0.012,47,0.012,98,1.114,99,1.263,127,1.615,128,1.161,184,2.381,192,1.485,265,1.911,565,1.993,610,1.211,688,1.068,693,1.958,696,1.684,721,1.831,742,1.023,798,2.135,1131,1.951,1140,1.951,1145,2.046,1148,2.046,1156,2.046,1161,2.387,1162,3.645,1163,1.779,1164,1.779,1165,1.779,1166,1.779,1167,1.779,1168,2.082,1169,2.263,1170,1.779,1171,1.432,1172,2.399,1173,1.629,1174,2.749]],["title/classes/RegisterUserDto.html",[41,0.18,199,2.523]],["body/classes/RegisterUserDto.html",[3,0.187,4,0.17,5,0.135,7,0.739,13,2.104,14,0.609,17,2.386,18,0.017,19,1.432,27,0.892,32,0.667,35,1.512,40,0.187,41,0.271,46,0.01,47,0.01,101,1.532,102,1.054,125,4.112,127,1.928,129,3.56,134,2.441,164,1.783,167,4.112,192,0.9,193,1.667,194,1.158,195,2.216,199,3.803,204,3.781,205,4.093,212,2.961,258,3.357,297,5.004,314,1.545,404,3.803,485,4.673,486,5.14,688,0.828,691,2.891,698,2.759,704,3.56,706,3.833,712,3.912,719,5.755,721,1.545,723,1.85,726,3.779,727,3.833,728,4.321,731,1.957,762,2.811,971,3.912,987,2.569,992,4.111,994,4.499,1004,4.362,1005,4.362,1006,4.362,1151,3.307,1264,5.112,1265,5.017,1266,3.627,1267,3.627,1268,5.017,1269,5.017,1270,3.135,1271,3.627,1272,5.564,1273,6.828,1274,5.902,1275,5.293,1276,3.627,1277,3.627,1278,6.274,1279,3.627,1280,3.627,1281,4.362,1282,3.627,1283,3.627,1284,3.627,1285,3.135,1286,5.046,1287,3.135,1288,4.362,1289,3.627,1290,3.627,1291,5.046,1292,3.627,1293,4.362]],["title/interfaces/Session.html",[308,1.533,357,2.523]],["body/interfaces/Session.html",[3,0.147,4,0.133,5,0.234,14,0.29,18,0.017,27,0.806,31,0.792,32,0.622,40,0.089,41,0.081,43,0.792,44,2.028,46,0.006,47,0.006,51,0.719,66,1.767,87,1.13,94,0.686,101,0.377,102,0.852,117,2.023,118,3.69,122,0.834,123,1.13,127,1.147,129,1.541,133,2.054,137,2.191,141,1.454,143,1.457,144,1.952,153,1.053,169,2.581,176,1.053,196,2.115,210,1.569,222,0.754,223,0.988,246,2.753,252,0.754,301,2.979,308,1.454,309,1.871,310,0.931,311,0.88,312,0.988,313,1.222,314,1.119,315,1.337,316,1.337,317,1.337,318,1.337,319,1.337,320,1.337,321,1.337,322,1.337,323,1.337,324,1.337,325,1.337,326,1.337,327,1.337,328,1.337,329,1.337,330,1.337,331,1.337,332,1.337,333,1.337,334,1.337,335,1.337,336,1.337,337,2.213,338,1.744,339,2.213,340,1.337,341,2.832,342,2.213,343,0.988,344,2.213,345,1.222,346,1.541,347,4.012,348,1.222,349,1.541,350,2.394,351,1.222,352,1.541,353,1.053,354,1.222,355,1.744,356,1.053,357,3.323,358,3.648,359,3.084,360,1.222,361,4.124,362,1.053,363,1.337,364,1.337,365,3.648,366,2.023,367,2.213,368,2.213,369,1.337,370,4.516,371,2.394,372,4.036,373,1.871,374,2.213,375,1.337,376,1.222,377,1.337,378,5.305,379,1.053,380,1.13,381,2.588,382,2.023,383,1.053,384,1.13,385,1.222,386,1.222,387,1.13,388,1.222,389,1.337,390,1.337,391,1.337,392,1.337,393,2.023,394,2.832,395,1.337,396,2.213,397,2.832,398,1.337,399,1.337,400,1.222,401,3.335,402,2.213,403,1.13,404,4.202,405,5.354,406,2.588,407,2.832,408,2.832,409,1.337,410,4.849,411,2.023,412,1.337,413,0.88,414,1.337,415,1.337,416,1.337,417,1.337,418,1.222,419,1.222,420,3.335,421,2.832,422,3.084,423,2.832,424,2.588,425,4.163,426,3.932,427,4.163,428,4.459,429,3.932,430,3.292,431,4.745,432,3.292,433,4.799,434,3.009,435,3.805,436,3.805,437,3.932,438,3.292,439,4.655,440,4.163,441,4.799,442,3.648,443,1.337,444,2.023,445,1.337,446,3.648,447,1.337,448,2.832,449,1.222,450,4.516,451,1.337,452,2.213,453,2.832,454,1.337,455,2.832,456,2.213,457,1.337,458,3.292,459,2.832,460,1.337,461,3.397,462,1.871,463,2.213,464,1.337,465,1.337,466,1.337,467,1.337,468,1.337,469,3.805,470,1.337,471,1.222,472,2.167,473,1.337,474,2.832,475,1.337,476,2.588,477,1.337,478,2.832,479,2.349,480,1.337,481,2.832,482,1.337,483,3.084,484,2.832,485,2.588,486,1.222,487,1.337,488,1.337,489,2.588,490,1.337,491,1.337,492,2.213,493,2.213,494,2.832,495,1.222,496,2.213,497,1.337,498,1.337,499,2.588,500,3.594,501,1.337,502,2.213,503,2.213,504,1.222,505,3.932,506,1.337,507,3.009,508,2.023,509,2.213,510,1.337,511,1.337,512,1.337,513,1.222,514,1.337,515,1.337,516,1.337,517,4.354,518,1.337,519,1.337,520,2.213,521,1.13,522,1.337,523,1.337,524,1.337,525,1.337,526,1.337,527,1.337,528,1.337,529,1.337,530,1.337,531,1.337,532,1.337,533,1.337,534,1.337,535,1.053,536,1.337,537,1.337,538,2.213,539,1.337,540,1.337,541,1.337,542,1.337,543,2.434,544,1.337,545,1.541,546,1.337,547,1.337,548,1.222,549,1.337,550,1.337,551,1.337,552,4.655,553,1.337,554,1.053,555,1.337,556,1.337,557,1.337,558,1.222,559,3.099,560,1.337,561,1.337,562,1.337,563,1.337,564,2.875,565,1.554,566,3.648,567,1.337,568,1.337,569,2.832,570,2.213,571,1.337,572,4.389,573,1.337,574,3.292,575,3.932,576,1.337,577,1.337,578,0.834,579,2.093,580,2.832,581,1.329,582,1.337,583,1.337,584,1.337,585,1.337,586,1.13,587,1.222,588,1.337,589,3.292,590,1.337,591,1.337,592,1.337,593,2.213,594,1.337,595,1.222,596,1.337,597,1.053,598,1.337,599,2.832,600,1.13,601,1.337,602,1.337,603,1.337,604,1.337,605,1.337,606,1.541,607,1.337,608,2.595,609,1.337,610,0.446,611,1.222,612,2.832,613,1.337,614,1.337,615,1.337,616,1.337,617,1.337,618,1.337,619,1.337,620,1.337,621,1.337,622,1.337,623,1.337,624,0.88,625,1.337,626,2.213,627,1.337,628,1.337,629,2.213,630,1.337,631,1.337,632,1.337,633,1.337,634,1.337,635,1.337,636,0.931,637,1.337,638,1.337,639,1.337,640,1.222,641,1.13,642,1.337,643,1.337,644,1.337,645,1.13,646,0.931,647,1.222,648,1.337,649,2.783,650,1.337,651,1.13,652,1.222,653,1.13,654,1.222,655,1.337,656,1.337,657,2.023,658,1.337,659,2.213,660,1.337,661,3.009,662,1.337,663,1.337,664,2.213,665,1.337,666,1.337,667,1.337,668,2.213,669,1.337,670,1.337,671,1.337,672,1.871,673,1.337,674,1.222,675,1.222,676,1.222,677,1.222,678,1.222,679,1.222,680,1.337,681,1.337,682,1.337,683,1.337,684,1.337,685,1.337,686,1.337]],["title/interfaces/Template.html",[308,1.533,347,2.078]],["body/interfaces/Template.html",[3,0.147,4,0.133,5,0.234,14,0.289,18,0.017,27,0.806,31,0.791,32,0.621,40,0.089,41,0.08,43,0.791,44,2.027,46,0.006,47,0.006,51,0.718,66,1.764,87,1.127,94,0.685,101,0.928,102,0.978,117,2.019,118,3.65,122,0.832,123,1.127,127,0.464,129,1.538,133,2.052,137,2.19,141,1.452,143,1.454,144,1.949,153,1.051,169,2.579,176,1.051,196,2.113,210,1.567,222,0.753,223,0.986,246,2.751,252,0.753,301,2.977,308,1.452,309,1.867,310,0.929,311,0.878,312,0.986,313,1.219,314,1.117,315,1.334,316,1.334,317,1.334,318,1.334,319,1.334,320,1.334,321,1.334,322,1.334,323,1.334,324,1.334,325,1.334,326,1.334,327,1.334,328,1.334,329,1.334,330,1.334,331,1.334,332,1.334,333,1.334,334,1.334,335,1.334,336,1.334,337,2.209,338,1.741,339,2.209,340,1.334,341,2.828,342,2.209,343,0.986,344,2.209,345,1.219,346,1.538,347,4.046,348,1.219,349,1.538,350,2.39,351,1.219,352,1.538,353,1.051,354,1.219,355,2.872,356,2.229,357,3.08,358,2.209,359,1.867,360,1.219,361,4.122,362,1.051,363,1.334,364,1.334,365,3.644,366,2.019,367,2.209,368,2.209,369,1.334,370,4.513,371,2.39,372,4.033,373,1.867,374,2.209,375,1.334,376,1.219,377,1.334,378,5.303,379,1.051,380,1.127,381,2.585,382,2.019,383,1.051,384,1.127,385,1.219,386,1.219,387,1.127,388,1.219,389,1.334,390,1.334,391,1.334,392,1.334,393,2.019,394,2.828,395,1.334,396,2.209,397,2.828,398,1.334,399,1.334,400,1.219,401,3.331,402,2.209,403,1.127,404,4.199,405,5.352,406,2.585,407,2.828,408,2.828,409,1.334,410,4.846,411,2.019,412,1.334,413,0.878,414,1.334,415,1.334,416,1.334,417,1.334,418,1.219,419,1.219,420,3.331,421,2.828,422,3.08,423,2.828,424,2.585,425,4.159,426,3.928,427,4.159,428,4.456,429,3.928,430,3.288,431,4.743,432,3.288,433,4.797,434,3.005,435,3.801,436,3.801,437,3.928,438,3.288,439,4.651,440,4.159,441,4.797,442,3.644,443,1.334,444,2.019,445,1.334,446,3.644,447,1.334,448,2.828,449,1.219,450,4.513,451,1.334,452,2.209,453,2.828,454,1.334,455,2.828,456,2.209,457,1.334,458,3.288,459,2.828,460,1.334,461,3.395,462,1.867,463,2.209,464,1.334,465,1.334,466,1.334,467,1.334,468,1.334,469,3.801,470,1.334,471,1.219,472,2.164,473,1.334,474,2.828,475,1.334,476,2.585,477,1.334,478,2.828,479,2.347,480,1.334,481,2.828,482,1.334,483,3.08,484,2.828,485,2.585,486,1.219,487,1.334,488,1.334,489,2.585,490,1.334,491,1.334,492,2.209,493,2.209,494,2.828,495,1.219,496,2.209,497,1.334,498,1.334,499,2.585,500,3.59,501,1.334,502,2.209,503,2.209,504,1.219,505,3.928,506,1.334,507,3.005,508,2.019,509,2.209,510,1.334,511,1.334,512,1.334,513,1.219,514,1.334,515,1.334,516,1.334,517,4.351,518,1.334,519,1.334,520,2.209,521,1.127,522,1.334,523,1.334,524,1.334,525,1.334,526,1.334,527,1.334,528,1.334,529,1.334,530,1.334,531,1.334,532,1.334,533,1.334,534,1.334,535,1.051,536,1.334,537,1.334,538,2.209,539,1.334,540,1.334,541,1.334,542,1.334,543,2.43,544,1.334,545,1.538,546,1.334,547,1.334,548,1.219,549,1.334,550,1.334,551,1.334,552,4.651,553,1.334,554,1.051,555,1.334,556,1.334,557,1.334,558,1.219,559,3.095,560,1.334,561,1.334,562,1.334,563,1.334,564,2.872,565,1.553,566,3.644,567,1.334,568,1.334,569,2.828,570,2.209,571,1.334,572,4.386,573,1.334,574,3.288,575,3.928,576,1.334,577,1.334,578,0.832,579,2.09,580,2.828,581,1.327,582,1.334,583,1.334,584,1.334,585,1.334,586,1.127,587,1.219,588,1.334,589,3.288,590,1.334,591,1.334,592,1.334,593,2.209,594,1.334,595,1.219,596,1.334,597,1.051,598,1.334,599,2.828,600,1.127,601,1.334,602,1.334,603,1.334,604,1.334,605,1.334,606,1.538,607,1.334,608,2.591,609,1.334,610,0.445,611,1.219,612,2.828,613,1.334,614,1.334,615,1.334,616,1.334,617,1.334,618,1.334,619,1.334,620,1.334,621,1.334,622,1.334,623,1.334,624,0.878,625,1.334,626,2.209,627,1.334,628,1.334,629,2.209,630,1.334,631,1.334,632,1.334,633,1.334,634,1.334,635,1.334,636,0.929,637,1.334,638,1.334,639,1.334,640,1.219,641,1.127,642,1.334,643,1.334,644,1.334,645,1.127,646,0.929,647,1.219,648,1.334,649,2.779,650,1.334,651,1.127,652,1.219,653,1.127,654,1.219,655,1.334,656,1.334,657,2.019,658,1.334,659,2.209,660,1.334,661,3.005,662,1.334,663,1.334,664,2.209,665,1.334,666,1.334,667,1.334,668,2.209,669,1.334,670,1.334,671,1.334,672,1.867,673,1.334,674,1.219,675,1.219,676,1.219,677,1.219,678,1.219,679,1.219,680,1.334,681,1.334,682,1.334,683,1.334,684,1.334,685,1.334,686,1.334]],["title/injectables/TemplateEditorService.html",[82,1.13,346,2.078]],["body/injectables/TemplateEditorService.html",[3,0.166,4,0.151,5,0.12,14,0.541,15,1.935,18,0.017,19,1.581,26,2.389,27,0.887,32,0.426,40,0.166,41,0.151,44,2.287,46,0.01,47,0.01,82,1.362,83,1.48,100,2.263,101,1.302,102,1.104,103,1.606,133,2.244,137,1.893,141,2.695,143,1.644,144,2.499,170,3.04,191,3.287,201,2.785,206,2.111,246,3.206,311,3.601,312,4.044,314,1.421,343,1.846,346,2.504,353,1.968,362,2.835,376,2.282,422,2.111,500,2.282,507,4.468,513,2.282,543,3.613,595,3.287,597,1.968,600,2.111,606,3.404,608,4.233,742,0.705,781,4.694,805,2.497,821,2.497,822,2.497,834,2.785,835,5.452,862,4.889,876,3.597,902,4.011,1007,1.846,1190,2.282,1294,2.497,1295,5.438,1296,5.95,1297,4.64,1298,5.95,1299,4.64,1300,4.64,1301,3.221,1302,4.64,1303,3.221,1304,6.306,1305,4.64,1306,5.438,1307,3.221,1308,3.221,1309,4.64,1310,3.221,1311,4.64,1312,3.221,1313,4.64,1314,2.497,1315,3.221,1316,3.221,1317,4.216,1318,3.221,1319,5.95,1320,3.221,1321,5.452,1322,3.221,1323,3.221,1324,3.221,1325,3.221,1326,4.64,1327,3.221,1328,3.221,1329,3.221,1330,3.221,1331,3.221,1332,3.221,1333,3.221,1334,3.221,1335,3.221,1336,3.221,1337,3.221,1338,4.64,1339,2.785,1340,3.221,1341,3.221,1342,4.011,1343,3.221,1344,3.221,1345,3.221,1346,3.221,1347,3.221,1348,3.221,1349,3.221,1350,4.64,1351,3.221,1352,2.785,1353,3.221,1354,3.221,1355,3.221,1356,3.221,1357,4.011,1358,3.221,1359,2.785,1360,2.785,1361,3.221,1362,3.221,1363,3.221,1364,3.221,1365,3.221,1366,3.221,1367,3.221,1368,4.64,1369,4.64,1370,3.221,1371,4.701,1372,5.438,1373,3.221,1374,3.221,1375,3.221,1376,3.221,1377,3.221,1378,4.64,1379,5.438,1380,5.438,1381,5.95,1382,3.221,1383,3.221,1384,3.221,1385,2.785,1386,3.221,1387,5.989,1388,3.221,1389,3.221]],["title/modules/TemplatePlaygroundModule.html",[48,1.401,1390,2.728]],["body/modules/TemplatePlaygroundModule.html",[3,0.256,4,0.232,5,0.184,18,0.017,32,1.02,40,0.256,41,0.232,46,0.013,47,0.013,48,1.803,50,2.278,51,2.067,52,2.841,53,3.881,54,3.456,55,3.656,56,2.841,65,3.555,66,2.398,67,2.676,69,2.841,311,2.53,312,2.841,343,2.841,345,3.513,346,4.024,347,3.349,348,3.513,349,4.024,350,3.249,351,3.513,352,4.024,353,3.029,354,3.513,535,4.797,1390,5.586,1391,4.286,1392,4.286,1393,4.286,1394,4.286,1395,4.958,1396,6.205,1397,6.205,1398,4.958,1399,4.286,1400,6.205,1401,4.958,1402,6.205,1403,4.958,1404,6.205,1405,4.958]],["title/classes/Ticket.html",[41,0.18,738,1.13]],["body/classes/Ticket.html",[3,0.163,4,0.147,5,0.117,7,0.717,10,4.162,14,0.529,17,2.619,18,0.017,19,1.572,27,0.869,32,0.778,40,0.236,41,0.251,46,0.009,47,0.009,73,1.447,102,1.227,103,1.449,124,3.234,133,3.153,134,1.523,137,1.096,141,2.794,164,1.601,168,1.7,178,3.331,195,1.924,252,3.07,258,3.193,314,1.803,543,2.615,545,3.518,578,2.597,688,0.719,693,1.687,694,2.615,695,2.329,698,2.711,701,1.7,713,4.459,716,3.945,722,3.076,723,1.607,732,2.239,738,2.322,740,4.599,741,4.618,742,1.426,743,4.972,744,4.162,749,4.564,750,4.618,754,3.804,755,4.641,764,2.441,765,2.441,766,2.722,771,3.538,775,3.538,776,4.428,777,4.162,780,4.641,781,4.095,783,2.991,786,3.538,787,3.538,964,3.804,974,3.076,992,4.512,1010,2.789,1013,3.538,1014,3.946,1015,3.946,1016,4.172,1019,4.641,1021,5.403,1023,3.538,1025,4.162,1037,5.44,1038,2.441,1040,2.722,1044,2.441,1048,2.722,1049,3.234,1050,2.722,1051,2.722,1052,2.722,1058,2.441,1059,2.722,1181,2.231,1406,2.441,1407,3.149,1408,3.149,1409,3.149,1410,3.149,1411,5.052,1412,3.149,1413,3.149,1414,3.149,1415,3.149,1416,3.149,1417,3.149,1418,2.441,1419,3.149,1420,3.149,1421,3.946,1422,3.946,1423,3.538,1424,3.946,1425,3.946,1426,3.804,1427,2.722]],["title/controllers/TicketController.html",[0,1.77,1428,2.728]],["body/controllers/TicketController.html",[0,2.151,2,1.095,3,0.129,4,0.117,5,0.093,7,0.728,8,2.519,11,2.724,14,0.421,15,1.603,17,2.156,18,0.017,19,1.294,21,3.209,26,2.449,27,0.838,32,0.872,33,0.766,34,1.64,35,1.043,40,0.129,41,0.117,42,1.64,43,1.15,44,1.974,46,0.008,47,0.008,89,2.682,98,0.915,100,2.156,101,1.309,102,1.132,103,1.53,120,2.519,127,1.264,128,1.672,130,2.742,137,2.17,147,2.956,162,1.773,164,1.769,169,3.301,176,2.86,192,1.547,194,2.374,196,2.996,210,1.751,215,5.569,216,3.53,219,2.075,220,4.077,221,3.429,222,2.813,223,2.682,224,2.724,226,1.94,227,2.98,228,4.072,237,1.64,239,1.529,240,1.94,244,1.962,245,2.203,252,2.726,265,2.055,266,4.072,301,2.742,359,1.64,479,1.682,521,2.519,543,3.01,554,2.349,559,3.463,564,3.463,565,1.467,572,3.442,578,2.264,581,2.062,610,1.36,652,3.722,698,1.462,735,3.929,738,2.301,742,1.666,833,2.682,1012,3.921,1028,2.724,1068,3.323,1069,2.98,1070,4.083,1071,2.724,1072,2.724,1084,2.163,1089,3.323,1094,2.724,1095,2.163,1097,3.323,1099,4.072,1104,2.163,1108,2.163,1110,2.163,1116,1.94,1117,3.323,1118,3.323,1119,3.323,1120,1.773,1125,2.163,1127,1.773,1128,1.773,1133,2.163,1134,2.163,1135,4.083,1136,4.541,1137,4.541,1139,4.394,1141,2.163,1142,3.323,1143,2.163,1152,2.163,1153,2.163,1157,2.163,1159,2.163,1168,1.974,1173,0.871,1185,3.323,1428,2.724,1429,2.163,1430,2.163,1431,2.163,1432,2.502,1433,2.502,1434,2.502,1435,2.502,1436,2.502,1437,2.502,1438,2.502,1439,2.502,1440,2.724,1441,4.247,1442,2.502,1443,2.502,1444,2.502,1445,2.502,1446,3.844,1447,2.502,1448,2.502,1449,2.502,1450,2.98,1451,2.502,1452,2.86,1453,2.163,1454,1.94,1455,2.502,1456,2.502,1457,4.9,1458,4.9,1459,5.253,1460,4.072,1461,5.253,1462,5.253,1463,5.253,1464,2.502,1465,2.502,1466,3.323,1467,2.502,1468,2.502,1469,2.502,1470,3.323,1471,2.502,1472,2.502]],["title/classes/TicketDoesNotExist.html",[41,0.18,1473,1.863]],["body/classes/TicketDoesNotExist.html",[3,0.251,4,0.227,5,0.181,7,0.489,18,0.017,27,0.73,40,0.389,41,0.374,46,0.013,47,0.013,98,1.157,99,1.312,127,1.654,128,1.207,565,1.99,610,1.587,688,1.109,696,1.725,738,2.211,742,1.063,798,2.131,1163,1.849,1164,1.849,1165,1.849,1166,1.849,1167,1.849,1168,2.134,1170,1.849,1171,1.488,1172,1.768,1173,1.692,1473,2.964,1474,2.624,1475,3.83,1476,2.48,1477,2.48,1478,2.351,1479,2.351,1480,2.351]],["title/classes/TicketError.html",[41,0.18,1475,1.863]],["body/classes/TicketError.html",[3,0.244,4,0.221,5,0.175,7,0.605,18,0.017,19,1.077,27,0.83,40,0.387,41,0.373,46,0.012,47,0.012,94,1.878,98,1.432,99,1.624,100,1.795,101,1.032,102,0.793,103,1.274,127,1.882,128,1.171,244,2.408,565,2.008,610,1.222,688,1.077,696,1.693,738,2.196,742,1.032,798,2.123,1007,2.704,1163,2.288,1164,1.795,1165,1.795,1166,1.795,1167,1.795,1168,2.305,1170,1.795,1171,1.445,1172,1.716,1173,1.643,1473,2.282,1474,2.547,1475,3.829,1476,2.408,1477,2.408,1478,2.282,1479,2.282,1480,2.282,1481,4.719]],["title/classes/TicketIdValidationError.html",[41,0.18,1478,1.863]],["body/classes/TicketIdValidationError.html",[3,0.25,4,0.227,5,0.18,7,0.487,18,0.017,27,0.728,40,0.389,41,0.374,46,0.013,47,0.013,98,1.154,99,1.308,127,1.651,128,1.203,565,1.989,610,1.255,688,1.106,696,1.887,738,2.21,742,1.338,798,2.13,1163,1.843,1164,1.843,1165,1.843,1166,1.843,1167,1.843,1168,2.334,1170,1.843,1171,1.484,1172,1.763,1173,1.687,1473,2.344,1474,2.616,1475,3.829,1476,2.473,1477,2.473,1478,2.959,1479,2.344,1480,2.344]],["title/classes/TicketInsufficientPermissionsError.html",[41,0.18,1479,1.863]],["body/classes/TicketInsufficientPermissionsError.html",[3,0.251,4,0.227,5,0.18,7,0.488,18,0.017,27,0.729,40,0.389,41,0.374,46,0.013,47,0.013,98,1.155,99,1.31,127,1.653,128,1.205,565,1.99,610,1.256,688,1.108,696,1.723,738,2.21,742,1.062,798,2.13,1163,1.846,1164,1.846,1165,1.846,1166,1.846,1167,1.846,1168,2.132,1170,2.329,1171,1.875,1172,1.766,1173,1.69,1473,2.348,1474,2.62,1475,3.83,1476,2.476,1477,2.476,1478,2.348,1479,2.962,1480,2.348]],["title/modules/TicketModule.html",[48,1.401,63,2.523]],["body/modules/TicketModule.html",[2,2.86,3,0.279,4,0.252,5,0.201,18,0.017,32,1.006,33,1.652,40,0.279,41,0.252,46,0.013,47,0.013,48,2.559,50,2.48,51,2.251,52,3.092,53,3.092,54,2.754,55,3.797,56,3.092,63,4.987,65,3.746,66,2.611,67,2.913,69,3.092,72,3.824,73,2.48,101,1.43,178,3.163,693,1.397,738,1.584,1056,4.666,1057,4.284,1126,3.537,1180,5.068,1181,3.824,1426,4.632,1428,4.984,1452,4.65,1453,4.666,1454,4.184,1482,4.666,1483,4.666,1484,5.397,1485,5.397]],["title/classes/TicketNotModifiedError.html",[41,0.18,1480,1.863]],["body/classes/TicketNotModifiedError.html",[3,0.251,4,0.227,5,0.18,7,0.488,18,0.017,27,0.729,40,0.389,41,0.374,46,0.013,47,0.013,98,1.155,99,1.31,127,1.653,128,1.205,565,1.99,610,1.256,688,1.108,696,1.723,738,2.21,742,1.062,798,2.13,1163,1.846,1164,1.846,1165,1.846,1166,1.846,1167,1.846,1168,2.132,1170,1.846,1171,1.486,1172,2.227,1173,2.132,1473,2.348,1474,2.62,1475,3.83,1476,2.476,1477,2.476,1478,2.348,1479,2.348,1480,2.962]],["title/classes/TicketRelationConflict.html",[41,0.18,1476,1.965]],["body/classes/TicketRelationConflict.html",[3,0.251,4,0.227,5,0.18,7,0.488,18,0.017,27,0.729,40,0.389,41,0.374,46,0.013,47,0.013,98,1.155,99,1.31,127,1.653,128,1.205,565,1.99,610,1.256,688,1.108,696,1.723,738,2.21,742,1.062,798,2.13,1163,1.846,1164,1.846,1165,2.329,1166,2.329,1167,1.846,1168,2.132,1170,1.846,1171,1.486,1172,1.766,1173,1.69,1473,2.348,1474,2.62,1475,3.83,1476,3.124,1477,2.476,1478,2.348,1479,2.348,1480,2.348]],["title/injectables/TicketService.html",[82,1.13,1452,2.352]],["body/injectables/TicketService.html",[3,0.124,4,0.112,5,0.089,7,0.591,14,0.402,15,2.139,18,0.017,19,1.341,21,2.781,26,2.368,27,0.806,29,2.005,32,0.909,33,0.733,40,0.124,41,0.24,43,1.707,44,1.786,46,0.008,47,0.008,73,1.1,82,1.09,83,1.1,85,2.005,94,1.478,98,0.884,100,2.235,101,1.286,102,0.988,103,1.586,104,2.631,110,1.568,120,2.433,128,1.522,129,2.005,130,3.637,137,2.358,141,1.478,143,1.221,147,1.1,164,1.678,169,3.273,184,2.042,187,2.781,192,1.274,194,1.639,196,2.94,210,2.374,219,2.005,222,1.625,237,1.568,244,1.895,245,2.128,246,1.625,264,1.568,265,1.959,288,4.666,301,3.148,461,1.291,479,1.625,565,0.619,578,1.796,579,3.881,581,1.866,586,3.361,610,0.961,624,1.895,692,3.361,693,1.781,698,1.413,705,2.433,721,1.877,723,2.322,732,1.549,735,3.872,738,2.315,741,2.631,742,1.672,750,2.631,833,1.371,973,2.879,1012,4.507,1016,3.225,1064,3.21,1065,2.631,1070,4.265,1071,2.631,1072,3.225,1094,2.631,1099,3.977,1106,1.855,1120,1.695,1126,1.568,1128,1.695,1131,1.549,1135,4.837,1140,1.898,1149,2.269,1151,2.433,1158,2.879,1171,0.733,1183,2.068,1190,4.491,1192,3.934,1193,5.52,1198,3.934,1200,3.21,1202,3.21,1208,3.21,1209,1.855,1210,2.068,1211,1.695,1213,1.695,1214,1.695,1215,2.068,1226,1.855,1228,4.801,1231,4.435,1232,3.977,1234,5.08,1235,2.068,1236,2.068,1241,2.068,1242,3.977,1258,2.068,1262,3.21,1288,3.21,1431,3.21,1441,4.064,1450,2.879,1452,2.269,1454,1.855,1466,3.21,1470,3.21,1473,2.686,1475,1.796,1478,2.201,1479,1.796,1480,1.796,1486,2.068,1487,3.21,1488,2.393,1489,2.393,1490,3.714,1491,2.393,1492,3.714,1493,2.393,1494,6.652,1495,3.714,1496,2.393,1497,3.21,1498,2.393,1499,3.714,1500,2.393,1501,2.393,1502,1.855,1503,2.393,1504,2.393,1505,2.393,1506,2.393,1507,2.393,1508,2.393,1509,3.714,1510,2.393,1511,2.393,1512,2.393,1513,5.13,1514,2.393,1515,2.393,1516,2.393,1517,2.393,1518,2.393,1519,3.714,1520,3.714,1521,2.393,1522,2.393,1523,2.393,1524,2.393,1525,3.714,1526,2.068,1527,2.393,1528,2.393,1529,2.393,1530,2.393,1531,2.393,1532,2.393,1533,2.393,1534,2.393]],["title/classes/TicketSlugValidationError.html",[41,0.18,1477,1.965]],["body/classes/TicketSlugValidationError.html",[3,0.25,4,0.227,5,0.18,7,0.487,18,0.017,27,0.728,40,0.389,41,0.374,46,0.013,47,0.013,98,1.154,99,1.308,127,1.651,128,1.203,565,1.989,610,1.255,688,1.106,696,1.887,738,2.21,742,1.06,798,2.13,1163,1.843,1164,1.843,1165,1.843,1166,1.843,1167,2.327,1168,2.334,1170,1.843,1171,1.484,1172,1.763,1173,1.687,1473,2.344,1474,2.616,1475,3.829,1476,2.473,1477,3.121,1478,2.344,1479,2.344,1480,2.344]],["title/classes/UpdateProjectDto.html",[41,0.18,1109,2.523]],["body/classes/UpdateProjectDto.html",[3,0.163,4,0.148,5,0.118,7,0.765,14,0.531,17,2.381,18,0.017,19,1.429,27,0.849,32,0.827,35,1.318,40,0.163,41,0.314,46,0.009,47,0.009,101,1.625,102,1.228,103,2.111,141,1.822,143,2.336,144,2.999,164,1.641,192,1.464,193,2.104,194,1.462,210,2.244,219,2.471,222,3.121,258,3.327,265,1.462,314,1.998,479,2.855,581,1.15,610,1.185,624,2.336,653,2.999,687,3.287,688,0.722,690,2.451,691,2.623,693,2.046,694,2.623,695,2.336,696,1.288,697,3.243,698,2.622,701,2.471,703,1.811,704,3.942,705,4.735,706,3.287,713,4.358,714,3.157,715,4.179,716,2.623,721,2.184,722,3.38,723,2.336,726,3.38,729,3.526,730,3.243,731,1.706,732,1.318,733,5.411,734,3.957,738,1.344,742,1.001,754,4.624,769,4.179,783,2.999,792,4.171,798,1.592,801,3.184,964,3.243,1011,4.435,1012,4.102,1020,3.548,1033,3.957,1109,3.526,1121,2.451,1151,2.999,1172,1.665,1535,5.642,1536,4.577,1537,4.577,1538,4.577,1539,5.381,1540,3.161,1541,3.161,1542,5.099,1543,3.161,1544,3.161,1545,3.161,1546,4.577,1547,4.577,1548,2.733,1549,3.161,1550,2.733,1551,2.451,1552,3.161,1553,3.161]],["title/classes/UpdateTicketDto.html",[41,0.18,1441,2.352]],["body/classes/UpdateTicketDto.html",[3,0.152,4,0.138,5,0.109,7,0.738,14,0.494,17,2.42,18,0.017,19,1.452,27,0.886,32,0.841,35,1.227,40,0.152,41,0.316,46,0.009,47,0.009,102,1.233,103,2.118,110,3.735,122,2.101,124,3.658,141,1.171,168,3.723,192,1.58,193,1.996,194,1.387,252,2.879,258,3.372,265,1.821,314,1.33,479,2.494,545,3.787,581,1.07,610,1.124,624,3.745,636,3.077,646,3.435,688,0.672,691,2.489,694,2.489,695,2.216,696,1.223,698,1.652,699,2.846,700,3.077,701,3.077,703,1.686,704,3.887,713,3.154,714,2.101,715,3.077,716,2.958,721,2.247,722,2.489,723,2.909,726,3.771,727,3.715,729,4.313,730,3.077,731,1.588,732,1.227,735,3.154,737,2.281,738,2.286,740,4.313,741,4.663,743,4.663,744,4.419,749,4.002,757,4.463,758,4.463,761,4.928,764,4.002,765,4.002,771,4.933,775,4.002,776,3.658,781,3.383,786,4.933,787,4.002,789,4.002,792,3.367,793,4.463,794,3.755,795,3.755,798,1.539,1069,3.367,1112,2.846,1211,2.085,1272,4.039,1411,4.419,1421,4.463,1422,4.463,1423,4.002,1424,4.463,1425,4.463,1441,3.154,1450,2.281,1548,2.544,1550,2.544,1551,2.281,1554,5.69,1555,3.367,1556,3.367,1557,4.343,1558,2.942,1559,2.942,1560,5.701,1561,2.942,1562,2.942,1563,5.163,1564,2.942,1565,2.942,1566,2.942,1567,2.942,1568,4.343]],["title/classes/UpdateUserDto.html",[41,0.18,214,2.523]],["body/classes/UpdateUserDto.html",[3,0.267,4,0.242,5,0.192,7,0.724,13,2.157,14,0.869,17,1.967,18,0.017,19,1.18,27,0.822,32,0.842,35,2.157,40,0.267,41,0.323,46,0.013,47,0.013,101,1.67,102,0.869,134,3.081,164,1.715,192,1.284,193,2.377,194,1.652,210,2.467,212,3.251,214,4.524,258,3.152,265,2.035,314,1.951,624,2.639,688,1.18,691,3.65,698,2.423,704,2.792,706,3.16,712,4.009,721,1.951,726,3.65,727,3.892,728,4.174,731,2.792,971,4.938,987,3.665,992,3.389,1083,4.514,1269,5.968,1270,4.471,1285,4.471,1293,5.507,1569,5.507,1570,5.507]],["title/classes/User.html",[41,0.18,164,0.917]],["body/classes/User.html",[3,0.201,4,0.182,5,0.145,7,0.391,14,0.654,17,2.653,18,0.017,19,1.592,27,0.887,29,2.858,32,0.7,40,0.311,41,0.182,46,0.011,47,0.011,73,1.787,89,3.034,101,1.561,102,1.238,111,4.577,118,2.701,125,5.146,133,2.561,134,2.561,137,1.354,141,3.069,164,1.9,166,3.235,178,3.374,204,3.852,205,4.089,252,2.316,297,4.677,314,1.979,413,3.559,581,1.415,645,4.235,688,0.888,694,3.034,695,2.701,698,2.458,714,3.126,716,2.228,732,2.208,738,1.554,769,2.755,783,3.469,800,2.099,877,2.376,901,3.235,974,2.228,994,4.104,1010,3.235,1017,5.204,1023,5.01,1025,4.104,1028,3.751,1037,5.533,1038,3.014,1044,3.014,1046,2.548,1101,3.014,1171,1.621,1265,4.577,1411,4.104,1571,2.755,1572,4.579,1573,5.294,1574,7.137,1575,3.889,1576,3.889,1577,5.294,1578,5.294,1579,5.294,1580,5.294,1581,3.889,1582,3.889,1583,4.577,1584,3.889,1585,5.294,1586,4.577,1587,3.889,1588,4.577,1589,3.362,1590,3.362,1591,2.755,1592,3.362,1593,3.362,1594,3.014]],["title/modules/UserModule.html",[48,1.401,64,2.352]],["body/modules/UserModule.html",[2,2.369,3,0.28,4,0.253,5,0.201,18,0.016,32,0.967,33,1.658,40,0.28,41,0.253,46,0.013,47,0.013,48,2.563,50,2.489,51,2.258,52,3.103,53,3.103,54,2.763,55,3.802,56,4.036,64,4.708,65,3.754,66,2.619,67,2.923,69,3.103,72,3.837,73,2.489,101,1.433,164,1.289,178,3.169,229,4.198,230,4.286,1049,4.642,1180,5.079,1591,4.991,1595,4.681,1596,4.681,1597,4.681,1598,5.415,1599,5.415]],["title/injectables/UserService.html",[82,1.13,230,2.078]],["body/injectables/UserService.html",[3,0.121,4,0.109,5,0.087,7,0.65,13,2.114,14,0.393,15,1.522,18,0.017,19,1.436,26,2.553,27,0.876,32,0.832,33,0.717,40,0.121,41,0.171,44,2.118,46,0.007,47,0.007,73,1.076,82,1.072,83,1.076,86,2.83,94,0.932,98,0.869,99,0.985,100,2.393,101,1.565,102,1.057,103,1.698,104,2.587,118,1.863,128,1.641,130,2.659,137,2.415,147,2.676,164,1.894,166,2.23,167,3.592,168,2.736,169,3.399,170,2.392,171,3.156,173,3.716,178,1.766,184,0.932,187,4.18,192,1.722,193,2.676,194,1.86,195,3.097,196,3.224,197,4.287,198,3.156,199,4.123,204,3.947,205,3.92,206,3.322,207,3.592,209,3.156,210,2.204,211,3.156,214,4.332,219,2.736,222,1.597,230,3.283,235,3.479,244,1.863,245,2.092,246,1.024,248,3.156,249,1.658,255,2.587,256,4.382,265,1.166,288,4.236,297,4.87,301,3.258,413,1.863,483,3.322,578,1.766,579,3.149,696,1.028,700,2.587,732,2.114,742,1.274,774,3.156,800,1.263,803,1.658,829,3.93,877,3.844,901,2.23,969,3.156,974,2.572,986,1.814,1049,1.658,1135,3.322,1190,4.309,1193,3.93,1199,3.156,1209,1.814,1226,4.515,1232,3.479,1264,1.814,1583,4.382,1600,2.023,1601,2.587,1602,3.651,1603,3.651,1604,3.651,1605,3.651,1606,3.651,1607,2.341,1608,2.341,1609,4.488,1610,4.488,1611,4.488,1612,3.651,1613,6.082,1614,2.341,1615,3.156,1616,5.069,1617,3.156,1618,3.651,1619,3.156,1620,3.651,1621,2.341,1622,5.824,1623,3.651,1624,2.341,1625,3.651,1626,2.341,1627,4.382,1628,2.341,1629,3.651,1630,2.587,1631,4.382,1632,3.651,1633,2.341,1634,3.651,1635,2.341,1636,3.651,1637,3.156,1638,2.341,1639,2.341,1640,3.651,1641,4.488,1642,2.341,1643,2.341,1644,2.023,1645,2.341,1646,2.341,1647,2.341,1648,2.341,1649,3.651,1650,5.069,1651,2.341,1652,2.341,1653,3.651,1654,4.488,1655,2.341,1656,2.341,1657,3.651,1658,2.341,1659,2.341,1660,2.341,1661,2.341,1662,2.341,1663,2.341]],["title/injectables/ZipExportService.html",[82,1.13,349,2.078]],["body/injectables/ZipExportService.html",[3,0.207,4,0.187,5,0.243,13,1.672,14,0.674,15,2.254,18,0.017,19,1.396,23,2.841,26,2.224,27,0.813,31,2.81,32,0.53,40,0.207,41,0.187,44,1.396,46,0.011,47,0.011,82,1.587,83,1.843,100,2.056,101,1.182,102,1.028,103,1.459,116,3.108,137,2.379,147,2.81,210,1.337,246,3.079,287,3.466,292,3.466,298,3.108,311,3.339,343,2.297,347,3.532,349,2.918,350,4.477,353,2.45,355,2.45,356,2.45,361,2.627,362,2.45,371,2.627,372,4.952,373,4.714,382,2.841,403,4.007,413,2.046,472,2.758,489,2.841,600,2.627,606,2.918,608,3.302,641,3.542,646,2.164,657,4.987,661,4.637,672,3.542,674,2.841,675,2.841,676,2.841,677,2.841,678,2.841,679,2.841,695,2.758,753,3.108,788,3.108,805,4.19,821,3.108,822,3.108,876,3.108,894,3.108,1007,3.504,1027,3.466,1149,2.45,1342,3.466,1357,5.286,1359,4.673,1360,5.286,1460,3.108,1555,3.108,1556,3.108,1601,2.841,1630,3.83,1664,5.073,1665,3.108,1666,5.405,1667,5.405,1668,6.544,1669,5.405,1670,4.009,1671,5.405,1672,4.009,1673,6.324,1674,4.009,1675,4.19,1676,4.74,1677,4.009,1678,4.009,1679,4.009,1680,5.286,1681,4.009,1682,4.009,1683,4.009,1684,4.009,1685,4.009,1686,4.009,1687,4.009,1688,4.009,1689,3.108,1690,4.009,1691,4.009,1692,5.405,1693,4.009,1694,5.405,1695,4.009,1696,6.544,1697,3.466,1698,4.009,1699,4.009,1700,4.009,1701,4.009,1702,4.009,1703,4.009,1704,3.466,1705,4.009,1706,3.466,1707,3.466,1708,4.009,1709,4.009,1710,4.009,1711,4.009,1712,4.673,1713,4.009,1714,3.108,1715,3.466,1716,4.009,1717,4.009,1718,4.009,1719,4.009,1720,4.009,1721,4.009]],["title/coverage.html",[384,3.446]],["body/coverage.html",[0,2.99,1,2.478,5,0.13,6,3.023,18,0.017,31,1.607,36,2.136,41,0.367,46,0.01,47,0.01,54,1.784,82,2.14,84,3.023,102,0.956,160,2.478,161,3.023,164,0.832,173,2.136,199,2.291,210,1.166,214,2.291,216,2.753,230,1.887,232,2.136,239,2.136,274,2.136,286,3.023,308,2.687,309,2.291,311,3.721,312,3.867,313,4.375,338,2.136,346,1.887,347,1.887,349,1.887,352,1.887,357,2.291,384,2.291,461,3.936,535,2.136,606,1.887,687,2.136,689,3.023,690,3.813,693,0.905,735,2.136,736,3.023,737,3.813,738,1.026,797,3.023,800,1.887,804,3.023,806,3.023,807,3.813,808,3.813,912,2.478,913,3.023,951,3.023,952,3.023,962,3.023,986,2.711,987,4.032,1002,2.711,1009,4.032,1041,2.478,1057,2.291,1061,2.478,1062,3.023,1109,2.291,1123,2.136,1127,2.478,1131,1.458,1140,1.458,1145,1.53,1148,1.53,1156,1.53,1161,3.612,1162,1.607,1169,1.691,1174,1.607,1182,3.023,1213,2.478,1214,2.478,1264,2.711,1294,3.813,1314,5.375,1317,2.711,1406,3.813,1426,2.478,1428,2.478,1429,3.023,1441,2.136,1452,2.136,1473,1.691,1474,3.742,1475,1.691,1476,1.784,1477,1.784,1478,1.691,1479,1.691,1480,1.691,1486,3.023,1502,2.711,1535,3.023,1554,3.023,1569,3.023,1571,4.032,1591,2.478,1600,3.023,1627,3.023,1664,3.813,1665,3.813,1675,2.711,1722,3.497,1723,3.497,1724,6.749,1725,5.691,1726,3.497,1727,3.497,1728,3.497,1729,5.691,1730,8.07,1731,7.195,1732,4.919,1733,4.919,1734,3.023,1735,7.876,1736,4.919,1737,3.023,1738,5.691,1739,4.919,1740,4.919,1741,5.691,1742,4.919,1743,4.919,1744,3.497,1745,3.023,1746,5.338,1747,3.023,1748,3.497,1749,3.497]],["title/dependencies.html",[51,1.932,649,2.106]],["body/dependencies.html",[18,0.017,33,1.698,35,2.313,41,0.311,46,0.014,47,0.014,51,2.313,71,4.299,73,2.548,190,3.177,277,4.299,701,2.993,731,2.993,732,2.313,799,3.634,931,4.299,948,4.794,955,5.152,960,4.299,1211,3.929,1551,4.299,1637,4.794,1750,6.646,1751,7.117,1752,5.545,1753,5.545,1754,5.545,1755,5.545,1756,5.545,1757,5.545,1758,5.545,1759,5.545,1760,5.545,1761,5.545,1762,5.545,1763,5.545,1764,5.545,1765,5.545,1766,5.545,1767,5.545,1768,5.545,1769,5.545,1770,5.545,1771,5.545,1772,5.545,1773,5.545]],["title/miscellaneous/functions.html",[1774,1.963,1775,4.004]],["body/miscellaneous/functions.html",[7,0.7,9,4.252,14,0.65,18,0.016,22,2.996,26,2.676,27,0.767,30,2.996,31,1.776,46,0.011,47,0.011,54,3.062,88,3.341,91,2.996,98,0.92,100,2.648,101,1.523,102,1.009,103,1.924,110,2.533,115,5.23,118,3.062,125,2.739,127,1.423,130,1.87,141,2.389,144,2.758,145,4.652,147,1.776,164,0.92,167,2.739,168,2.086,192,1.309,194,2.224,196,2.199,197,2.362,204,2.086,205,2.215,222,2.951,250,2.533,252,1.691,265,1.684,356,3.938,380,2.533,387,2.533,424,3.736,462,2.533,545,2.086,554,3.221,565,1.904,587,2.739,597,2.362,636,2.086,651,3.455,688,0.882,693,1.001,696,1.484,698,1.47,699,2.533,700,2.739,703,2.215,704,2.086,714,3.368,715,2.739,719,2.996,721,1.614,722,3.021,723,3.062,738,1.548,742,0.846,753,2.996,777,2.996,829,4.087,848,3.341,893,2.996,901,2.362,906,3.341,954,3.341,1002,4.087,1007,2.215,1008,3.341,1020,4.997,1112,4.224,1127,3.736,1139,2.996,1149,3.666,1168,1.836,1213,3.736,1214,3.736,1242,2.996,1272,2.739,1275,2.996,1287,3.341,1314,5.23,1339,3.341,1440,3.736,1441,3.938,1457,4.558,1458,5.188,1497,3.341,1502,4.087,1526,3.341,1572,2.739,1615,4.558,1619,3.341,1689,2.996,1706,3.341,1714,5.23,1715,3.341,1734,3.341,1737,3.341,1745,3.341,1746,3.341,1747,4.558,1774,2.362,1775,3.341,1776,3.865,1777,6.446,1778,3.865,1779,3.865,1780,3.865,1781,3.865,1782,3.341,1783,3.865,1784,3.865,1785,3.341,1786,3.865,1787,3.865,1788,3.865,1789,3.865,1790,3.865,1791,5.273,1792,6.446,1793,6.446,1794,3.865,1795,3.865,1796,3.865,1797,3.865,1798,3.865,1799,3.865,1800,3.865,1801,3.865,1802,3.865,1803,3.865,1804,3.865,1805,3.341,1806,3.865,1807,3.341,1808,3.865,1809,3.865,1810,3.865,1811,3.865,1812,3.865,1813,3.865,1814,5.273,1815,6.001,1816,5.273,1817,3.865,1818,3.865,1819,3.865,1820,3.865,1821,3.865,1822,3.865,1823,3.865,1824,3.865,1825,3.865,1826,3.865,1827,3.865,1828,3.865,1829,3.865,1830,6.001,1831,3.341,1832,3.865,1833,3.865,1834,3.865,1835,3.865,1836,3.865,1837,3.865]],["title/index.html",[14,0.647,1680,3.329]],["body/index.html",[5,0.24,9,2.422,11,2.422,13,1.426,18,0.016,23,2.422,24,1.959,25,5.002,26,2.437,27,0.576,29,1.846,31,1.571,46,0.01,47,0.01,51,1.426,55,1.846,89,2.774,91,4.358,99,0.923,105,2.422,109,6.084,116,4.358,124,2.422,126,2.956,132,4.185,134,2.342,149,2.956,150,4.739,152,4.185,153,2.089,155,4.185,156,2.422,164,1.338,165,2.089,170,2.24,190,1.959,191,2.422,192,1.202,205,1.959,210,1.614,219,1.846,220,1.959,224,4.331,252,1.496,265,1.547,274,2.089,308,1.361,371,2.24,385,2.422,413,3.119,449,2.422,479,2.118,581,2.347,597,2.089,610,0.885,636,2.613,640,3.983,641,2.24,651,4.006,654,2.422,693,1.935,697,2.422,714,3.241,721,1.047,738,2.155,742,1.466,743,2.422,747,2.956,756,2.956,763,4.185,781,3.173,788,3.753,789,2.65,914,4.185,915,2.65,921,2.956,937,2.956,957,2.65,974,2.774,1007,1.959,1010,2.089,1012,4.514,1046,3.173,1047,2.956,1063,4.185,1065,4.331,1070,4.006,1083,3.43,1112,2.24,1116,3.753,1149,2.958,1150,3.753,1171,1.047,1187,2.956,1268,2.956,1387,2.956,1418,2.65,1423,2.65,1430,4.185,1440,3.983,1460,3.753,1570,2.956,1586,2.956,1589,2.956,1590,4.185,1601,2.422,1630,2.422,1676,5.194,1697,2.956,1704,2.956,1712,2.956,1782,2.956,1807,5.285,1831,2.956,1838,4.185,1839,3.419,1840,3.419,1841,3.419,1842,3.419,1843,4.842,1844,3.419,1845,3.419,1846,2.956,1847,5.621,1848,6.7,1849,6.889,1850,4.842,1851,3.419,1852,3.419,1853,4.842,1854,5.621,1855,3.419,1856,4.842,1857,4.842,1858,4.842,1859,4.842,1860,4.842,1861,6.114,1862,4.185,1863,3.419,1864,3.419,1865,4.842,1866,4.842,1867,5.621,1868,3.419,1869,4.842,1870,4.842,1871,2.956,1872,3.419,1873,3.419,1874,3.419,1875,3.419,1876,3.419,1877,3.419,1878,4.842,1879,4.842,1880,4.842,1881,2.65,1882,3.419,1883,3.419,1884,3.419,1885,3.419,1886,3.419,1887,3.419,1888,3.419,1889,5.621,1890,4.842,1891,3.419,1892,3.419,1893,3.419,1894,3.419,1895,4.842,1896,3.419,1897,3.419,1898,3.419,1899,3.419,1900,3.419,1901,3.419,1902,3.419,1903,3.419,1904,3.419,1905,3.419,1906,3.419,1907,3.419,1908,3.419,1909,4.358,1910,3.419,1911,3.419,1912,3.419,1913,3.419,1914,3.419,1915,3.419,1916,3.419,1917,3.419,1918,3.419,1919,4.842,1920,3.419,1921,3.419,1922,3.419,1923,3.419,1924,3.419,1925,3.419,1926,3.419,1927,3.419,1928,3.419,1929,3.419,1930,3.419,1931,4.842,1932,3.419,1933,3.419,1934,3.419,1935,4.842,1936,3.419,1937,3.419,1938,3.419,1939,3.419,1940,3.419,1941,3.419,1942,3.419,1943,3.419,1944,3.419,1945,3.419,1946,3.419,1947,3.419,1948,3.419,1949,3.419,1950,4.842,1951,3.419,1952,3.419,1953,2.956,1954,3.419,1955,3.419,1956,2.956,1957,3.419,1958,3.419,1959,2.956,1960,3.419,1961,3.983,1962,2.956,1963,2.956,1964,2.65,1965,2.65,1966,2.956]],["title/license.html",[1961,3.726]],["body/license.html",[4,0.318,5,0.232,7,0.229,13,0.952,18,0.012,19,0.521,24,1.308,31,2.03,32,0.302,41,0.107,46,0.007,47,0.007,67,1.232,85,1.232,86,1.77,87,1.496,89,1.308,101,0.783,120,2.346,121,1.617,122,1.104,123,1.496,135,4.696,145,4.468,156,3.129,166,3.919,193,1.049,194,1.841,249,1.617,258,2.187,264,2.346,298,2.775,310,1.232,380,2.894,404,2.346,406,1.617,422,1.496,472,1.165,483,3.277,508,1.617,545,1.232,646,1.232,698,1.902,701,1.232,703,2.865,711,3.818,721,1.663,740,1.496,762,1.77,776,1.617,785,2.894,799,2.346,801,1.232,826,1.973,833,1.308,839,4.323,849,1.973,877,1.395,886,5.546,894,1.77,901,3.055,995,1.973,1010,4.419,1011,3.849,1013,1.77,1067,1.973,1112,1.496,1150,2.775,1171,1.352,1173,0.795,1204,1.973,1272,1.617,1274,1.973,1275,1.77,1281,1.973,1321,1.973,1352,1.973,1371,1.973,1385,3.095,1418,1.77,1440,1.617,1487,5.393,1542,1.973,1555,1.77,1556,4.211,1594,5.966,1601,1.617,1617,3.095,1630,4.651,1631,3.818,1673,3.818,1676,2.775,1689,1.77,1707,3.095,1714,2.775,1785,1.973,1805,1.973,1846,1.973,1862,3.818,1871,3.818,1881,1.77,1909,1.77,1953,1.973,1956,3.818,1959,1.973,1961,5.453,1962,1.973,1963,5.546,1964,3.876,1965,3.424,1966,1.973,1967,2.283,1968,2.283,1969,2.283,1970,6.415,1971,6.895,1972,5.001,1973,5.432,1974,7.054,1975,6.564,1976,2.283,1977,2.283,1978,6.564,1979,6.8,1980,6.564,1981,2.283,1982,5.432,1983,2.283,1984,2.283,1985,2.283,1986,5.001,1987,2.283,1988,5.001,1989,3.58,1990,3.58,1991,2.283,1992,4.416,1993,3.58,1994,3.58,1995,3.58,1996,2.283,1997,3.58,1998,2.283,1999,2.283,2000,2.283,2001,2.283,2002,2.283,2003,2.283,2004,4.416,2005,2.283,2006,3.58,2007,6.895,2008,2.283,2009,5.763,2010,5.001,2011,3.58,2012,2.283,2013,2.283,2014,2.283,2015,2.283,2016,2.283,2017,2.283,2018,4.416,2019,2.283,2020,3.58,2021,2.283,2022,3.58,2023,2.283,2024,7.234,2025,7.283,2026,2.283,2027,2.283,2028,2.283,2029,2.283,2030,2.283,2031,3.58,2032,2.283,2033,2.283,2034,2.283,2035,2.283,2036,5.001,2037,5.432,2038,2.283,2039,3.58,2040,5.001,2041,3.58,2042,5.432,2043,3.58,2044,2.283,2045,2.283,2046,4.416,2047,2.283,2048,2.283,2049,2.283,2050,2.283,2051,3.58,2052,2.283,2053,2.283,2054,4.416,2055,2.283,2056,2.283,2057,2.283,2058,2.283,2059,2.283,2060,5.001,2061,6.564,2062,2.283,2063,2.283,2064,3.58,2065,4.416,2066,3.58,2067,3.58,2068,3.58,2069,3.58,2070,3.58,2071,3.58,2072,4.416,2073,3.58,2074,3.58,2075,3.58,2076,3.58,2077,2.283,2078,3.58,2079,2.283,2080,2.283,2081,5.432,2082,6.026,2083,4.416,2084,3.58,2085,2.283,2086,2.283,2087,3.58,2088,3.58,2089,4.416,2090,3.58,2091,2.283,2092,2.283,2093,2.283,2094,4.416,2095,2.283,2096,2.283,2097,2.283,2098,3.58,2099,2.283,2100,2.283,2101,2.283,2102,2.283,2103,2.283,2104,2.283,2105,2.283,2106,3.58,2107,2.283,2108,2.283,2109,2.283,2110,2.283,2111,2.283,2112,2.283,2113,2.283,2114,2.283,2115,2.283,2116,2.283,2117,2.283,2118,6.239,2119,2.283,2120,2.283,2121,2.283,2122,2.283,2123,2.283,2124,5.001,2125,3.58,2126,5.001,2127,2.283,2128,2.283,2129,2.283,2130,2.283,2131,4.416,2132,2.283,2133,3.58,2134,3.58,2135,2.283,2136,2.283,2137,2.283,2138,2.283,2139,2.283,2140,2.283,2141,2.283,2142,2.283,2143,2.283,2144,2.283,2145,2.283,2146,2.283,2147,2.283,2148,2.283,2149,2.283,2150,2.283,2151,2.283,2152,2.283,2153,2.283,2154,2.283,2155,2.283,2156,3.58,2157,2.283,2158,3.58,2159,2.283,2160,2.283,2161,2.283,2162,2.283,2163,2.283,2164,2.283,2165,2.283,2166,2.283,2167,5.001,2168,4.416,2169,4.416,2170,4.416,2171,3.58,2172,4.416,2173,3.58,2174,3.58,2175,3.58,2176,2.283,2177,2.283,2178,2.283,2179,2.283,2180,2.283,2181,2.283,2182,3.58,2183,2.283,2184,2.283,2185,2.283,2186,5.432,2187,2.283,2188,2.283,2189,2.283,2190,2.283,2191,2.283,2192,2.283,2193,2.283,2194,2.283,2195,2.283,2196,5.432,2197,2.283,2198,2.283,2199,2.283,2200,2.283,2201,2.283,2202,2.283,2203,2.283,2204,2.283,2205,2.283,2206,2.283,2207,2.283,2208,2.283,2209,2.283,2210,2.283,2211,4.416,2212,2.283,2213,2.283,2214,2.283,2215,3.58,2216,2.283,2217,2.283,2218,2.283,2219,2.283,2220,2.283,2221,2.283,2222,2.283,2223,2.283,2224,2.283,2225,2.283,2226,2.283,2227,2.283,2228,2.283,2229,2.283,2230,2.283,2231,3.58,2232,2.283,2233,2.283,2234,3.58,2235,2.283,2236,2.283,2237,2.283,2238,2.283,2239,2.283,2240,2.283,2241,2.283,2242,2.283,2243,2.283,2244,1.973,2245,1.973,2246,2.283,2247,2.283,2248,2.283,2249,2.283,2250,2.283]],["title/modules.html",[50,2.417]],["body/modules.html",[18,0.014,46,0.014,47,0.014,49,4.18,50,2.711,60,3.866,61,3.866,62,3.866,63,3.866,64,3.605,381,4.18,1390,4.18,1399,6.714,1881,4.574,1909,6.021,2251,7.767,2252,7.838]],["title/overview.html",[379,3.213]],["body/overview.html",[2,2.107,18,0.016,36,4.084,46,0.012,47,0.012,48,1.752,49,5.587,50,2.214,51,2.009,52,2.76,53,2.76,54,2.458,55,2.6,56,2.76,57,4.164,58,4.164,59,4.164,60,5.068,61,4.38,62,4.748,63,4.748,64,4.592,65,3.492,66,2.33,67,2.6,83,2.214,230,4.057,232,4.592,270,4.164,272,4.164,273,4.164,274,4.084,310,2.6,338,2.943,346,3.608,349,3.608,352,3.608,379,2.943,461,2.6,472,2.458,535,4.592,688,1.099,1123,4.084,1176,4.164,1177,4.164,1390,5.513,1391,4.164,1392,4.164,1393,4.164,1394,4.164,1452,4.084,1482,4.164,1483,4.164,1595,4.164,1596,4.164,1597,4.164,1644,4.164,2253,4.817,2254,4.817,2255,4.817,2256,4.817]],["title/properties.html",[314,1.418,649,2.106]],["body/properties.html",[7,0.604,18,0.016,46,0.014,47,0.014,150,4.659,156,4.258,314,1.84,581,2.186,714,2.907,881,5.195,1046,3.938,1838,5.195,1961,4.258,1964,4.659,1965,4.659,2244,5.195,2245,5.195,2257,6.01,2258,6.01,2259,6.01,2260,6.01,2261,6.01,2262,6.01]],["title/routes.html",[383,3.213]],["body/routes.html",[18,0.015,46,0.015,47,0.015,383,3.844]],["title/miscellaneous/typealiases.html",[1774,1.963,2263,4.632]],["body/miscellaneous/typealiases.html",[14,0.997,18,0.014,41,0.277,46,0.014,47,0.014,102,1.268,134,2.87,164,1.647,693,1.536,714,2.87,732,2.474,769,4.203,800,3.733,877,4.226,1009,4.203,1041,5.187,1042,5.129,1101,4.599,1571,4.203,1572,4.203,1588,5.129,1593,5.129,1594,4.599,1774,3.625,2264,5.933,2265,5.129,2266,5.129]],["title/miscellaneous/variables.html",[105,3.282,1774,1.963]],["body/miscellaneous/variables.html",[14,0.909,18,0.016,41,0.306,46,0.013,47,0.013,102,1.183,105,3.83,133,3.405,134,3.405,164,1.558,178,3.683,311,3.592,312,3.098,581,1.967,606,3.533,693,1.4,714,2.615,732,3.124,738,1.587,807,4.191,808,5.074,862,5.457,974,4.033,1009,3.83,1046,3.542,1057,4.613,1058,5.074,1060,4.673,1294,5.074,1317,5.074,1406,4.191,1426,4.987,1427,4.673,1571,3.83,1572,3.83,1591,4.637,1592,4.673,1664,4.191,1665,5.074,1675,5.074,1774,3.303,2265,4.673,2266,4.673,2267,5.406,2268,5.406,2269,5.406,2270,5.406]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":461,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TicketService.html":{},"coverage.html":{},"overview.html":{}}}],["0.125rem",{"_index":511,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.14.2",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":496,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.2.2",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":520,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.375rem",{"_index":518,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.3s",{"_index":454,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5.1",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["0.5.17",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["0.5px",{"_index":488,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.5rem",{"_index":450,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7",{"_index":503,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.7.0",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["0.75rem",{"_index":505,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0.875rem",{"_index":440,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0/1",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["004085",{"_index":526,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["0056b3",{"_index":525,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["007bff",{"_index":499,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1",{"_index":472,"title":{"interfaces/ExpressRequestWithUser-1.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":2257,"title":{},"body":{"properties.html":{}}}],["1.5rem",{"_index":490,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1.8.1",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["100",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["100vh",{"_index":409,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1024",{"_index":941,"title":{},"body":{"controllers/HealthController.html":{}}}],["10px",{"_index":888,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["11.0.0",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["11.1.7",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["11.2.1",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":765,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["128",{"_index":945,"title":{},"body":{"controllers/HealthController.html":{}}}],["12px",{"_index":512,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["14",{"_index":1329,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["1c7430",{"_index":533,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1e7e34",{"_index":532,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1fr",{"_index":468,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1h",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["1px",{"_index":435,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["1rem",{"_index":429,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2",{"_index":805,"title":{"interfaces/ExpressRequestWithUser-2.html":{}},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["2.0",{"_index":1965,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["2/2",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1089,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["2004",{"_index":1968,"title":{},"body":{"license.html":{}}}],["200px",{"_index":457,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["201",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["2024",{"_index":764,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["2025",{"_index":2243,"title":{},"body":{"license.html":{}}}],["20px",{"_index":883,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["24",{"_index":1824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["25",{"_index":2255,"title":{},"body":{"overview.html":{}}}],["250px",{"_index":475,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["28a745",{"_index":448,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["2rem",{"_index":430,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3",{"_index":1711,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["3/3",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":548,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["3000",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["300ms",{"_index":549,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["304",{"_index":1446,"title":{},"body":{"controllers/TicketController.html":{}}}],["31t23:59:59.000z",{"_index":1563,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["31t23:59:59z",{"_index":766,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["4.0.1",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["401",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["404",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["409",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["495057",{"_index":482,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4e555b",{"_index":530,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["4px",{"_index":495,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["5",{"_index":2254,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":508,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{}}}],["500",{"_index":521,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["5000",{"_index":939,"title":{},"body":{"controllers/HealthController.html":{}}}],["507f1f77bcf86cd799439010",{"_index":796,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["507f1f77bcf86cd799439010'})@ismongoid()@isnotempty",{"_index":778,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["507f1f77bcf86cd799439012",{"_index":794,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["507f1f77bcf86cd799439013",{"_index":795,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["545b62",{"_index":529,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["6",{"_index":2256,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1740,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":481,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["60c72b2f5b1b2c6f5e8c3333",{"_index":1055,"title":{},"body":{"classes/Project.html":{}}}],["60c72b2f5b1b2c6f5e8c4444",{"_index":1054,"title":{},"body":{"classes/Project.html":{}}}],["60c72b2f5b1b2c6f5e8c5555",{"_index":1053,"title":{},"body":{"classes/Project.html":{}}}],["60c72b2f5b1b2c6f5e8c6666",{"_index":1052,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["60c72b2f5b1b2c6f5e8c7777",{"_index":1051,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["60c72b2f5b1b2c6f5e8c8888",{"_index":1050,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["60c72b2f5b1b2c6f5e8c9999",{"_index":1048,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["63e4e8d6e92f5e0b6f9a2f33",{"_index":733,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{}}}],["63e4e8d6e92f5e0b6f9a2f34",{"_index":734,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{}}}],["63e4e8d6e92f5e0b6f9a2f35",{"_index":1552,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["63e4e8d6e92f5e0b6f9a2f36",{"_index":1553,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["64",{"_index":1290,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["64)@matches(/(?=.*[a",{"_index":1277,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["6c757d",{"_index":442,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["7",{"_index":2253,"title":{},"body":{"overview.html":{}}}],["7.8.2",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1743,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":364,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["8.19.2",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1744,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1739,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1281,"title":{},"body":{"classes/RegisterUserDto.html":{},"license.html":{}}}],["9/9",{"_index":1741,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["__v",{"_index":1231,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["_hasusernameoremail",{"_index":989,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["_id",{"_index":1228,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["a.click",{"_index":678,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.download",{"_index":676,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.href",{"_index":675,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["a.style.display",{"_index":1720,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["ability",{"_index":1887,"title":{},"body":{"index.html":{}}}],["above",{"_index":2148,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1904,"title":{},"body":{"index.html":{}}}],["acceptance",{"_index":2213,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":2211,"title":{},"body":{"license.html":{}}}],["acceptsuggestiononenter",{"_index":1345,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["access",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"index.html":{}}}],["accessible",{"_index":1099,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["accessing",{"_index":1580,"title":{},"body":{"classes/User.html":{}}}],["accessors",{"_index":90,"title":{},"body":{"injectables/AppService.html":{}}}],["accesstoken",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["according",{"_index":1238,"title":{},"body":{"injectables/ProjectService.html":{}}}],["account",{"_index":994,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["accounts",{"_index":1578,"title":{},"body":{"classes/User.html":{}}}],["act",{"_index":2219,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1984,"title":{},"body":{"license.html":{}}}],["action",{"_index":637,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["actions",{"_index":449,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["active",{"_index":645,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/Project.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/User.html":{}}}],["acts",{"_index":2194,"title":{},"body":{"license.html":{}}}],["add",{"_index":1676,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{},"license.html":{}}}],["addendum",{"_index":2139,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1556,"title":{},"body":{"classes/UpdateTicketDto.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["additions",{"_index":2038,"title":{},"body":{"license.html":{}}}],["address",{"_index":1265,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["admin",{"_index":1589,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["advised",{"_index":2209,"title":{},"body":{"license.html":{}}}],["again",{"_index":647,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["against",{"_index":1617,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["agree",{"_index":2222,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2170,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2153,"title":{},"body":{"license.html":{}}}],["alias",{"_index":1742,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":425,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["alleging",{"_index":2103,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1940,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["allowing",{"_index":1609,"title":{},"body":{"injectables/UserService.html":{}}}],["alone",{"_index":2095,"title":{},"body":{"license.html":{}}}],["along",{"_index":1013,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"license.html":{}}}],["alongside",{"_index":2138,"title":{},"body":{"license.html":{}}}],["already",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserService.html":{}}}],["always",{"_index":1342,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["and/or",{"_index":2216,"title":{},"body":{"license.html":{}}}],["angular/common",{"_index":1401,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/common/http",{"_index":345,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["angular/core",{"_index":343,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["angular/forms",{"_index":1403,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["angular/platform",{"_index":1398,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["annotations",{"_index":2029,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1964,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["api",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["api.to",{"_index":151,"title":{},"body":{"injectables/AppService.html":{}}}],["api/session/${this.sessionid}/docs",{"_index":553,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["api/v1",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/v1/login",{"_index":1888,"title":{},"body":{"index.html":{}}}],["api/v1/projects",{"_index":1063,"title":{},"body":{"controllers/ProjectController.html":{},"index.html":{}}}],["api/v1/projects/:id",{"_index":1889,"title":{},"body":{"index.html":{}}}],["api/v1/register",{"_index":1885,"title":{},"body":{"index.html":{}}}],["api/v1/tickets",{"_index":1430,"title":{},"body":{"controllers/TicketController.html":{},"index.html":{}}}],["api/v1/tickets/:id",{"_index":1890,"title":{},"body":{"index.html":{}}}],["api/v1/tickets:id",{"_index":1891,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apibody",{"_index":1117,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apioperation",{"_index":1118,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apiparam",{"_index":1119,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apiproperty",{"_index":726,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({description",{"_index":706,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiresponse",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apitags",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["apitags(\"authentication",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"health",{"_index":932,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"information",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(\"project",{"_index":1129,"title":{},"body":{"controllers/ProjectController.html":{}}}],["apitags(\"ticket",{"_index":1455,"title":{},"body":{"controllers/TicketController.html":{}}}],["app",{"_index":897,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["app.controller",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appear",{"_index":2136,"title":{},"body":{"license.html":{}}}],["appearance",{"_index":1693,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["appendix",{"_index":2022,"title":{},"body":{"license.html":{}}}],["apple",{"_index":412,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["applicable",{"_index":2168,"title":{},"body":{"license.html":{}}}],["application",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["applies",{"_index":1785,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["apply",{"_index":2231,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1805,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["appropriateness",{"_index":2181,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archives",{"_index":2242,"title":{},"body":{"license.html":{}}}],["args",{"_index":859,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args.slice(0",{"_index":861,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["args[args.length",{"_index":860,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arial",{"_index":882,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["arising",{"_index":2199,"title":{},"body":{"license.html":{}}}],["arr1",{"_index":1800,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arr2",{"_index":1791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":722,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{}}}],["arrays",{"_index":1793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asserted",{"_index":2228,"title":{},"body":{"license.html":{}}}],["assigned",{"_index":755,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["assignees",{"_index":741,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["associated",{"_index":801,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtStrategy.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"license.html":{}}}],["assume",{"_index":2183,"title":{},"body":{"license.html":{}}}],["async",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["attach",{"_index":2232,"title":{},"body":{"license.html":{}}}],["attached",{"_index":2021,"title":{},"body":{"license.html":{}}}],["attachments",{"_index":1920,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":1495,"title":{},"body":{"injectables/TicketService.html":{}}}],["attribute.name",{"_index":1379,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribute.value",{"_index":1381,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["attribution",{"_index":2124,"title":{},"body":{"license.html":{}}}],["audit",{"_index":1925,"title":{},"body":{"index.html":{}}}],["auth",{"_index":1910,"title":{},"body":{"index.html":{}}}],["auth.controller",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["auth.guard.ts",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/update",{"_index":1638,"title":{},"body":{"injectables/UserService.html":{}}}],["auth/jwt",{"_index":1125,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["auth0",{"_index":1911,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":160,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/LoginUserDto.html":{},"index.html":{}}}],["authenticated",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["authenticates",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticating",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authentication",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginUserDto.html":{},"controllers/ProjectController.html":{},"index.html":{}}}],["authguard",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":60,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2262,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":968,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["authorized",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"license.html":{}}}],["authorized.'})@apiresponse({status",{"_index":1079,"title":{},"body":{"controllers/ProjectController.html":{}}}],["authorized.'})@useguards(jwtauthguard",{"_index":1102,"title":{},"body":{"controllers/ProjectController.html":{}}}],["authorship",{"_index":2018,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":232,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":478,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["autoclosingbrackets",{"_index":1341,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingpairs",{"_index":1386,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["autoclosingquotes",{"_index":1343,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["automated",{"_index":1906,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":623,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["automaticlayout",{"_index":1324,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["available",{"_index":1881,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["avoid",{"_index":1461,"title":{},"body":{"controllers/TicketController.html":{}}}],["await",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["b",{"_index":2115,"title":{},"body":{"license.html":{}}}],["background",{"_index":431,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["backup",{"_index":1712,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["bad",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["badge",{"_index":510,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["badrequestexception",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["based",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ProjectController.html":{},"license.html":{}}}],["bash",{"_index":1698,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["basic",{"_index":881,"title":{},"body":{"injectables/HbsRenderService.html":{},"properties.html":{}}}],["basis",{"_index":2171,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1637,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(password",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["before",{"_index":1715,"title":{},"body":{"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["behalf",{"_index":2042,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":1834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["being",{"_index":1172,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{}}}],["belongs",{"_index":777,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"miscellaneous/functions.html":{}}}],["below",{"_index":2023,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":2003,"title":{},"body":{"license.html":{}}}],["between",{"_index":424,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{}}}],["bind",{"_index":2035,"title":{},"body":{"license.html":{}}}],["blinkmacsystemfont",{"_index":414,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["blob",{"_index":657,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["blockcomment",{"_index":1384,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["body",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["boilerplate",{"_index":2233,"title":{},"body":{"license.html":{}}}],["bold",{"_index":447,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["boolean",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"classes/Project.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapped",{"_index":1789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstraps",{"_index":1781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["border",{"_index":433,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["both",{"_index":1802,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bottom",{"_index":434,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["brackets",{"_index":1385,"title":{},"body":{"injectables/TemplateEditorService.html":{},"license.html":{}}}],["break",{"_index":836,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["brief",{"_index":707,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/Project.html":{}}}],["browse",{"_index":2252,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1399,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{}}}],["browsermodule",{"_index":1397,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["btn",{"_index":517,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["bug",{"_index":789,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["build",{"_index":1879,"title":{},"body":{"index.html":{}}}],["built",{"_index":1840,"title":{},"body":{"index.html":{}}}],["button",{"_index":793,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["button.'})@isstring()@isnotempty",{"_index":759,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["c",{"_index":2121,"title":{},"body":{"license.html":{}}}],["caching",{"_index":1929,"title":{},"body":{"index.html":{}}}],["call",{"_index":650,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["callback",{"_index":1313,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["carry",{"_index":2116,"title":{},"body":{"license.html":{}}}],["case",{"_index":835,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["catch",{"_index":564,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["cause",{"_index":1994,"title":{},"body":{"license.html":{}}}],["center",{"_index":427,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["change",{"_index":600,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["changed",{"_index":2120,"title":{},"body":{"license.html":{}}}],["changes",{"_index":1149,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["character",{"_index":1275,"title":{},"body":{"classes/RegisterUserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["charge",{"_index":2072,"title":{},"body":{"license.html":{}}}],["check",{"_index":893,"title":{},"body":{"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["checking",{"_index":1636,"title":{},"body":{"injectables/UserService.html":{}}}],["checks",{"_index":115,"title":{},"body":{"injectables/AppService.html":{},"controllers/HealthController.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1846,"title":{},"body":{"index.html":{},"license.html":{}}}],["claim",{"_index":2100,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2090,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":688,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["clear",{"_index":609,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["cleartimeout(this.savetimeout",{"_index":570,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["click",{"_index":907,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["clicking",{"_index":758,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["clone",{"_index":1857,"title":{},"body":{"index.html":{}}}],["close",{"_index":1387,"title":{},"body":{"injectables/TemplateEditorService.html":{},"index.html":{}}}],["closed",{"_index":787,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["cluster_appmodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_projectmodule",{"_index":1176,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_projectmodule_providers",{"_index":1177,"title":{},"body":{"modules/ProjectModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule",{"_index":1391,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_bootstrap",{"_index":1392,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_declarations",{"_index":1393,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_templateplaygroundmodule_providers",{"_index":1394,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{},"overview.html":{}}}],["cluster_ticketmodule",{"_index":1482,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_ticketmodule_providers",{"_index":1483,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1595,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1596,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":1597,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":380,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["collections",{"_index":1827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["color",{"_index":441,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["colors",{"_index":1708,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["column",{"_index":407,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["columns",{"_index":464,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["combination",{"_index":2096,"title":{},"body":{"license.html":{}}}],["combines",{"_index":1042,"title":{},"body":{"classes/Project.html":{},"miscellaneous/typealiases.html":{}}}],["comment",{"_index":1371,"title":{},"body":{"injectables/TemplateEditorService.html":{},"license.html":{}}}],["comments",{"_index":1338,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["commercial",{"_index":2206,"title":{},"body":{"license.html":{}}}],["common",{"_index":826,"title":{},"body":{"injectables/HbsRenderService.html":{},"license.html":{}}}],["commonmodule",{"_index":1400,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["communication",{"_index":2046,"title":{},"body":{"license.html":{}}}],["community",{"_index":1864,"title":{},"body":{"index.html":{}}}],["compare",{"_index":829,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["comparepassword",{"_index":1602,"title":{},"body":{"injectables/UserService.html":{}}}],["comparepassword(password",{"_index":1612,"title":{},"body":{"injectables/UserService.html":{}}}],["compares",{"_index":1615,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["comparing",{"_index":1797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparisons",{"_index":1818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compiled",{"_index":2015,"title":{},"body":{"license.html":{}}}],["complete",{"_index":875,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["completed",{"_index":770,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["completing",{"_index":761,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["compliance",{"_index":2246,"title":{},"body":{"license.html":{}}}],["complies",{"_index":2143,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":373,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["compodocconfig",{"_index":309,"title":{"interfaces/CompoDocConfig.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["component",{"_index":338,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"overview.html":{}}}],["components",{"_index":853,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["compose",{"_index":1878,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":2204,"title":{},"body":{"license.html":{}}}],["conditional",{"_index":841,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["conditions",{"_index":1971,"title":{},"body":{"license.html":{}}}],["config",{"_index":370,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["configuration",{"_index":87,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{}}}],["confirm('are",{"_index":633,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["conflictexception",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["conflictexception(\"user",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["conflicts",{"_index":1166,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["connection",{"_index":1869,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":2198,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2218,"title":{},"body":{"license.html":{}}}],["console.error('error",{"_index":566,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.error('no",{"_index":644,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('creating",{"_index":648,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('reset",{"_index":642,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('session",{"_index":577,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.log('template",{"_index":681,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["console.warn(`no",{"_index":140,"title":{},"body":{"injectables/AppService.html":{}}}],["conspicuously",{"_index":2057,"title":{},"body":{"license.html":{}}}],["const",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["constant",{"_index":1059,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["constitutes",{"_index":2104,"title":{},"body":{"license.html":{}}}],["constraints",{"_index":702,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["construct",{"_index":663,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["constructor",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(configservice",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(message",{"_index":1163,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["constructor(projectmodel",{"_index":1189,"title":{},"body":{"injectables/ProjectService.html":{}}}],["constructor(ticketmodel",{"_index":1488,"title":{},"body":{"injectables/TicketService.html":{}}}],["constructor(usermodel",{"_index":1607,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructors",{"_index":390,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["construed",{"_index":2140,"title":{},"body":{"license.html":{}}}],["contain",{"_index":719,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/RegisterUserDto.html":{},"miscellaneous/functions.html":{}}}],["contained",{"_index":2129,"title":{},"body":{"license.html":{}}}],["container",{"_index":513,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["containers",{"_index":1880,"title":{},"body":{"index.html":{}}}],["containing",{"_index":147,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":753,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["content",{"_index":422,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"license.html":{}}}],["contentdisposition",{"_index":664,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contentdisposition.match(/filename",{"_index":669,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["contents",{"_index":1689,"title":{},"body":{"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["context",{"_index":843,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["contract",{"_index":1995,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1955,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":2037,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":2094,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1956,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":2061,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":2105,"title":{},"body":{"license.html":{}}}],["control",{"_index":1986,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1987,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"coverage.html":{}}}],["controller(\"/api/v1",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"/api/v1/projects",{"_index":1130,"title":{},"body":{"controllers/ProjectController.html":{}}}],["controller(\"/api/v1/tickets",{"_index":1456,"title":{},"body":{"controllers/TicketController.html":{}}}],["controller(\"health",{"_index":933,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["conversions",{"_index":2016,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2111,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1871,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1979,"title":{},"body":{"license.html":{}}}],["correct",{"_index":700,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["counterclaim",{"_index":2101,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":384,"title":{"coverage.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["create",{"_index":581,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["create(createprojectdto",{"_index":1073,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["create(createticketdto",{"_index":1431,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["created",{"_index":578,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["createdby",{"_index":1016,"title":{},"body":{"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{}}}],["createdproject",{"_index":1146,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["createdticket",{"_index":1466,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["createprojectdto",{"_index":687,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["createprojectdto})@apiresponse({status",{"_index":1076,"title":{},"body":{"controllers/ProjectController.html":{}}}],["creates",{"_index":98,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["createsession",{"_index":571,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["createticketdto",{"_index":735,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["createticketdto.projectid",{"_index":1509,"title":{},"body":{"injectables/TicketService.html":{}}}],["creating",{"_index":692,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["creation",{"_index":653,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateProjectDto.html":{}}}],["creator",{"_index":1197,"title":{},"body":{"injectables/ProjectService.html":{}}}],["credentials",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"injectables/UserService.html":{}}}],["credentials.'})@apiresponse({status",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["criteria",{"_index":748,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["cross",{"_index":2099,"title":{},"body":{"license.html":{}}}],["crud",{"_index":1185,"title":{},"body":{"injectables/ProjectService.html":{},"controllers/TicketController.html":{}}}],["css",{"_index":1357,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["current",{"_index":780,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["cursor",{"_index":492,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["custom",{"_index":1007,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProjectError.html":{},"injectables/TemplateEditorService.html":{},"classes/TicketError.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["customary",{"_index":2162,"title":{},"body":{"license.html":{}}}],["customfavicon",{"_index":315,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["customization",{"_index":1704,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["customization.html",{"_index":1718,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customize",{"_index":1706,"title":{},"body":{"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["customized",{"_index":1688,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["customizing",{"_index":1692,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["d",{"_index":2127,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2196,"title":{},"body":{"license.html":{}}}],["dark",{"_index":376,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["data",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/LoginUserDto.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["database",{"_index":974,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":545,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["date:'short",{"_index":369,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["db",{"_index":1239,"title":{},"body":{"injectables/ProjectService.html":{}}}],["ddd",{"_index":885,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["debounce",{"_index":550,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["debounced",{"_index":598,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["declarations",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":821,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["decoration",{"_index":522,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["decorator",{"_index":1008,"title":{},"body":{"classes/LoginUserDto.html":{},"miscellaneous/functions.html":{}}}],["decorators",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"controllers/HealthController.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["decorators/hasusernameoremail.decorator",{"_index":1003,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["dee2e6",{"_index":437,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["deep",{"_index":1794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deepequalarrays",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deepequalarrays(arr1",{"_index":1790,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"classes/Project.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"classes/User.html":{}}}],["defend",{"_index":2224,"title":{},"body":{"license.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["defines",{"_index":694,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{}}}],["definition",{"_index":1989,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1352,"title":{},"body":{"injectables/TemplateEditorService.html":{},"license.html":{}}}],["delete",{"_index":1070,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"index.html":{}}}],["delete(\":id",{"_index":1157,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":1085,"title":{},"body":{"controllers/ProjectController.html":{}}}],["delete(':id')@useguards(jwtauthguard",{"_index":1434,"title":{},"body":{"controllers/TicketController.html":{}}}],["delete(@param(\"id",{"_index":1159,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["delete(id",{"_index":1084,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["delete(projectid",{"_index":1195,"title":{},"body":{"injectables/ProjectService.html":{}}}],["delete(ticketid",{"_index":1492,"title":{},"body":{"injectables/TicketService.html":{}}}],["deleted",{"_index":1158,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["deleted.'})@apiresponse({status",{"_index":1090,"title":{},"body":{"controllers/ProjectController.html":{}}}],["deletes",{"_index":1094,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["deleting",{"_index":1064,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/TicketService.html":{}}}],["deletion",{"_index":1183,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["deliberate",{"_index":2191,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":1380,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["demonstration",{"_index":899,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["dependencies",{"_index":51,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/ProjectModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":1943,"title":{},"body":{"index.html":{}}}],["depth",{"_index":847,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["derivative",{"_index":2024,"title":{},"body":{"license.html":{}}}],["derived",{"_index":2026,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2163,"title":{},"body":{"license.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":2059,"title":{},"body":{"license.html":{}}}],["desired",{"_index":1870,"title":{},"body":{"index.html":{}}}],["desk",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["destroy",{"_index":1296,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["detailed",{"_index":756,"title":{},"body":{"classes/CreateTicketDto.html":{},"index.html":{}}}],["details",{"_index":1083,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["details.'})@apibody({description",{"_index":1075,"title":{},"body":{"controllers/ProjectController.html":{}}}],["detected",{"_index":1208,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["determine",{"_index":1816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["determines",{"_index":1585,"title":{},"body":{"classes/User.html":{}}}],["determining",{"_index":2180,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1945,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1954,"title":{},"body":{"index.html":{}}}],["developers",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["development",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["devinstructions",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["differences",{"_index":1817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["different",{"_index":1953,"title":{},"body":{"index.html":{},"license.html":{}}}],["direct",{"_index":1992,"title":{},"body":{"license.html":{}}}],["direction",{"_index":406,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{}}}],["directly",{"_index":993,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["directory",{"_index":1696,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["disable",{"_index":378,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableconstructors",{"_index":316,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablecoverage",{"_index":317,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledependencies",{"_index":318,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabledomtree",{"_index":319,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablefilepath",{"_index":320,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablegraph",{"_index":321,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableinternal",{"_index":322,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablelifecyclehooks",{"_index":323,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablemaingraph",{"_index":324,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableoverview",{"_index":325,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprivate",{"_index":326,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableproperties",{"_index":327,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableprotected",{"_index":328,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disableroutesgraph",{"_index":329,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesearch",{"_index":330,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablesourcecode",{"_index":331,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disablestyletab",{"_index":332,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disabletemplatetab",{"_index":333,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["disclaimer",{"_index":2166,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":2055,"title":{},"body":{"license.html":{}}}],["disk",{"_index":922,"title":{},"body":{"controllers/HealthController.html":{}}}],["diskhealthindicator",{"_index":928,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":404,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{}}}],["disposition",{"_index":666,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["distribute",{"_index":2081,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":2131,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1973,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1849,"title":{},"body":{"index.html":{}}}],["docs/.../hbs",{"_index":2267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/.../template",{"_index":2269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/.../zip",{"_index":2268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs/template",{"_index":311,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["doctype",{"_index":1373,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["document",{"_index":877,"title":{},"body":{"injectables/HbsRenderService.html":{},"classes/Project.html":{},"classes/User.html":{},"injectables/UserService.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["document.body.appendchild(a",{"_index":677,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.body.removechild(a",{"_index":679,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["document.createelement('a",{"_index":674,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["documentation",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["documentationmainname",{"_index":895,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["documents",{"_index":1572,"title":{},"body":{"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["doe",{"_index":1293,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["doe'})@isstring()@isnotempty",{"_index":1270,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["doesn't",{"_index":1242,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"miscellaneous/functions.html":{}}}],["dom",{"_index":391,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["domain",{"_index":1458,"title":{},"body":{"controllers/TicketController.html":{},"miscellaneous/functions.html":{}}}],["don't",{"_index":2237,"title":{},"body":{"license.html":{}}}],["download",{"_index":371,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["downloadblob",{"_index":1666,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloadblob(blob",{"_index":1669,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["downloaded",{"_index":682,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["downloading",{"_index":683,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["dto",{"_index":691,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["dto/create",{"_index":1120,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["dto/login",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["due",{"_index":744,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["duedate",{"_index":749,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["during",{"_index":1151,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{}}}],["e.g",{"_index":1807,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["e9ecef",{"_index":452,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["each",{"_index":703,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["ease",{"_index":455,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["easier",{"_index":2240,"title":{},"body":{"license.html":{}}}],["editor",{"_index":507,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["editor.service",{"_index":348,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["editor.service.ts",{"_index":1294,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor.service.ts:10",{"_index":1316,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:12",{"_index":1307,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:167",{"_index":1301,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:59",{"_index":1310,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:67",{"_index":1312,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:71",{"_index":1303,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:87",{"_index":1308,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editor.service.ts:9",{"_index":1315,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["editorcontainer",{"_index":539,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["editorial",{"_index":2027,"title":{},"body":{"license.html":{}}}],["editorservice",{"_index":555,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["effects",{"_index":1463,"title":{},"body":{"controllers/TicketController.html":{}}}],["elaborations",{"_index":2030,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":2043,"title":{},"body":{"license.html":{}}}],["element",{"_index":1798,"title":{},"body":{"miscellaneous/functions.html":{}}}],["elementref",{"_index":341,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["email",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["empty",{"_index":712,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["enable",{"_index":1919,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1326,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["enabling",{"_index":1841,"title":{},"body":{"index.html":{}}}],["enclosed",{"_index":2234,"title":{},"body":{"license.html":{}}}],["end",{"_index":2230,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":654,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["endpoints",{"_index":915,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"index.html":{}}}],["enjoy",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["ensure",{"_index":699,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{}}}],["ensuring",{"_index":1186,"title":{},"body":{"injectables/ProjectService.html":{}}}],["entities",{"_index":1985,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1980,"title":{},"body":{"license.html":{}}}],["enum",{"_index":1411,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{}}}],["env",{"_index":1867,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":1866,"title":{},"body":{"index.html":{}}}],["environment",{"_index":88,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["environments",{"_index":1944,"title":{},"body":{"index.html":{}}}],["equal",{"_index":1803,"title":{},"body":{"miscellaneous/functions.html":{}}}],["equality",{"_index":1795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":565,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"miscellaneous/functions.html":{}}}],["error('failed",{"_index":580,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["error.message",{"_index":892,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["errors",{"_index":1168,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"miscellaneous/functions.html":{}}}],["etc",{"_index":788,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["even",{"_index":2208,"title":{},"body":{"license.html":{}}}],["event",{"_index":2187,"title":{},"body":{"license.html":{}}}],["events",{"_index":908,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["example",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"license.html":{}}}],["example:example",{"_index":1873,"title":{},"body":{"index.html":{}}}],["examples",{"_index":1924,"title":{},"body":{"index.html":{}}}],["except",{"_index":2083,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":1806,"title":{},"body":{"miscellaneous/functions.html":{}}}],["excluding",{"_index":1631,"title":{},"body":{"injectables/UserService.html":{},"license.html":{}}}],["exclusive",{"_index":2071,"title":{},"body":{"license.html":{}}}],["exec",{"_index":1232,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["executed",{"_index":2154,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":2185,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2005,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1234,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["existing",{"_index":610,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["existingproject",{"_index":1217,"title":{},"body":{"injectables/ProjectService.html":{}}}],["existingproject.name",{"_index":1220,"title":{},"body":{"injectables/ProjectService.html":{}}}],["existinguser",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["exists",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["exists.'})@apiresponse({status",{"_index":1080,"title":{},"body":{"controllers/ProjectController.html":{}}}],["experience",{"_index":159,"title":{},"body":{"injectables/AppService.html":{}}}],["expiresin",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicitly",{"_index":2145,"title":{},"body":{"license.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["export.service",{"_index":351,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["export.service.ts",{"_index":1665,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["export.service.ts:10",{"_index":1672,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:29",{"_index":1674,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["export.service.ts:75",{"_index":1670,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exporttemplates",{"_index":1667,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exporttemplates(files",{"_index":1671,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["exportzip",{"_index":643,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["express",{"_index":799,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"dependencies.html":{},"license.html":{}}}],["expressrequestwithuser",{"_index":216,"title":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"coverage.html":{}}}],["extends",{"_index":798,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Project.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["extract",{"_index":1695,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["extractjwt",{"_index":979,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":982,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":967,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f0f8ff",{"_index":887,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["f8f9fa",{"_index":432,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["failed",{"_index":1142,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["failed.'})@useguards(jwtauthguard",{"_index":1081,"title":{},"body":{"controllers/ProjectController.html":{}}}],["fails",{"_index":1132,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["failure",{"_index":1067,"title":{},"body":{"controllers/ProjectController.html":{},"license.html":{}}}],["false",{"_index":144,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/UpdateProjectDto.html":{},"miscellaneous/functions.html":{}}}],["false})@isarray()@isoptional()@ismongoid({each",{"_index":751,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["false})@isoptional",{"_index":767,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["false})@isoptional()@isarray",{"_index":717,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["false})@isstring()@isoptional",{"_index":772,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["family",{"_index":411,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["feature",{"_index":1950,"title":{},"body":{"index.html":{}}}],["fee",{"_index":2212,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1098,"title":{},"body":{"controllers/ProjectController.html":{}}}],["ffc107",{"_index":445,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fff5f5",{"_index":891,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["field",{"_index":704,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/functions.html":{}}}],["fields",{"_index":1112,"title":{},"body":{"controllers/ProjectController.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["fifty",{"_index":1998,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["file.content",{"_index":1679,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filed",{"_index":2109,"title":{},"body":{"license.html":{}}}],["filename",{"_index":661,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["filenamematch",{"_index":668,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["filenamematch[1",{"_index":670,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["files",{"_index":1673,"title":{},"body":{"injectables/ZipExportService.html":{},"license.html":{}}}],["files.foreach(file",{"_index":1677,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["filetype",{"_index":1304,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["filter",{"_index":1918,"title":{},"body":{"index.html":{}}}],["final",{"_index":1539,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["finalport",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["find",{"_index":1226,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["findall",{"_index":1071,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["findall(@request",{"_index":1134,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["findall(req",{"_index":1095,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["findall(userid",{"_index":1200,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["findbyid",{"_index":1603,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid(userid",{"_index":1620,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyidandupdate",{"_index":1258,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["findbyusername",{"_index":1604,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusername(username",{"_index":1623,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail",{"_index":1605,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail(identifier",{"_index":1625,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":1072,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["findone(@param(\"id",{"_index":1143,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["findone(id",{"_index":1104,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["findone(projectid",{"_index":1202,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["finds",{"_index":1622,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":587,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{}}}],["fit",{"_index":466,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fitness",{"_index":2177,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1417,"title":{},"body":{"classes/Ticket.html":{}}}],["flag",{"_index":1027,"title":{},"body":{"classes/Project.html":{},"injectables/ZipExportService.html":{}}}],["flex",{"_index":405,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["following",{"_index":1862,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":410,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["fonts",{"_index":1709,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["fontsize",{"_index":1328,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["forbiddenexception",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["form",{"_index":2007,"title":{},"body":{"license.html":{}}}],["format",{"_index":762,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/RegisterUserDto.html":{},"license.html":{}}}],["formsmodule",{"_index":1402,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["forwardref",{"_index":1036,"title":{},"body":{"classes/Project.html":{}}}],["found",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["found.'})@apiresponse({status",{"_index":1092,"title":{},"body":{"controllers/ProjectController.html":{}}}],["found.'})@useguards(jwtauthguard",{"_index":1114,"title":{},"body":{"controllers/ProjectController.html":{}}}],["frame",{"_index":516,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["free",{"_index":2074,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":1908,"title":{},"body":{"index.html":{}}}],["function",{"_index":1314,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":641,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["functions",{"_index":1775,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["future",{"_index":1894,"title":{},"body":{"index.html":{}}}],["gap",{"_index":438,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generate",{"_index":1683,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generated",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["generatereadme",{"_index":1668,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["generates",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["generating",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ZipExportService.html":{}}}],["generation",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ZipExportService.html":{}}}],["generator",{"_index":375,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["generic",{"_index":1810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["get(\":id",{"_index":1141,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["get(':id')@apioperation({summary",{"_index":1105,"title":{},"body":{"controllers/ProjectController.html":{}}}],["get(':id')@useguards(jwtauthguard",{"_index":1438,"title":{},"body":{"controllers/TicketController.html":{}}}],["get()@apioperation({summary",{"_index":1096,"title":{},"body":{"controllers/ProjectController.html":{}}}],["get()@healthcheck",{"_index":916,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@useguards(jwtauthguard",{"_index":1436,"title":{},"body":{"controllers/TicketController.html":{}}}],["getdevinstructions",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getisdev",{"_index":113,"title":{},"body":{"injectables/AppService.html":{}}}],["getlanguagefromfiletype",{"_index":1297,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getlanguagefromfiletype(filetype",{"_index":1302,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["getmockdata",{"_index":810,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["getport",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["gets",{"_index":108,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":1845,"title":{},"body":{"index.html":{}}}],["github",{"_index":1935,"title":{},"body":{"index.html":{}}}],["give",{"_index":2113,"title":{},"body":{"license.html":{}}}],["given",{"_index":1497,"title":{},"body":{"injectables/TicketService.html":{},"miscellaneous/functions.html":{}}}],["gives",{"_index":1886,"title":{},"body":{"index.html":{}}}],["global",{"_index":1786,"title":{},"body":{"miscellaneous/functions.html":{}}}],["goodwill",{"_index":2202,"title":{},"body":{"license.html":{}}}],["governing",{"_index":2249,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2065,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2006,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1981,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2068,"title":{},"body":{"license.html":{}}}],["graph",{"_index":381,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules.html":{}}}],["grid",{"_index":463,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["grigoropoulos",{"_index":2245,"title":{},"body":{"license.html":{},"properties.html":{}}}],["grossly",{"_index":2192,"title":{},"body":{"license.html":{}}}],["guard",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["guides",{"_index":1923,"title":{},"body":{"index.html":{}}}],["h3",{"_index":480,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["h4",{"_index":509,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["handle",{"_index":906,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/functions.html":{}}}],["handlebars",{"_index":606,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handlebars.create",{"_index":825,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handlebars_unescaped",{"_index":1370,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["handlebarsinstance",{"_index":809,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["handledomainerrors",{"_index":1127,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handledomainerrors(error",{"_index":1139,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"miscellaneous/functions.html":{}}}],["handles",{"_index":1457,"title":{},"body":{"controllers/TicketController.html":{},"miscellaneous/functions.html":{}}}],["handling",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{}}}],["harmless",{"_index":2226,"title":{},"body":{"license.html":{}}}],["haschanges",{"_index":1213,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["haschanges(original",{"_index":1813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haschanges(project",{"_index":1252,"title":{},"body":{"injectables/ProjectService.html":{}}}],["haschanges(ticket",{"_index":1523,"title":{},"body":{"injectables/TicketService.html":{}}}],["hashed",{"_index":1583,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["hashedpassword",{"_index":1613,"title":{},"body":{"injectables/UserService.html":{}}}],["hasusernameoremail",{"_index":1002,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hasusernameoremail(validationoptions",{"_index":1829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasusernameoremail({message",{"_index":990,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["hbs",{"_index":353,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["hbsrenderservice",{"_index":352,"title":{"injectables/HbsRenderService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["hbsservice",{"_index":557,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["header",{"_index":420,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/JwtStrategy.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headers",{"_index":662,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["headless",{"_index":1838,"title":{},"body":{"index.html":{},"properties.html":{}}}],["health",{"_index":914,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["health.controller",{"_index":950,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":925,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":930,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":923,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":912,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthindicatorresult",{"_index":929,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthmodule",{"_index":61,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["heath",{"_index":1892,"title":{},"body":{"index.html":{}}}],["height",{"_index":408,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["help",{"_index":2259,"title":{},"body":{"properties.html":{}}}],["helper",{"_index":830,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["helpers",{"_index":827,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["here",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["hereby",{"_index":2067,"title":{},"body":{"license.html":{}}}],["herein",{"_index":2150,"title":{},"body":{"license.html":{}}}],["hexadecimal",{"_index":1825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hidden",{"_index":459,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hide",{"_index":374,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidedarkmodetoggle",{"_index":334,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["hidegenerator",{"_index":335,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["high",{"_index":771,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["higher",{"_index":1853,"title":{},"body":{"index.html":{}}}],["hold",{"_index":2225,"title":{},"body":{"license.html":{}}}],["hook",{"_index":903,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["hooks",{"_index":389,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["horizontal",{"_index":1334,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["href",{"_index":911,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["html",{"_index":876,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["htmlelement",{"_index":1306,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["http",{"_index":554,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:3000",{"_index":1882,"title":{},"body":{"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1969,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2248,"title":{},"body":{"license.html":{}}}],["httpclient",{"_index":344,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["httpclientmodule",{"_index":1404,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["httpexception",{"_index":1808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httphealthindicator",{"_index":924,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":947,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://betterstack.com/better",{"_index":936,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://compodoc.app/guides/template",{"_index":1717,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["httpstatus",{"_index":1449,"title":{},"body":{"controllers/TicketController.html":{}}}],["httpstatus.created",{"_index":1469,"title":{},"body":{"controllers/TicketController.html":{}}}],["hub",{"_index":1938,"title":{},"body":{"index.html":{}}}],["hydrated",{"_index":1593,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hydrateddocument",{"_index":1588,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["i18n",{"_index":1934,"title":{},"body":{"index.html":{}}}],["icon",{"_index":501,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["id",{"_index":742,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["id'})@apiparam({name",{"_index":1442,"title":{},"body":{"controllers/TicketController.html":{}}}],["id.'})@apiparam({name",{"_index":1087,"title":{},"body":{"controllers/ProjectController.html":{}}}],["identical",{"_index":1796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identification",{"_index":2241,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1627,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["identifiers",{"_index":1826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifying",{"_index":2236,"title":{},"body":{"license.html":{}}}],["ids",{"_index":754,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{}}}],["ignoreexpiration",{"_index":983,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ii",{"_index":1996,"title":{},"body":{"license.html":{}}}],["iii",{"_index":2002,"title":{},"body":{"license.html":{}}}],["image",{"_index":1937,"title":{},"body":{"index.html":{}}}],["implement",{"_index":640,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["implementation",{"_index":631,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implements",{"_index":536,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["implied",{"_index":2174,"title":{},"body":{"license.html":{}}}],["import",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}}}],["improve",{"_index":1922,"title":{},"body":{"index.html":{}}}],["improvements",{"_index":1895,"title":{},"body":{"index.html":{}}}],["improving",{"_index":2056,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2200,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":1577,"title":{},"body":{"classes/User.html":{}}}],["incidental",{"_index":2197,"title":{},"body":{"license.html":{}}}],["include",{"_index":785,"title":{},"body":{"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"license.html":{}}}],["included",{"_index":2020,"title":{},"body":{"license.html":{}}}],["includes",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateTicketDto.html":{},"license.html":{}}}],["includesname",{"_index":336,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["including",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"classes/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["inclusion",{"_index":2041,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":2064,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":2227,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":2223,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":2214,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1043,"title":{},"body":{"classes/Project.html":{}}}],["indicated",{"_index":2019,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":1028,"title":{},"body":{"classes/Project.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"classes/User.html":{}}}],["indicating",{"_index":774,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/UserService.html":{}}}],["indicator",{"_index":444,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["indirect",{"_index":1993,"title":{},"body":{"license.html":{}}}],["individual",{"_index":2004,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["information",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{},"license.html":{}}}],["informational",{"_index":2137,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2093,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2106,"title":{},"body":{"license.html":{}}}],["inherits",{"_index":1537,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["initialize",{"_index":1318,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializeeditor",{"_index":595,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["initializeeditor(container",{"_index":1305,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["initializehandlebars",{"_index":811,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["initializes",{"_index":1780,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initializing",{"_index":567,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["inject",{"_index":1506,"title":{},"body":{"injectables/TicketService.html":{}}}],["injectable",{"_index":82,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["injectables",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"overview.html":{}}}],["injectmodel",{"_index":1209,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["injectmodel(project.name",{"_index":1215,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["injectmodel(ticket.name",{"_index":1505,"title":{},"body":{"injectables/TicketService.html":{}}}],["input",{"_index":745,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["inputs",{"_index":854,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["install",{"_index":1860,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1856,"title":{},"body":{"index.html":{}}}],["instance",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"injectables/UserService.html":{},"index.html":{}}}],["institute",{"_index":2097,"title":{},"body":{"license.html":{}}}],["instructions",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["insufficient",{"_index":1170,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["intentionally",{"_index":2039,"title":{},"body":{"license.html":{}}}],["interact",{"_index":1058,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["interaction",{"_index":1610,"title":{},"body":{"injectables/UserService.html":{}}}],["interface",{"_index":308,"title":{"interfaces/CompoDocConfig.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":310,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{},"overview.html":{}}}],["interfaces/project.interface",{"_index":1122,"title":{},"body":{"controllers/ProjectController.html":{}}}],["interfaces/ticket.interface",{"_index":1451,"title":{},"body":{"controllers/TicketController.html":{}}}],["interfaces/user.interface",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["internal",{"_index":387,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/LoginUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{}}}],["introduce",{"_index":1905,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["irrevocable",{"_index":2075,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":1017,"title":{},"body":{"classes/Project.html":{},"classes/User.html":{}}}],["isarray",{"_index":730,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isdate",{"_index":1568,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["isdev",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["isemail",{"_index":1286,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isinitial",{"_index":872,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isinitialtab",{"_index":870,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ismongodbidvalid",{"_index":1214,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["ismongodbidvalid(createticketdto.projectid",{"_index":1507,"title":{},"body":{"injectables/TicketService.html":{}}}],["ismongodbidvalid(id",{"_index":1820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ismongodbidvalid(projectid",{"_index":1235,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["ismongodbidvalid(ticketid",{"_index":1519,"title":{},"body":{"injectables/TicketService.html":{}}}],["ismongoid",{"_index":792,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isnotempty",{"_index":728,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":729,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isoptional()@isarray()@ismongoid({each",{"_index":1548,"title":{},"body":{"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isoptional()@isdate()@type(undefined)@apiproperty({description",{"_index":1562,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["isoptional()@ismongoid",{"_index":1544,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["isoptional()@isstring()@apiproperty({description",{"_index":1560,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["isstring",{"_index":727,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["issue",{"_index":1418,"title":{},"body":{"classes/Ticket.html":{},"index.html":{},"license.html":{}}}],["istabenabled",{"_index":864,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["isvisible",{"_index":900,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["italic",{"_index":506,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item",{"_index":685,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["item.name",{"_index":686,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["items",{"_index":426,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["january",{"_index":1967,"title":{},"body":{"license.html":{}}}],["javascript",{"_index":1360,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["jest",{"_index":1898,"title":{},"body":{"index.html":{}}}],["john",{"_index":1269,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["john_doe",{"_index":1004,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["john_doe'})@isstring()@isnotempty",{"_index":1284,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["john_doe'})@isstring()@isoptional",{"_index":1000,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["john_doe@example.com",{"_index":1005,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["john_doe@example.com'})@isemail()@isnotempty",{"_index":1266,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["john_doe@example.com'})@isstring()@isoptional",{"_index":996,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["js",{"_index":1359,"title":{},"body":{"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["json",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jszip",{"_index":1675,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":421,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["jwt",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt.token.here",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt_secret=\"42",{"_index":1877,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":239,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":981,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":274,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["keep",{"_index":1713,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["key",{"_index":852,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ProjectService.html":{}}}],["keyword",{"_index":1368,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["keywords",{"_index":2261,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":2173,"title":{},"body":{"license.html":{}}}],["known",{"_index":1809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["label",{"_index":471,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["labels",{"_index":1941,"title":{},"body":{"index.html":{}}}],["lang.id",{"_index":1364,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["language",{"_index":1321,"title":{},"body":{"injectables/TemplateEditorService.html":{},"license.html":{}}}],["languages",{"_index":1932,"title":{},"body":{"index.html":{}}}],["last",{"_index":366,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/Project.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["lastsaved",{"_index":368,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["law",{"_index":2169,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2102,"title":{},"body":{"license.html":{}}}],["layout",{"_index":1710,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["left",{"_index":504,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["legal",{"_index":1982,"title":{},"body":{"license.html":{}}}],["legend",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":1287,"title":{},"body":{"classes/RegisterUserDto.html":{},"miscellaneous/functions.html":{}}}],["length(8",{"_index":1289,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["letter",{"_index":486,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["letter'})@matches(/(?=.*[0",{"_index":1280,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["letter'})@matches(/(?=.*[a",{"_index":1279,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["level",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTicketDto.html":{},"classes/Ticket.html":{}}}],["levels",{"_index":1586,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["li",{"_index":491,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li.active",{"_index":498,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["li:hover",{"_index":497,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["liability",{"_index":2186,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2195,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":2091,"title":{},"body":{"license.html":{}}}],["license",{"_index":1961,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1962,"title":{},"body":{"index.html":{},"license.html":{}}}],["licenses",{"_index":2107,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1978,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":388,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["limitation",{"_index":2175,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2250,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2010,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1902,"title":{},"body":{"index.html":{}}}],["linenumbers",{"_index":1331,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["link",{"_index":123,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"license.html":{}}}],["list",{"_index":479,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["listener",{"_index":1348,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["lists",{"_index":2050,"title":{},"body":{"license.html":{}}}],["literal",{"_index":976,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":2098,"title":{},"body":{"license.html":{}}}],["live",{"_index":400,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["load",{"_index":757,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["loading",{"_index":397,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessionconfig",{"_index":591,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["loadsessiontemplates",{"_index":582,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["local",{"_index":1859,"title":{},"body":{"index.html":{}}}],["localization/internationalization",{"_index":1933,"title":{},"body":{"index.html":{}}}],["log",{"_index":1420,"title":{},"body":{"classes/Ticket.html":{}}}],["logged",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["logic",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{}}}],["login",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["login(@body",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":173,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuserdto.username",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["loss",{"_index":2201,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2207,"title":{},"body":{"license.html":{}}}],["low",{"_index":775,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["lowercase",{"_index":1273,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["machine",{"_index":1848,"title":{},"body":{"index.html":{}}}],["made",{"_index":1150,"title":{},"body":{"controllers/ProjectController.html":{},"index.html":{},"license.html":{}}}],["mailing",{"_index":2049,"title":{},"body":{"license.html":{}}}],["main",{"_index":382,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["make",{"_index":2086,"title":{},"body":{"license.html":{}}}],["making",{"_index":1555,"title":{},"body":{"classes/UpdateTicketDto.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["malfunction",{"_index":2205,"title":{},"body":{"license.html":{}}}],["manage",{"_index":1046,"title":{},"body":{"classes/Project.html":{},"classes/User.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":2053,"title":{},"body":{"license.html":{}}}],["management",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"classes/User.html":{},"index.html":{},"license.html":{}}}],["manager",{"_index":1590,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["managing",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"controllers/ProjectController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["mapping",{"_index":850,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["maps",{"_index":1804,"title":{},"body":{"miscellaneous/functions.html":{}}}],["margin",{"_index":469,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["marked",{"_index":2058,"title":{},"body":{"license.html":{}}}],["marks",{"_index":2159,"title":{},"body":{"license.html":{}}}],["match",{"_index":1619,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["matches",{"_index":1288,"title":{},"body":{"classes/RegisterUserDto.html":{},"injectables/TicketService.html":{}}}],["matches(/(?=.*[0",{"_index":1292,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["matches(/(?=.*[a",{"_index":1291,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["matching",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":456,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["mean",{"_index":1975,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1536,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["means",{"_index":1990,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":2013,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1914,"title":{},"body":{"index.html":{}}}],["media",{"_index":2017,"title":{},"body":{"license.html":{}}}],["medium",{"_index":776,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"license.html":{}}}],["meet",{"_index":2112,"title":{},"body":{"license.html":{}}}],["meets",{"_index":746,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["member",{"_index":720,"title":{},"body":{"classes/CreateProjectDto.html":{},"injectables/ProjectService.html":{}}}],["members",{"_index":705,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{}}}],["memory",{"_index":921,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["memoryhealthindicator",{"_index":927,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":2176,"title":{},"body":{"license.html":{}}}],["merely",{"_index":2034,"title":{},"body":{"license.html":{}}}],["message",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"classes/LoginUserDto.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["metatag",{"_index":1375,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["metatag.content",{"_index":1374,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["method",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["middlewares",{"_index":1787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minimal",{"_index":337,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["minimap",{"_index":1325,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["minmax(200px",{"_index":467,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["miscellaneous",{"_index":1774,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":889,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["mode",{"_index":117,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["model",{"_index":1190,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["models",{"_index":1015,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["modifications",{"_index":2009,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1173,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"license.html":{}}}],["modified'})@apiresponse({status",{"_index":1447,"title":{},"body":{"controllers/TicketController.html":{}}}],["modify",{"_index":1707,"title":{},"body":{"injectables/ZipExportService.html":{},"license.html":{}}}],["modifying",{"_index":2141,"title":{},"body":{"license.html":{}}}],["module",{"_index":48,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/HbsRenderService.html":{},"modules/HealthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":50,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/HbsRenderService.html":{},"modules/HealthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monaco",{"_index":1317,"title":{},"body":{"injectables/TemplateEditorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["monaco.editor.create(container",{"_index":1320,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.editor.createmodel(content",{"_index":1355,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.getlanguages().find((lang",{"_index":1363,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.register",{"_index":1365,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setlanguageconfiguration('handlebars",{"_index":1383,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["monaco.languages.setmonarchtokensprovider('handlebars",{"_index":1366,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["mongodb",{"_index":714,"title":{},"body":{"classes/CreateProjectDto.html":{},"controllers/HealthController.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mongodb_uri",{"_index":1872,"title":{},"body":{"index.html":{}}}],["mongodb_uri=\"mongodb://mongodb/test",{"_index":1874,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":732,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mongoose's",{"_index":1821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mongoose.types.objectid",{"_index":1193,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["mongoose.types.objectid(userid",{"_index":1222,"title":{},"body":{"injectables/ProjectService.html":{}}}],["mongoosehealthindicator",{"_index":926,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1180,"title":{},"body":{"modules/ProjectModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_uri",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["monitor",{"_index":1893,"title":{},"body":{"index.html":{}}}],["monospace",{"_index":443,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["more",{"_index":1601,"title":{},"body":{"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{},"license.html":{}}}],["mouseevent",{"_index":910,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["multiple",{"_index":1931,"title":{},"body":{"index.html":{}}}],["name",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":2158,"title":{},"body":{"license.html":{}}}],["natively",{"_index":1847,"title":{},"body":{"index.html":{}}}],["navtabs",{"_index":866,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.find((t",{"_index":868,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs.length",{"_index":873,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["navtabs[0].id",{"_index":874,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["necessarily",{"_index":2092,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":747,"title":{},"body":{"classes/CreateTicketDto.html":{},"index.html":{}}}],["need",{"_index":1850,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":2190,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":2193,"title":{},"body":{"license.html":{}}}],["nest",{"_index":1783,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nestjs",{"_index":1782,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nestjs(express",{"_index":2260,"title":{},"body":{"properties.html":{}}}],["nestjs/axios",{"_index":948,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1551,"title":{},"body":{"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"controllers/HealthController.html":{},"classes/LoginUserDto.html":{},"controllers/ProjectController.html":{},"classes/RegisterUserDto.html":{},"controllers/TicketController.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":931,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["never",{"_index":1812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["newproject",{"_index":1223,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newproject.save",{"_index":1225,"title":{},"body":{"injectables/ProjectService.html":{}}}],["newticket",{"_index":1512,"title":{},"body":{"injectables/TicketService.html":{}}}],["newticket.save",{"_index":1514,"title":{},"body":{"injectables/TicketService.html":{}}}],["newuser",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.save",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":1369,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["ngmodule",{"_index":1396,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["ngondestroy",{"_index":568,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["ngoninit",{"_index":558,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["nikolaos",{"_index":2244,"title":{},"body":{"license.html":{},"properties.html":{}}}],["node.js",{"_index":1851,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":142,"title":{},"body":{"injectables/AppService.html":{}}}],["non",{"_index":711,"title":{},"body":{"classes/CreateProjectDto.html":{},"license.html":{}}}],["none",{"_index":489,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["normally",{"_index":2135,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["notfoundexception(\"user",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":2149,"title":{},"body":{"license.html":{}}}],["notice",{"_index":886,"title":{},"body":{"injectables/HbsRenderService.html":{},"license.html":{}}}],["notices",{"_index":2118,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1947,"title":{},"body":{"index.html":{}}}],["notwithstanding",{"_index":2147,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1854,"title":{},"body":{"index.html":{}}}],["null",{"_index":543,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{}}}],["nullify",{"_index":1459,"title":{},"body":{"controllers/TicketController.html":{}}}],["number",{"_index":129,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TicketService.html":{}}}],["number'})@matches",{"_index":1282,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["oauth2",{"_index":1912,"title":{},"body":{"index.html":{}}}],["object",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["objectid",{"_index":1020,"title":{},"body":{"classes/Project.html":{},"classes/UpdateProjectDto.html":{},"miscellaneous/functions.html":{}}}],["objectid.isvalid",{"_index":1822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["objectids",{"_index":715,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{}}}],["objectiduserid",{"_index":1221,"title":{},"body":{"injectables/ProjectService.html":{}}}],["objects",{"_index":1815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["obligations",{"_index":2215,"title":{},"body":{"license.html":{}}}],["observe",{"_index":658,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["obtain",{"_index":2247,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1528,"title":{},"body":{"injectables/TicketService.html":{}}}],["offer",{"_index":2087,"title":{},"body":{"license.html":{}}}],["once",{"_index":1883,"title":{},"body":{"index.html":{}}}],["onchangecallback",{"_index":1295,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["onclick",{"_index":905,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["onclick(event",{"_index":909,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["ondestroy",{"_index":342,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["one",{"_index":1272,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["oninit",{"_index":339,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["opacity",{"_index":502,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["open",{"_index":781,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["operating",{"_index":1863,"title":{},"body":{"index.html":{}}}],["operation",{"_index":1069,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"classes/UpdateTicketDto.html":{}}}],["operations",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["operator",{"_index":832,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["optimize",{"_index":1926,"title":{},"body":{"index.html":{}}}],["optional",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":462,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{}}}],["options.fn(this",{"_index":837,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["options.inverse(this",{"_index":838,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["order",{"_index":1799,"title":{},"body":{"miscellaneous/functions.html":{}}}],["origin",{"_index":2164,"title":{},"body":{"license.html":{}}}],["original",{"_index":1714,"title":{},"body":{"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["orlength",{"_index":857,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["otherwise",{"_index":145,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["outputs",{"_index":855,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["outstanding",{"_index":2000,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":458,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["overview",{"_index":379,"title":{"overview.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"overview.html":{}}}],["overviewrulerlanes",{"_index":1336,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["owner",{"_index":1011,"title":{},"body":{"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"license.html":{}}}],["ownership",{"_index":1997,"title":{},"body":{"license.html":{}}}],["owns",{"_index":1033,"title":{},"body":{"classes/Project.html":{},"classes/UpdateProjectDto.html":{}}}],["p",{"_index":1699,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["package",{"_index":649,"title":{"dependencies.html":{},"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["padding",{"_index":428,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["page",{"_index":646,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateTicketDto.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["page'})@isstring()@isnotempty",{"_index":790,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["page.hbs",{"_index":1702,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["pages",{"_index":1690,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["panel",{"_index":451,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["panel.collapsed",{"_index":460,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["param",{"_index":128,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"injectables/UserService.html":{}}}],["parameterhints",{"_index":1340,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["parchment",{"_index":149,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["part",{"_index":2126,"title":{},"body":{"license.html":{}}}],["partial",{"_index":356,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{}}}],["partials",{"_index":1703,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["partialtype",{"_index":1550,"title":{},"body":{"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["partialtype(createprojectdto",{"_index":1538,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createticketdto",{"_index":1557,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["particular",{"_index":2178,"title":{},"body":{"license.html":{}}}],["party",{"_index":2134,"title":{},"body":{"license.html":{}}}],["passport",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":978,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":970,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["passwordmatches",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["passwords",{"_index":1618,"title":{},"body":{"injectables/UserService.html":{}}}],["patch",{"_index":1116,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"index.html":{}}}],["patch(\":id",{"_index":1152,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":1110,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["patent",{"_index":2082,"title":{},"body":{"license.html":{}}}],["path",{"_index":355,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["path/to/custom/templates",{"_index":1701,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["payload",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1421,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["percent",{"_index":1999,"title":{},"body":{"license.html":{}}}],["perform",{"_index":2079,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1927,"title":{},"body":{"index.html":{}}}],["performs",{"_index":918,"title":{},"body":{"controllers/HealthController.html":{}}}],["permission",{"_index":1204,"title":{},"body":{"injectables/ProjectService.html":{},"license.html":{}}}],["permissions",{"_index":1171,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/User.html":{},"index.html":{},"license.html":{}}}],["perpetual",{"_index":2069,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":2125,"title":{},"body":{"license.html":{}}}],["places",{"_index":2130,"title":{},"body":{"license.html":{}}}],["plain",{"_index":1616,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoclass",{"_index":1210,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["plaintoclass(project",{"_index":1216,"title":{},"body":{"injectables/ProjectService.html":{}}}],["plaintoclass(ticket",{"_index":1511,"title":{},"body":{"injectables/TicketService.html":{}}}],["playground",{"_index":361,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["playground.component",{"_index":1405,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground.component.ts",{"_index":313,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["playground.module.ts",{"_index":1395,"title":{},"body":{"modules/TemplatePlaygroundModule.html":{}}}],["playground/hbs",{"_index":807,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/template",{"_index":312,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playground/zip",{"_index":1664,"title":{},"body":{"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["pointer",{"_index":493,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["pop",{"_index":1372,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["populate",{"_index":1227,"title":{},"body":{"injectables/ProjectService.html":{}}}],["populate(\"members",{"_index":1230,"title":{},"body":{"injectables/ProjectService.html":{}}}],["populate(\"tickets",{"_index":1229,"title":{},"body":{"injectables/ProjectService.html":{}}}],["port",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["port=\"3000",{"_index":1875,"title":{},"body":{"index.html":{}}}],["position",{"_index":514,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["possibility",{"_index":2210,"title":{},"body":{"license.html":{}}}],["possible",{"_index":784,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["possibly",{"_index":1819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["post",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"index.html":{}}}],["post(\"login",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('')@apioperation({summary",{"_index":1074,"title":{},"body":{"controllers/ProjectController.html":{}}}],["post('login')@apiresponse({status",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiresponse({status",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":1432,"title":{},"body":{"controllers/TicketController.html":{}}}],["potential",{"_index":1896,"title":{},"body":{"index.html":{}}}],["power",{"_index":1991,"title":{},"body":{"license.html":{}}}],["preferences",{"_index":1946,"title":{},"body":{"index.html":{}}}],["preferred",{"_index":2008,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["prepare",{"_index":2077,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1903,"title":{},"body":{"index.html":{}}}],["preview",{"_index":401,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewframe",{"_index":541,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["previewurl",{"_index":551,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary",{"_index":523,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["primary:hover",{"_index":524,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["printed",{"_index":2239,"title":{},"body":{"license.html":{}}}],["prioritize",{"_index":1844,"title":{},"body":{"index.html":{}}}],["priority",{"_index":743,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["private",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["process",{"_index":1900,"title":{},"body":{"index.html":{}}}],["process.env.jwt_secret",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":2160,"title":{},"body":{"license.html":{}}}],["production",{"_index":124,"title":{},"body":{"injectables/AppService.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["profile",{"_index":1570,"title":{},"body":{"classes/UpdateUserDto.html":{},"index.html":{}}}],["progress",{"_index":786,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["project",{"_index":693,"title":{"classes/Project.html":{}},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["project'})@isstring()@isnotempty",{"_index":724,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.'})@isstring()@isnotempty",{"_index":709,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.controller",{"_index":1179,"title":{},"body":{"modules/ProjectModule.html":{}}}],["project.createdby",{"_index":1248,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.createdby._id.equals(userid",{"_index":1259,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.dto",{"_index":1121,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":690,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.dto.ts:29",{"_index":725,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:32",{"_index":1543,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:46",{"_index":710,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:48",{"_index":1540,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:64",{"_index":1545,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:65",{"_index":718,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:82",{"_index":1541,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:97",{"_index":1549,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.errors",{"_index":1212,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.name",{"_index":1181,"title":{},"body":{"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{}}}],["project.owner",{"_index":1246,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project.save",{"_index":1516,"title":{},"body":{"injectables/TicketService.html":{}}}],["project.schema",{"_index":1416,"title":{},"body":{"classes/Ticket.html":{}}}],["project.service",{"_index":1124,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{}}}],["project.tickets.push(createdticket._id",{"_index":1515,"title":{},"body":{"injectables/TicketService.html":{}}}],["project/project.errors",{"_index":1504,"title":{},"body":{"injectables/TicketService.html":{}}}],["project/project.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["project/tickets",{"_index":2258,"title":{},"body":{"properties.html":{}}}],["projectcontroller",{"_index":1061,"title":{"controllers/ProjectController.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"coverage.html":{}}}],["projectdocument",{"_index":1041,"title":{},"body":{"classes/Project.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["projectdoesnotexist",{"_index":1131,"title":{"classes/ProjectDoesNotExist.html":{}},"body":{"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["projectdoesnotexist(\"project",{"_index":1237,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectdoesnotexist(`project",{"_index":1241,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["projectdoesnotexist(`ticket",{"_index":1530,"title":{},"body":{"injectables/TicketService.html":{}}}],["projecterror",{"_index":1162,"title":{"classes/ProjectError.html":{}},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projecterror(`didn't",{"_index":1263,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectid",{"_index":750,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{}}}],["projectidvalidationerror",{"_index":1140,"title":{"classes/ProjectIdValidationError.html":{}},"body":{"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["projectidvalidationerror(\"provided",{"_index":1236,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["projectidvalidationerror(`invalid",{"_index":1508,"title":{},"body":{"injectables/TicketService.html":{}}}],["projectinsufficientpermissionserror",{"_index":1156,"title":{"classes/ProjectInsufficientPermissionsError.html":{}},"body":{"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projectinsufficientpermissionserror(`you",{"_index":1260,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectmodel",{"_index":1192,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["projectmodule",{"_index":62,"title":{"modules/ProjectModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectModule.html":{},"modules.html":{},"overview.html":{}}}],["projectnotmodifiederror",{"_index":1148,"title":{"classes/ProjectNotModifiedError.html":{}},"body":{"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projectnotmodifiederror(\"no",{"_index":1253,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectrelationconflict",{"_index":1145,"title":{"classes/ProjectRelationConflict.html":{}},"body":{"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projectrelationconflict(`project",{"_index":1219,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects",{"_index":1065,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"index.html":{}}}],["projects.length",{"_index":1233,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projects/tickets",{"_index":1884,"title":{},"body":{"index.html":{}}}],["projectschema",{"_index":1057,"title":{},"body":{"classes/Project.html":{},"modules/ProjectModule.html":{},"modules/TicketModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectservice",{"_index":1123,"title":{"injectables/ProjectService.html":{}},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"coverage.html":{},"overview.html":{}}}],["projectslugvalidationerror",{"_index":1169,"title":{"classes/ProjectSlugValidationError.html":{}},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projectupdatedatavalidationerror",{"_index":1174,"title":{"classes/ProjectUpdateDataValidationError.html":{}},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["projectupdatedatavalidationerror(\"invalid",{"_index":1251,"title":{},"body":{"injectables/ProjectService.html":{}}}],["project})@apiresponse({status",{"_index":1077,"title":{},"body":{"controllers/ProjectController.html":{}}}],["prominent",{"_index":2117,"title":{},"body":{"license.html":{}}}],["promise",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["prop",{"_index":1037,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["prop(['undefined",{"_index":1029,"title":{},"body":{"classes/Project.html":{}}}],["prop({default",{"_index":1025,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1023,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["prop({type",{"_index":1019,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["properties",{"_index":314,"title":{"properties.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"properties.html":{}}}],["property",{"_index":992,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/Project.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"classes/UpdateUserDto.html":{}}}],["protected",{"_index":386,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["protecting",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["provide",{"_index":995,"title":{},"body":{"classes/LoginUserDto.html":{},"license.html":{}}}],["provided",{"_index":721,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/LoginUserDto.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["provided.'})@apiresponse({status",{"_index":1078,"title":{},"body":{"controllers/ProjectController.html":{}}}],["providedin",{"_index":822,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":120,"title":{},"body":{"injectables/AppService.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"license.html":{}}}],["providing",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["public",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["publicly",{"_index":2078,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1936,"title":{},"body":{"index.html":{}}}],["pull",{"_index":1960,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2054,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1988,"title":{},"body":{"license.html":{}}}],["put",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["put(\"users/name",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["qa",{"_index":1422,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["queries",{"_index":1928,"title":{},"body":{"index.html":{}}}],["quicksuggestions",{"_index":1337,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["radius",{"_index":494,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["rate",{"_index":1901,"title":{},"body":{"index.html":{}}}],["readable",{"_index":2128,"title":{},"body":{"license.html":{}}}],["readme",{"_index":1680,"title":{"index.html":{}},"body":{"injectables/ZipExportService.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["real",{"_index":1268,"title":{},"body":{"classes/RegisterUserDto.html":{},"index.html":{}}}],["reason",{"_index":2229,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2161,"title":{},"body":{"license.html":{}}}],["received",{"_index":2062,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":2114,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2238,"title":{},"body":{"license.html":{}}}],["recovery",{"_index":1915,"title":{},"body":{"index.html":{}}}],["red",{"_index":890,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["redistributing",{"_index":2182,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":2110,"title":{},"body":{"license.html":{}}}],["ref",{"_index":1021,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["refer",{"_index":154,"title":{},"body":{"injectables/AppService.html":{}}}],["reflect",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":402,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["refreshpreview",{"_index":627,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["regarding",{"_index":2155,"title":{},"body":{"license.html":{}}}],["regenerated",{"_index":622,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["register",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["register(@body",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registeruserdto",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["registered",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TemplateEditorService.html":{}}}],["registerhandlebarslanguage",{"_index":1298,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["registerhelpers",{"_index":812,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["registers",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["registeruserdto",{"_index":199,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registration",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["registry",{"_index":1939,"title":{},"body":{"index.html":{}}}],["related",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["relation",{"_index":1165,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["relationships",{"_index":1014,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["relative",{"_index":515,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["relativeurl",{"_index":845,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["remain",{"_index":2032,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1086,"title":{},"body":{"controllers/ProjectController.html":{}}}],["rename",{"_index":1865,"title":{},"body":{"index.html":{}}}],["render.service",{"_index":354,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{}}}],["render.service.ts",{"_index":808,"title":{},"body":{"injectables/HbsRenderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["render.service.ts:131",{"_index":819,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:15",{"_index":816,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:184",{"_index":815,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:23",{"_index":817,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["render.service.ts:9",{"_index":814,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendered",{"_index":879,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate",{"_index":813,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["rendertemplate(templatecontent",{"_index":818,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["repeat(auto",{"_index":465,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["replace",{"_index":1868,"title":{},"body":{"index.html":{}}}],["replaced",{"_index":2235,"title":{},"body":{"license.html":{}}}],["reporting",{"_index":1949,"title":{},"body":{"index.html":{}}}],["reports",{"_index":1958,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1858,"title":{},"body":{"index.html":{}}}],["represent",{"_index":1542,"title":{},"body":{"classes/UpdateProjectDto.html":{},"license.html":{}}}],["representation",{"_index":1823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["representatives",{"_index":2048,"title":{},"body":{"license.html":{}}}],["represented",{"_index":802,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{}}}],["representing",{"_index":769,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateProjectDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":783,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/User.html":{}}}],["reproduce",{"_index":2076,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":2165,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1972,"title":{},"body":{"license.html":{}}}],["req",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["req.user",{"_index":1137,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["req.user._id",{"_index":1136,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["request",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{},"index.html":{}}}],["request.'})@apiresponse({status",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["requested",{"_index":1068,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["requesting",{"_index":1198,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["requests",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/TicketController.html":{},"index.html":{}}}],["required",{"_index":698,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["requires",{"_index":988,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CompoDocConfig.html":{},"modules/ProjectModule.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetting",{"_index":632,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resettodefault",{"_index":630,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["resolution",{"_index":1952,"title":{},"body":{"index.html":{}}}],["resolves",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["respected",{"_index":1188,"title":{},"body":{"injectables/ProjectService.html":{}}}],["response",{"_index":572,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["response.body",{"_index":659,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.config",{"_index":594,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.headers.get('content",{"_index":665,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.sessionid",{"_index":576,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.success",{"_index":575,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["response.templates",{"_index":585,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responses",{"_index":1066,"title":{},"body":{"controllers/ProjectController.html":{}}}],["responsetype",{"_index":656,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["responsibility",{"_index":2221,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":86,"title":{},"body":{"injectables/AppService.html":{},"injectables/UserService.html":{},"license.html":{}}}],["restore",{"_index":1913,"title":{},"body":{"index.html":{}}}],["restricted",{"_index":1579,"title":{},"body":{"classes/User.html":{}}}],["result",{"_index":833,"title":{},"body":{"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"license.html":{}}}],["result.deletedcount",{"_index":1262,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["resulting",{"_index":2012,"title":{},"body":{"license.html":{}}}],["results",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":844,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["retain",{"_index":2122,"title":{},"body":{"license.html":{}}}],["retrieval",{"_index":1184,"title":{},"body":{"injectables/ProjectService.html":{}}}],["retrieve",{"_index":1097,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["retrieved",{"_index":1101,"title":{},"body":{"controllers/ProjectController.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["retrieves",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["retrieving",{"_index":973,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/TicketService.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TemplateEditorService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["revisions",{"_index":2028,"title":{},"body":{"license.html":{}}}],["right",{"_index":476,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["rights",{"_index":2217,"title":{},"body":{"license.html":{}}}],["risks",{"_index":2184,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":417,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["role",{"_index":1574,"title":{},"body":{"classes/User.html":{}}}],["roles",{"_index":1187,"title":{},"body":{"injectables/ProjectService.html":{},"index.html":{}}}],["root",{"_index":362,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["roundedselection",{"_index":1332,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["routes",{"_index":383,"title":{"routes.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"routes.html":{}}}],["royalty",{"_index":2073,"title":{},"body":{"license.html":{}}}],["rules",{"_index":697,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/UpdateProjectDto.html":{},"index.html":{}}}],["run",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["running",{"_index":116,"title":{},"body":{"injectables/AppService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["runvalidators",{"_index":1527,"title":{},"body":{"injectables/TicketService.html":{}}}],["rxjs",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{},"license.html":{}}}],["sample",{"_index":708,"title":{},"body":{"classes/CreateProjectDto.html":{},"injectables/HbsRenderService.html":{}}}],["samplecomponent",{"_index":896,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["sanitized",{"_index":1837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitizedupdate",{"_index":1525,"title":{},"body":{"injectables/TicketService.html":{}}}],["sanitizes",{"_index":1835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitizeupdateticketdto",{"_index":1502,"title":{},"body":{"injectables/TicketService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sanitizeupdateticketdto(updateticketdto",{"_index":1526,"title":{},"body":{"injectables/TicketService.html":{},"miscellaneous/functions.html":{}}}],["sans",{"_index":418,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save",{"_index":599,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["save_delay",{"_index":547,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saved",{"_index":367,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saveduser",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["saveduser.toobject",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["savetemplate(content",{"_index":618,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["savetimeout",{"_index":546,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["saving",{"_index":365,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scenarios",{"_index":1832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["schedule",{"_index":613,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["scheduleautosave(content",{"_index":607,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["schema",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"classes/Project.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":1038,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(project",{"_index":1060,"title":{},"body":{"classes/Project.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticket",{"_index":1427,"title":{},"body":{"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1592,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/project.schema",{"_index":1126,"title":{},"body":{"controllers/ProjectController.html":{},"modules/ProjectModule.html":{},"injectables/ProjectService.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["schemas/ticket.schema",{"_index":1454,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["schemas/user.schema",{"_index":803,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/UserService.html":{}}}],["screenshots",{"_index":1921,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1694,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["scrollbar",{"_index":1333,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scrollbeyondlastline",{"_index":1327,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["scss",{"_index":1358,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seamless",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["search",{"_index":385,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"index.html":{}}}],["second",{"_index":1801,"title":{},"body":{"miscellaneous/functions.html":{}}}],["secondary",{"_index":527,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secondary:hover",{"_index":528,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["secret",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":984,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":2085,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1976,"title":{},"body":{"license.html":{}}}],["see",{"_index":1966,"title":{},"body":{"index.html":{},"license.html":{}}}],["seed",{"_index":1876,"title":{},"body":{"index.html":{}}}],["segoe",{"_index":415,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["select",{"_index":586,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TicketService.html":{}}}],["selectedfile",{"_index":542,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.path",{"_index":398,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectedfile.type",{"_index":399,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selectfile(template",{"_index":603,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["selector",{"_index":360,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sell",{"_index":2088,"title":{},"body":{"license.html":{}}}],["sent",{"_index":2047,"title":{},"body":{"license.html":{}}}],["separable",{"_index":2033,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2152,"title":{},"body":{"license.html":{}}}],["serif",{"_index":419,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["server",{"_index":651,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["service",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"license.html":{}}}],["services",{"_index":920,"title":{},"body":{"controllers/HealthController.html":{}}}],["session",{"_index":357,"title":{"interfaces/Session.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["sessionid",{"_index":358,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["sessionid.substring(0",{"_index":363,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["set",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"classes/LoginUserDto.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{}}}],["seteditorcontent",{"_index":1299,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["seteditorcontent(content",{"_index":1309,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback",{"_index":1300,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["setonchangecallback(callback",{"_index":1311,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["sets",{"_index":1784,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shall",{"_index":1974,"title":{},"body":{"license.html":{}}}],["shares",{"_index":2001,"title":{},"body":{"license.html":{}}}],["showconfigpanel",{"_index":544,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["side",{"_index":652,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["sidebar",{"_index":473,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["signature",{"_index":904,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["signoptions",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":848,"title":{},"body":{"injectables/HbsRenderService.html":{},"miscellaneous/functions.html":{}}}],["single",{"_index":1106,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"injectables/TicketService.html":{}}}],["size",{"_index":439,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["slug",{"_index":1167,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["sm",{"_index":534,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["software",{"_index":2011,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2220,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2179,"title":{},"body":{"license.html":{}}}],["solid",{"_index":436,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"modules/ProjectModule.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["space",{"_index":423,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["spacing",{"_index":487,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["special",{"_index":1274,"title":{},"body":{"classes/RegisterUserDto.html":{},"license.html":{}}}],["specific",{"_index":1440,"title":{},"body":{"controllers/TicketController.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["specification",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["specified",{"_index":110,"title":{},"body":{"injectables/AppService.html":{},"controllers/ProjectController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{}}}],["specify",{"_index":1697,"title":{},"body":{"injectables/ZipExportService.html":{},"index.html":{}}}],["src/.../hasusernameoremail.decorator.ts",{"_index":1778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":1777,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1776,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../project.schema.ts",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ticket.schema.ts",{"_index":2270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ticket.utils.ts",{"_index":1779,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:20",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:24",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:40",{"_index":114,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:52",{"_index":119,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/sample/sample.component.ts",{"_index":898,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["src/auth/auth.controller.ts",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:105",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:56",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:90",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:34",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/hasusernameoremail.decorator.ts",{"_index":1734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/auth/dto/login",{"_index":986,"title":{},"body":{"classes/LoginUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/dto/register",{"_index":1264,"title":{},"body":{"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":1569,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/auth/interfaces/user.interface.ts",{"_index":797,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"coverage.html":{}}}],["src/auth/jwt",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:15",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:38",{"_index":977,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/health/health.controller.ts",{"_index":913,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:47",{"_index":917,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":946,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1737,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/project/dto/create",{"_index":689,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/project/dto/update",{"_index":1535,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/project/interfaces/project.interface.ts",{"_index":804,"title":{},"body":{"interfaces/ExpressRequestWithUser-1.html":{},"coverage.html":{}}}],["src/project/project.controller.ts",{"_index":1062,"title":{},"body":{"controllers/ProjectController.html":{},"coverage.html":{}}}],["src/project/project.controller.ts:145",{"_index":1082,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:208",{"_index":1115,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:256",{"_index":1093,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:47",{"_index":1103,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.controller.ts:97",{"_index":1107,"title":{},"body":{"controllers/ProjectController.html":{}}}],["src/project/project.errors.ts",{"_index":1161,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"coverage.html":{}}}],["src/project/project.errors.ts:5",{"_index":1175,"title":{},"body":{"classes/ProjectError.html":{}}}],["src/project/project.module.ts",{"_index":1178,"title":{},"body":{"modules/ProjectModule.html":{}}}],["src/project/project.service.ts",{"_index":1182,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/project/project.service.ts:132",{"_index":1207,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:187",{"_index":1196,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:31",{"_index":1191,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:45",{"_index":1194,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:74",{"_index":1201,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/project/project.service.ts:99",{"_index":1203,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/schemas/project.schema.ts",{"_index":1009,"title":{},"body":{"classes/Project.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/project.schema.ts:104",{"_index":1034,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:40",{"_index":1031,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:49",{"_index":1024,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:58",{"_index":1032,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:67",{"_index":1030,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:75",{"_index":1026,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:84",{"_index":1022,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/project.schema.ts:93",{"_index":1035,"title":{},"body":{"classes/Project.html":{}}}],["src/schemas/ticket.schema.ts",{"_index":1406,"title":{},"body":{"classes/Ticket.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/ticket.schema.ts:32",{"_index":1415,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:41",{"_index":1409,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:50",{"_index":1408,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:59",{"_index":1407,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:68",{"_index":1413,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:80",{"_index":1414,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:89",{"_index":1412,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/ticket.schema.ts:99",{"_index":1410,"title":{},"body":{"classes/Ticket.html":{}}}],["src/schemas/user.schema",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{}}}],["src/schemas/user.schema.ts",{"_index":1571,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/schemas/user.schema.ts:14",{"_index":1587,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:18",{"_index":1582,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:22",{"_index":1575,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:26",{"_index":1581,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:33",{"_index":1584,"title":{},"body":{"classes/User.html":{}}}],["src/schemas/user.schema.ts:40",{"_index":1576,"title":{},"body":{"classes/User.html":{}}}],["src/ticket/dto/create",{"_index":736,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/dto/update",{"_index":1554,"title":{},"body":{"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/interfaces/ticket.interface.ts",{"_index":806,"title":{},"body":{"interfaces/ExpressRequestWithUser-2.html":{},"coverage.html":{}}}],["src/ticket/ticket.controller.ts",{"_index":1429,"title":{},"body":{"controllers/TicketController.html":{},"coverage.html":{}}}],["src/ticket/ticket.controller.ts:124",{"_index":1448,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:143",{"_index":1435,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:32",{"_index":1437,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:52",{"_index":1439,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:73",{"_index":1433,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.errors.ts",{"_index":1474,"title":{},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["src/ticket/ticket.errors.ts:5",{"_index":1481,"title":{},"body":{"classes/TicketError.html":{}}}],["src/ticket/ticket.module.ts",{"_index":1484,"title":{},"body":{"modules/TicketModule.html":{}}}],["src/ticket/ticket.service.ts",{"_index":1486,"title":{},"body":{"injectables/TicketService.html":{},"coverage.html":{}}}],["src/ticket/ticket.service.ts:111",{"_index":1500,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:148",{"_index":1493,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:21",{"_index":1489,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:36",{"_index":1491,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:62",{"_index":1496,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:84",{"_index":1498,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/utils/ticket.utils.ts",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/user.module.ts",{"_index":1598,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["src/user/user.service.ts",{"_index":1600,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:110",{"_index":1635,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:130",{"_index":1633,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":1608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:34",{"_index":1628,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:62",{"_index":1614,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:72",{"_index":1624,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:82",{"_index":1626,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:93",{"_index":1621,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/index.ts",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sse",{"_index":1917,"title":{},"body":{"index.html":{}}}],["staging",{"_index":1423,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"index.html":{}}}],["start",{"_index":1861,"title":{},"body":{"index.html":{}}}],["started",{"_index":152,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["starts",{"_index":1788,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":2146,"title":{},"body":{"license.html":{}}}],["stated",{"_index":2084,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2142,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":538,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["stating",{"_index":2119,"title":{},"body":{"license.html":{}}}],["status",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["statuscode",{"_index":1468,"title":{},"body":{"controllers/TicketController.html":{}}}],["statuses",{"_index":1942,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":2203,"title":{},"body":{"license.html":{}}}],["stored",{"_index":1573,"title":{},"body":{"classes/User.html":{}}}],["strategy",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["string",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["strings",{"_index":1339,"title":{},"body":{"injectables/TemplateEditorService.html":{},"miscellaneous/functions.html":{}}}],["string})@apibody({description",{"_index":1111,"title":{},"body":{"controllers/ProjectController.html":{}}}],["string})@apibody({type",{"_index":1443,"title":{},"body":{"controllers/TicketController.html":{}}}],["string})@apiresponse({status",{"_index":1088,"title":{},"body":{"controllers/ProjectController.html":{}}}],["strongp@ssw0rd",{"_index":1006,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["strongp@ssw0rd!'})@isstring()@isnotempty",{"_index":998,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["strongp@ssw0rd!'})@isstring()@isnotempty()@length(8",{"_index":1276,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["structure",{"_index":695,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"injectables/ZipExportService.html":{}}}],["style",{"_index":394,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["styles",{"_index":403,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["stylesheets",{"_index":1691,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["sub",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":2066,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":2080,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2144,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1959,"title":{},"body":{"index.html":{},"license.html":{}}}],["submitted",{"_index":2040,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":2063,"title":{},"body":{"license.html":{}}}],["success",{"_index":359,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["success:hover",{"_index":531,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["successful",{"_index":1199,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["successfully",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["such",{"_index":1010,"title":{},"body":{"classes/Project.html":{},"injectables/ProjectService.html":{},"classes/Ticket.html":{},"classes/User.html":{},"index.html":{},"license.html":{}}}],["suggestions",{"_index":1957,"title":{},"body":{"index.html":{}}}],["suggestontriggercharacters",{"_index":1344,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["summary",{"_index":1133,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["super",{"_index":980,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(message",{"_index":1164,"title":{},"body":{"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{}}}],["supersede",{"_index":2151,"title":{},"body":{"license.html":{}}}],["support",{"_index":1909,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["sure",{"_index":634,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["surroundingpairs",{"_index":1388,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["svg",{"_index":2251,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["swc/helpers",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":834,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["syntax",{"_index":894,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/ZipExportService.html":{},"license.html":{}}}],["system",{"_index":413,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["systems",{"_index":2051,"title":{},"body":{"license.html":{}}}],["t",{"_index":1814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["t.id",{"_index":869,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["t\\r\\n",{"_index":1377,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tab",{"_index":393,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tabcompletion",{"_index":1346,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tabid",{"_index":867,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["table",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1748,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1376,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tasks",{"_index":1047,"title":{},"body":{"classes/Project.html":{},"index.html":{}}}],["teams",{"_index":1842,"title":{},"body":{"index.html":{}}}],["template",{"_index":347,"title":{"interfaces/Template.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{}}}],["template.name",{"_index":395,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["template.type",{"_index":396,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["templatecontent",{"_index":820,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["templateeditorservice",{"_index":346,"title":{"injectables/TemplateEditorService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundcomponent",{"_index":535,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"coverage.html":{},"overview.html":{}}}],["templateplaygroundmodule",{"_index":1390,"title":{"modules/TemplatePlaygroundModule.html":{}},"body":{"modules/TemplatePlaygroundModule.html":{},"modules.html":{},"overview.html":{}}}],["templates",{"_index":372,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["templates.zip",{"_index":1687,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["terminate",{"_index":2108,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":949,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":1970,"title":{},"body":{"license.html":{}}}],["tests",{"_index":1899,"title":{},"body":{"index.html":{}}}],["text",{"_index":483,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/UserService.html":{},"license.html":{}}}],["theme",{"_index":1322,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["themes",{"_index":1948,"title":{},"body":{"index.html":{}}}],["then((content",{"_index":1685,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["theory",{"_index":2188,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":2036,"title":{},"body":{"license.html":{}}}],["third",{"_index":2133,"title":{},"body":{"license.html":{}}}],["this.appservice.devinstructions",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(loginuserdto",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.comparepassword(loginuserdto.password",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["this.config",{"_index":593,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.configservice.get(\"node_env",{"_index":146,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get(\"port",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["this.createsession",{"_index":560,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.disk.checkstorage(\"storage",{"_index":943,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.downloadblob(content",{"_index":1686,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.editor",{"_index":1319,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.dispose",{"_index":1389,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.ondidchangemodelcontent",{"_index":1349,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editor.setmodel(model",{"_index":1356,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.editorservice.initializeeditor(this.editorcontainer.nativeelement",{"_index":596,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.seteditorcontent(response.content",{"_index":605,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.editorservice.setonchangecallback((content",{"_index":601,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.findbyusernameoremail(loginuserdto.email",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["this.generatereadme",{"_index":1681,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["this.getlanguagefromfiletype(filetype",{"_index":1354,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.handlebarsinstance",{"_index":824,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.compile(templatecontent",{"_index":878,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('compare",{"_index":831,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('each",{"_index":842,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('isinitialtab",{"_index":871,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('istabenabled",{"_index":865,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('orlength",{"_index":858,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('relativeurl",{"_index":846,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.handlebarsinstance.registerhelper('unless",{"_index":840,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.health.check",{"_index":934,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/config`).topromise",{"_index":592,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/template/${template.path}`).topromise",{"_index":604,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.get(`/api/session/${this.sessionid}/templates`).topromise",{"_index":583,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.pingcheck(\"uptime",{"_index":935,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.post('/api/session/create",{"_index":573,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/config",{"_index":621,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/download",{"_index":655,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.http.post(`/api/session/${this.sessionid}/template/${this.selectedfile.path",{"_index":619,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializeeditor",{"_index":563,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.initializehandlebars",{"_index":823,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.isdev",{"_index":148,"title":{},"body":{"injectables/AppService.html":{}}}],["this.jwtservice.sign(payload",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastsaved",{"_index":616,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessionconfig",{"_index":562,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.loadsessiontemplates",{"_index":561,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.memory.checkheap(\"memory_heap",{"_index":942,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory_rss",{"_index":940,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.mongodb.pingcheck(\"mongodb",{"_index":938,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.onchangecallback",{"_index":1350,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.onchangecallback(this.editor.getvalue",{"_index":1351,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.previewframe.nativeelement.src",{"_index":629,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.previewframe?.nativeelement",{"_index":628,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.projectmodel",{"_index":1224,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmodel(updateprojectdto",{"_index":1244,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmodel.deleteone",{"_index":1261,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmodel.findbyid(createticketdto.projectid).exec",{"_index":1510,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.projectmodel.findbyid(projectid).exec",{"_index":1240,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectmodel.findone",{"_index":1218,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.projectservice.create(createprojectdto",{"_index":1147,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.delete(id",{"_index":1160,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.findall(userid",{"_index":1138,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.findone(id",{"_index":1144,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.projectservice.update(id",{"_index":1155,"title":{},"body":{"controllers/ProjectController.html":{}}}],["this.registerhandlebarslanguage",{"_index":1353,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["this.registerhelpers",{"_index":828,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["this.save_delay",{"_index":617,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetemplate(content",{"_index":615,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.savetimeout",{"_index":569,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.saving",{"_index":612,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.scheduleautosave(content",{"_index":602,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectedfile",{"_index":589,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.selectfile(this.templates[0",{"_index":590,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid",{"_index":552,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.sessionid}.zip",{"_index":667,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.showconfigpanel",{"_index":626,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates",{"_index":584,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.templates.length",{"_index":588,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["this.ticketmodel",{"_index":1513,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketmodel.deleteone",{"_index":1533,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketmodel.findbyid(ticketid).exec",{"_index":1521,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketmodel.findone",{"_index":1529,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketservice.create(createticketdto",{"_index":1467,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.delete(id",{"_index":1472,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findall(userid",{"_index":1464,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findone(id",{"_index":1465,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.update(id",{"_index":1471,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.usermodel",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(userid).exec",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyusername(payload.username",{"_index":985,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.register(registeruserdto",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updateusername(req.user._id",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.validateuser(loginuserdto",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":2089,"title":{},"body":{"license.html":{}}}],["threshold",{"_index":944,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1977,"title":{},"body":{"license.html":{}}}],["throw",{"_index":579,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["thrown",{"_index":1811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throws",{"_index":130,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["ticket",{"_index":738,"title":{"classes/Ticket.html":{}},"body":{"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"modules/TicketModule.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ticket's",{"_index":739,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@apiresponse({status",{"_index":1444,"title":{},"body":{"controllers/TicketController.html":{}}}],["ticket.controller",{"_index":1485,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticket.createdby._id.equals(userid",{"_index":1531,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticket.dto",{"_index":1450,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts",{"_index":737,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["ticket.dto.ts:101",{"_index":782,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:106",{"_index":1566,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:120",{"_index":773,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:124",{"_index":1564,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:139",{"_index":768,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:29",{"_index":791,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:34",{"_index":1567,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:45",{"_index":760,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:51",{"_index":1561,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:65",{"_index":752,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:69",{"_index":1559,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:81",{"_index":779,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:87",{"_index":1565,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.errors",{"_index":1501,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticket.name",{"_index":1056,"title":{},"body":{"classes/Project.html":{},"modules/TicketModule.html":{}}}],["ticket.schema",{"_index":1039,"title":{},"body":{"classes/Project.html":{}}}],["ticket.service",{"_index":1453,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["ticket/ticket.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["ticketcontroller",{"_index":1428,"title":{"controllers/TicketController.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"coverage.html":{}}}],["ticketdoesnotexist",{"_index":1473,"title":{"classes/TicketDoesNotExist.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticketdoesnotexist(\"ticket",{"_index":1518,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketdoesnotexist(`ticket",{"_index":1522,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketerror",{"_index":1475,"title":{"classes/TicketError.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticketerror(`didn't",{"_index":1534,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketid",{"_index":1494,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketidvalidationerror",{"_index":1478,"title":{"classes/TicketIdValidationError.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticketidvalidationerror(\"provided",{"_index":1520,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketinsufficientpermissionserror",{"_index":1479,"title":{"classes/TicketInsufficientPermissionsError.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticketinsufficientpermissionserror(`you",{"_index":1532,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketmodel",{"_index":1490,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketmodule",{"_index":63,"title":{"modules/TicketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["ticketnotmodifiederror",{"_index":1480,"title":{"classes/TicketNotModifiedError.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"injectables/TicketService.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticketnotmodifiederror(\"no",{"_index":1524,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketrelationconflict",{"_index":1476,"title":{"classes/TicketRelationConflict.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["tickets",{"_index":1012,"title":{},"body":{"classes/Project.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"index.html":{}}}],["tickets.length",{"_index":1517,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketschema",{"_index":1426,"title":{},"body":{"classes/Ticket.html":{},"modules/TicketModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketservice",{"_index":1452,"title":{"injectables/TicketService.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{},"overview.html":{}}}],["ticketslugvalidationerror",{"_index":1477,"title":{"classes/TicketSlugValidationError.html":{}},"body":{"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"coverage.html":{}}}],["ticket})@apiresponse({status",{"_index":1445,"title":{},"body":{"controllers/TicketController.html":{}}}],["time",{"_index":763,"title":{},"body":{"classes/CreateTicketDto.html":{},"index.html":{}}}],["timeout",{"_index":611,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/HealthController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["timestamps",{"_index":1044,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["tips",{"_index":1705,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["title",{"_index":740,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"license.html":{}}}],["tms",{"_index":150,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"properties.html":{}}}],["todo",{"_index":639,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggle",{"_index":377,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["toggleconfigpanel",{"_index":625,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["token",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/TemplateEditorService.html":{},"index.html":{}}}],["tokenizer",{"_index":1367,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tokens",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["top",{"_index":470,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["topromise",{"_index":574,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tort",{"_index":2189,"title":{},"body":{"license.html":{}}}],["total",{"_index":1951,"title":{},"body":{"index.html":{}}}],["toy",{"_index":1839,"title":{},"body":{"index.html":{}}}],["track",{"_index":1843,"title":{},"body":{"index.html":{}}}],["trackbyname(index",{"_index":684,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tracking",{"_index":2052,"title":{},"body":{"license.html":{}}}],["trade",{"_index":2157,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2123,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2156,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProjectDto.html":{},"classes/LoginUserDto.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"license.html":{}}}],["transform",{"_index":484,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["transformation",{"_index":2014,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1211,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"dependencies.html":{}}}],["transition",{"_index":453,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["translation",{"_index":849,"title":{},"body":{"injectables/HbsRenderService.html":{},"license.html":{}}}],["translations",{"_index":851,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["translations[key",{"_index":856,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["transparent",{"_index":519,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["tree",{"_index":392,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["trigger",{"_index":671,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["true",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["true})@apiproperty({description",{"_index":1558,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["try",{"_index":559,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"controllers/ProjectController.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{}}}],["ts",{"_index":1361,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["tsconfig.json",{"_index":1700,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["two",{"_index":1792,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CompoDocConfig.html":{},"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/HbsRenderService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"classes/ProjectError.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketError.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2263,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":701,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"dependencies.html":{},"license.html":{}}}],["types.objectid",{"_index":713,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{}}}],["typescript",{"_index":1362,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["typically",{"_index":1546,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["uat",{"_index":1424,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["ui",{"_index":416,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unable",{"_index":1419,"title":{},"body":{"classes/Ticket.html":{}}}],["unauthorizedexception",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception(\"invalid",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["undefined",{"_index":716,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{}}}],["undefined})@apiresponse({status",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{}}}],["under",{"_index":1963,"title":{},"body":{"index.html":{},"license.html":{}}}],["undone",{"_index":638,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["unintended",{"_index":1462,"title":{},"body":{"controllers/TicketController.html":{}}}],["union",{"_index":1983,"title":{},"body":{"license.html":{}}}],["unique",{"_index":125,"title":{},"body":{"injectables/AppService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["unless",{"_index":839,"title":{},"body":{"injectables/HbsRenderService.html":{},"license.html":{}}}],["up",{"_index":597,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["update",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"injectables/ProjectService.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["update(@param(\"id",{"_index":1153,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["update(id",{"_index":1108,"title":{},"body":{"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["update(projectid",{"_index":1206,"title":{},"body":{"injectables/ProjectService.html":{}}}],["update(ticketid",{"_index":1499,"title":{},"body":{"injectables/TicketService.html":{}}}],["updateconfig",{"_index":620,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["updated",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CompoDocConfig.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["updatedby",{"_index":1018,"title":{},"body":{"classes/Project.html":{}}}],["updatedproject",{"_index":1154,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{}}}],["updatedticket",{"_index":1470,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["updateduser",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.toobject",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["updatefields",{"_index":1254,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updatefields[key",{"_index":1256,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updateprojectdto",{"_index":1109,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["updateprojectdto.hasownproperty(key",{"_index":1255,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updateprojectdto[key",{"_index":1257,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updateprojectdto})@apiresponse({status",{"_index":1113,"title":{},"body":{"controllers/ProjectController.html":{}}}],["updates",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["updateticketdto",{"_index":1441,"title":{"classes/UpdateTicketDto.html":{}},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["updateuserdto",{"_index":214,"title":{"classes/UpdateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusername",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["updateusername(@body",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateusername(updateuserdto",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateusername(userid",{"_index":1632,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":624,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["uploads",{"_index":1930,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":485,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/RegisterUserDto.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["uptime",{"_index":937,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["url",{"_index":672,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/ZipExportService.html":{}}}],["url.createobjecturl(zipblob",{"_index":673,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["url.revokeobjecturl(url",{"_index":680,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["usage",{"_index":1460,"title":{},"body":{"controllers/TicketController.html":{},"injectables/ZipExportService.html":{},"index.html":{}}}],["use",{"_index":1630,"title":{},"body":{"injectables/UserService.html":{},"injectables/ZipExportService.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"injectables/HbsRenderService.html":{},"classes/Project.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":1831,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["useguards",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["useguards(jwtauthguard",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectController.html":{},"controllers/TicketController.html":{}}}],["useguards(jwtauthguard)@put('users/name",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":164,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateTicketDto.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Project.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.'})@apiresponse({status",{"_index":1100,"title":{},"body":{"controllers/ProjectController.html":{}}}],["user._id",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":987,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:22",{"_index":1285,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:24",{"_index":1001,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:38",{"_index":997,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:50",{"_index":1283,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:52",{"_index":999,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:63",{"_index":991,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:64",{"_index":1267,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:78",{"_index":1271,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.name",{"_index":1049,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["user.save",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["user.schema",{"_index":1040,"title":{},"body":{"classes/Project.html":{},"classes/Ticket.html":{}}}],["user.service",{"_index":1599,"title":{},"body":{"modules/UserModule.html":{}}}],["user.username",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["user/user.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdocument",{"_index":800,"title":{},"body":{"interfaces/ExpressRequestWithUser.html":{},"interfaces/ExpressRequestWithUser-1.html":{},"interfaces/ExpressRequestWithUser-2.html":{},"classes/Project.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":1135,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UserService.html":{}}}],["usermodel",{"_index":1611,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":64,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["users",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Project.html":{},"classes/Ticket.html":{},"classes/UpdateProjectDto.html":{}}}],["userschema",{"_index":1591,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":230,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userwithoutpassword",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["user})@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["uses",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/functions.html":{}}}],["using",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProjectController.html":{},"index.html":{},"license.html":{}}}],["usually",{"_index":1547,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["utils",{"_index":1128,"title":{},"body":{"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["utils/ticket.utils",{"_index":1503,"title":{},"body":{"injectables/TicketService.html":{}}}],["v10.9.4",{"_index":1855,"title":{},"body":{"index.html":{}}}],["v22.21.0",{"_index":1852,"title":{},"body":{"index.html":{}}}],["valid",{"_index":723,"title":{},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectController.html":{},"injectables/ProjectService.html":{},"classes/RegisterUserDto.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{}}}],["valid.'})@apiresponse({status",{"_index":1091,"title":{},"body":{"controllers/ProjectController.html":{}}}],["validate",{"_index":971,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["validate(payload",{"_index":975,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["validates",{"_index":969,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["validateuser",{"_index":1606,"title":{},"body":{"injectables/UserService.html":{}}}],["validateuser(loginuserdto",{"_index":1634,"title":{},"body":{"injectables/UserService.html":{}}}],["validating",{"_index":1629,"title":{},"body":{"injectables/UserService.html":{}}}],["validation",{"_index":696,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/ProjectDoesNotExist.html":{},"classes/ProjectError.html":{},"classes/ProjectIdValidationError.html":{},"classes/ProjectInsufficientPermissionsError.html":{},"classes/ProjectNotModifiedError.html":{},"classes/ProjectRelationConflict.html":{},"classes/ProjectSlugValidationError.html":{},"classes/ProjectUpdateDataValidationError.html":{},"classes/TicketDoesNotExist.html":{},"classes/TicketError.html":{},"classes/TicketIdValidationError.html":{},"classes/TicketInsufficientPermissionsError.html":{},"classes/TicketNotModifiedError.html":{},"classes/TicketRelationConflict.html":{},"classes/TicketSlugValidationError.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["validationerror",{"_index":1249,"title":{},"body":{"injectables/ProjectService.html":{}}}],["validationoptions",{"_index":1830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":731,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/CreateTicketDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validity",{"_index":1828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validupdate",{"_index":1243,"title":{},"body":{"injectables/ProjectService.html":{}}}],["validupdate.createdby",{"_index":1247,"title":{},"body":{"injectables/ProjectService.html":{}}}],["validupdate.owner",{"_index":1245,"title":{},"body":{"injectables/ProjectService.html":{}}}],["validupdate.validatesync",{"_index":1250,"title":{},"body":{"injectables/ProjectService.html":{}}}],["value",{"_index":862,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":863,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["values",{"_index":636,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"classes/CreateTicketDto.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["variable",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":105,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":919,"title":{},"body":{"controllers/HealthController.html":{}}}],["verbal",{"_index":2044,"title":{},"body":{"license.html":{}}}],["verifying",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["vertical",{"_index":1335,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["view",{"_index":1205,"title":{},"body":{"injectables/ProjectService.html":{}}}],["viewchild",{"_index":340,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('editorcontainer",{"_index":537,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["viewchild('previewframe",{"_index":540,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["visible",{"_index":902,"title":{},"body":{"injectables/HbsRenderService.html":{},"injectables/TemplateEditorService.html":{}}}],["visit",{"_index":1716,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["void",{"_index":608,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"injectables/HbsRenderService.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{},"injectables/ZipExportService.html":{}}}],["vs",{"_index":1323,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w",{"_index":1382,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["w+)(\\s*=\\s",{"_index":1378,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["want",{"_index":635,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["warning",{"_index":131,"title":{},"body":{"injectables/AppService.html":{}}}],["warranties",{"_index":2172,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2167,"title":{},"body":{"license.html":{}}}],["web",{"_index":966,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["websockets",{"_index":1916,"title":{},"body":{"index.html":{}}}],["weight",{"_index":446,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["welcome",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["wherever",{"_index":2132,"title":{},"body":{"license.html":{}}}],["whether",{"_index":901,"title":{},"body":{"injectables/HbsRenderService.html":{},"classes/Project.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["white",{"_index":500,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"injectables/TemplateEditorService.html":{}}}],["whole",{"_index":2031,"title":{},"body":{"license.html":{}}}],["width",{"_index":474,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.settimeout(async",{"_index":614,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["window.url.createobjecturl(blob",{"_index":1719,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1721,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["within",{"_index":1487,"title":{},"body":{"injectables/TicketService.html":{},"license.html":{}}}],["without",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"license.html":{}}}],["wont",{"_index":1425,"title":{},"body":{"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["wordbasedsuggestions",{"_index":1347,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["wordwrap",{"_index":1330,"title":{},"body":{"injectables/TemplateEditorService.html":{}}}],["work",{"_index":1594,"title":{},"body":{"classes/User.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["workflows",{"_index":1907,"title":{},"body":{"index.html":{}}}],["works",{"_index":2025,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":2070,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":880,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["wrapper",{"_index":884,"title":{},"body":{"injectables/HbsRenderService.html":{}}}],["write",{"_index":1897,"title":{},"body":{"index.html":{}}}],["writing",{"_index":2060,"title":{},"body":{"license.html":{}}}],["written",{"_index":2045,"title":{},"body":{"license.html":{}}}],["x",{"_index":1045,"title":{},"body":{"classes/Project.html":{}}}],["y",{"_index":477,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["yes",{"_index":1833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":1278,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["zip",{"_index":350,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{}}}],["zip.file('readme.md",{"_index":1682,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.file(file.path",{"_index":1678,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zip.generateasync",{"_index":1684,"title":{},"body":{"injectables/ZipExportService.html":{}}}],["zipblob",{"_index":660,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zipexportservice",{"_index":349,"title":{"injectables/ZipExportService.html":{}},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{},"modules/TemplatePlaygroundModule.html":{},"injectables/ZipExportService.html":{},"coverage.html":{},"overview.html":{}}}],["zipservice",{"_index":556,"title":{},"body":{"interfaces/CompoDocConfig.html":{},"interfaces/Session.html":{},"interfaces/Template.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProjectModule.html":{},"modules/TemplatePlaygroundModule.html":{},"modules/TicketModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller for handling application-level requests and providing information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getDevInstructions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getDevInstructions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDevInstructions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:20\n                        \n                    \n\n\n            \n                \n                        Retrieves development instructions for using the API.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Instructions for developers on how to access the Swagger documentation.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { ApiTags } from \"@nestjs/swagger\";\n\nimport { AppService } from \"./app.service\";\n\n/**\n * Controller for handling application-level requests and providing information.\n */\n@ApiTags(\"Information Desk\")\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Retrieves development instructions for using the API.\n   *\n   * @returns {string} Instructions for developers on how to access the Swagger documentation.\n   */\n  @Get()\n  getDevInstructions(): string {\n    return this.appService.devInstructions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            ProjectModule\n                        \n                        \n                            TicketModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AppController } from \"./app.controller\";\nimport { AppService } from \"./app.service\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { HealthModule } from \"./health/health.module\";\nimport { ProjectModule } from \"./project/project.module\";\nimport { TicketModule } from \"./ticket/ticket.module\";\nimport { UserModule } from \"./user/user.module\";\n\n@Module({\n  imports: [AuthModule, ConfigModule.forRoot(), MongooseModule.forRoot(process.env.MONGODB_URI), HealthModule, UserModule, TicketModule, ProjectModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for application configuration and environment management.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    port\n                                \n                                \n                                    isDev\n                                \n                                \n                                    devInstructions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe configuration service for managing environment variables.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        port\n                    \n                \n\n                \n                    \n                        getport()\n                    \n                \n                            \n                                \n                                    Defined in src/app.service.ts:24\n                                \n                            \n                    \n                        \n                                Gets the port the application will run on.\nIf not specified in the environment variables, defaults to \"3000\".\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDev\n                    \n                \n\n                \n                    \n                        getisDev()\n                    \n                \n                            \n                                \n                                    Defined in src/app.service.ts:40\n                                \n                            \n                    \n                        \n                                Checks if the application is running in development mode.\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        devInstructions\n                    \n                \n\n                \n                    \n                        getdevInstructions()\n                    \n                \n                            \n                                \n                                    Defined in src/app.service.ts:52\n                                \n                            \n                    \n                        \n                                Provides instructions for using the API based on the environment.\nIn development, it includes a link to the Swagger documentation.\nIn production, it returns a unique welcome message.\nor a welcome message for production mode.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\n\n/**\n * @class AppService\n * Service responsible for application configuration and environment management.\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Creates an instance of AppService.\n   *\n   * @param {ConfigService} configService - The configuration service for managing environment variables.\n   */\n  constructor(private readonly configService: ConfigService) {}\n\n  /**\n   * Gets the port the application will run on.\n   * If not specified in the environment variables, defaults to \"3000\".\n   *\n   * @returns {string} The port number as a string.\n   * @throws {Warning} Logs a warning if the default port is used without specification in environment variables.\n   */\n  get port(): string {\n    const port = this.configService.get(\"PORT\");\n    const finalPort = port || \"3000\";\n\n    if (finalPort === \"3000\" && !port) {\n      console.warn(`No port specified in environment variables. Using default port ${finalPort}.`);\n    }\n\n    return finalPort;\n  }\n\n  /**\n   * Checks if the application is running in development mode.\n   *\n   * @returns {boolean} True if the NODE_ENV is set to \"development\", false otherwise.\n   */\n  get isDev(): boolean {\n    return this.configService.get(\"NODE_ENV\") === \"development\";\n  }\n\n  /**\n   * Provides instructions for using the API based on the environment.\n   * In development, it includes a link to the Swagger documentation.\n   * In production, it returns a unique welcome message.\n   *\n   * @returns {string} A string containing instructions for developers in development mode,\n   * or a welcome message for production mode.\n   */\n  get devInstructions(): string {\n    if (this.isDev) {\n      return `Welcome to Parchment TMS API.To get started, please refer to the Swagger Documentation here.`;\n    }\n    return `Welcome to the production version of Parchment TMS API. Enjoy the seamless experience!`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n            \n                Prefix\n            \n            \n                /api/v1/\n            \n\n\n            \n                Description\n            \n            \n                Controller for user authentication and management, including registration and login.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUserName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiResponse({status: 201, description: 'User successfully logged in.', schema: undefined})@ApiResponse({status: 400, description: 'Bad Request.'})@ApiResponse({status: 401, description: 'Invalid credentials.'})@ApiResponse({status: 404, description: 'User not found.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:90\n                        \n                    \n\n\n            \n                \n                        Authenticates a user and returns a JWT token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing login credentials.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object containing the access token.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiResponse({status: 201, description: 'User successfully registered.', type: User})@ApiResponse({status: 400, description: 'Bad Request.'})@ApiResponse({status: 409, description: 'User with this username or email already exists.'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing registration information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to the newly registered user's data.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserName(updateUserDto: UpdateUserDto, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put('users/name')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:105\n                        \n                    \n\n\n            \n                \n                        Updates the user's name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing the new username information.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object, which includes the authenticated user data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                A promise that resolves to the updated user's data.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Put, Request, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiResponse, ApiTags } from \"@nestjs/swagger\";\nimport { User } from \"src/schemas/user.schema\";\nimport { UserService } from \"src/user/user.service\";\n\nimport { AuthService } from \"./auth.service\";\nimport { LoginUserDto } from \"./dto/login-user.dto\";\nimport { RegisterUserDto } from \"./dto/register-user.dto\";\nimport { UpdateUserDto } from \"./dto/update-user.dto\";\nimport { ExpressRequestWithUser } from \"./interfaces/user.interface\";\nimport { JwtAuthGuard } from \"./jwt-auth.guard\";\n\n/**\n * Controller for user authentication and management, including registration and login.\n *\n * @class AuthController\n */\n@ApiBearerAuth()\n@ApiTags(\"Authentication\")\n@Controller(\"/api/v1/\")\nexport class AuthController {\n  /**\n   * Creates an instance of AuthController.\n   *\n   * @param {AuthService} authService - Service for handling authentication logic.\n   * @param {UserService} userService - Service for user-related operations.\n   */\n  constructor(\n    private authService: AuthService,\n    private readonly userService: UserService,\n  ) {}\n\n  /**\n   * Registers a new user.\n   *\n   * @param {RegisterUserDto} registerUserDto - Data transfer object containing registration information.\n   * @returns {Promise>} A promise that resolves to the newly registered user's data.\n   * @throws {BadRequestException} When the request data is invalid.\n   * @throws {ConflictException} When a user with the same username or email already exists.\n   * @method register\n   */\n  @Post(\"register\")\n  @ApiResponse({\n    status: 201,\n    description: \"User successfully registered.\",\n    type: User,\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Bad Request.\",\n  })\n  @ApiResponse({\n    status: 409,\n    description: \"User with this username or email already exists.\",\n  })\n  async register(@Body() registerUserDto: RegisterUserDto): Promise> {\n    return this.userService.register(registerUserDto);\n  }\n\n  /**\n   * Authenticates a user and returns a JWT token.\n   *\n   * @param {LoginUserDto} loginUserDto - Data transfer object containing login credentials.\n   * @returns {Promise} A promise that resolves to an object containing the access token.\n   * @throws {BadRequestException} When the request data is invalid.\n   * @throws {UnauthorizedException} When the credentials are invalid.\n   * @throws {NotFoundException} When the user is not found.\n   * @method login\n   */\n  @Post(\"login\")\n  @ApiResponse({\n    status: 201,\n    description: \"User successfully logged in.\",\n    schema: {\n      example: { accessToken: \"jwt.token.here\" },\n    },\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Bad Request.\",\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Invalid credentials.\",\n  })\n  @ApiResponse({\n    status: 404,\n    description: \"User not found.\",\n  })\n  async login(@Body() loginUserDto: LoginUserDto): Promise {\n    return this.authService.login(loginUserDto);\n  }\n\n  /**\n   * Updates the user's name.\n   *\n   * @param {UpdateUserDto} updateUserDto - Data transfer object containing the new username information.\n   * @param {ExpressRequestWithUser} req - The request object, which includes the authenticated user data.\n   * @returns {Promise>} A promise that resolves to the updated user's data.\n   * @throws {ForbiddenException} When the user is not authorized to update the name.\n   * @method updateUserName\n   */\n  @UseGuards(JwtAuthGuard)\n  @Put(\"users/name\")\n  async updateUserName(@Body() updateUserDto: UpdateUserDto, @Request() req: ExpressRequestWithUser): Promise> {\n    return this.userService.updateUserName(req.user._id, updateUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JwtModule } from \"@nestjs/jwt\";\n\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./jwt.strategy\";\n\nimport { UserModule } from \"@/user/user.module\";\n\n@Module({\n  imports: [\n    UserModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: \"1h\" },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling user authentication, including login and token generation.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for generating and verifying JWT tokens.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Authenticates a user based on login credentials and generates a JWT access token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData transfer object containing the user's login credentials (username and password).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to an object containing the generated JWT access token.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { JwtService } from \"@nestjs/jwt\";\n\nimport { LoginUserDto } from \"./dto/login-user.dto\";\n\nimport { UserService } from \"@/user/user.service\";\n\n/**\n * Service for handling user authentication, including login and token generation.\n *\n * @class AuthService\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Creates an instance of AuthService.\n   *\n   * @param {UserService} userService - Service for user-related operations.\n   * @param {JwtService} jwtService - Service for generating and verifying JWT tokens.\n   */\n  constructor(\n    private userService: UserService,\n    private jwtService: JwtService,\n  ) {}\n\n  /**\n   * Authenticates a user based on login credentials and generates a JWT access token.\n   *\n   * @param {LoginUserDto} loginUserDto - Data transfer object containing the user's login credentials (username and password).\n   * @returns {Promise} A promise that resolves to an object containing the generated JWT access token.\n   * @throws {UnauthorizedException} When the credentials are invalid or the user cannot be validated.\n   * @method login\n   */\n  public async login(loginUserDto: LoginUserDto): Promise {\n    const user = await this.userService.validateUser(loginUserDto);\n    const payload = { username: user.username, sub: user._id };\n    const accessToken = this.jwtService.sign(payload);\n    return { accessToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompoDocConfig.html":{"url":"interfaces/CompoDocConfig.html","title":"interface - CompoDocConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CompoDocConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customFavicon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableConstructors\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableCoverage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDependencies\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableDomTree\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableFilePath\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableInternal\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLifeCycleHooks\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableMainGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableOverview\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disablePrivate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProperties\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableProtected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableRoutesGraph\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSearch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableSourceCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableStyleTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableTemplateTab\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideDarkModeToggle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hideGenerator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            includesName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            minimal\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customFavicon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customFavicon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableConstructors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableConstructors:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCoverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableCoverage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDependencies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDependencies:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDomTree\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableDomTree:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableFilePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableFilePath:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableInternal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableInternal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLifeCycleHooks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLifeCycleHooks:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableMainGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableMainGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableOverview\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableOverview:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePrivate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disablePrivate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableProtected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableProtected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRoutesGraph\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableRoutesGraph:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSearch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableSourceCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableStyleTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableStyleTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableTemplateTab\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableTemplateTab:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideDarkModeToggle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideDarkModeToggle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideGenerator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideGenerator:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includesName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        includesName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minimal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/create-project.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for creating a new project.\nThis class defines the structure and validation rules for the data required to create a new project.\nIt includes validation decorators to ensure the correct data types and constraints for each field.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                members\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A brief description of the project', example: 'This is a sample project.'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:46\n                        \n                    \n\n            \n                \n                    A brief description of the project.\nThis field is required and must be a non-empty string.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of project members (MongoDB ObjectIds)', example: undefined, required: false})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:65\n                        \n                    \n\n            \n                \n                    List of project members.\nThis field is optional and should contain MongoDB ObjectIds for each member of the project.\nIf provided, it must be an array of valid MongoDB ObjectIds.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the project', example: 'New Project'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:29\n                        \n                    \n\n            \n                \n                    The name of the project.\nThis field is required and must be a non-empty string.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsOptional, IsArray } from \"class-validator\";\nimport { Types } from \"mongoose\";\n\n/**\n * DTO (Data Transfer Object) for creating a new project.\n *\n * This class defines the structure and validation rules for the data required to create a new project.\n * It includes validation decorators to ensure the correct data types and constraints for each field.\n *\n * @class CreateProjectDto\n */\nexport class CreateProjectDto {\n  /**\n   * The name of the project.\n   *\n   * This field is required and must be a non-empty string.\n   *\n   * @example 'New Project'\n   * @type {string}\n   * @required\n   */\n  @ApiProperty({\n    description: \"The name of the project\",\n    example: \"New Project\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * A brief description of the project.\n   *\n   * This field is required and must be a non-empty string.\n   *\n   * @example 'This is a sample project.'\n   * @type {string}\n   * @required\n   */\n  @ApiProperty({\n    description: \"A brief description of the project\",\n    example: \"This is a sample project.\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  /**\n   * List of project members.\n   *\n   * This field is optional and should contain MongoDB ObjectIds for each member of the project.\n   * If provided, it must be an array of valid MongoDB ObjectIds.\n   *\n   * @example ['63e4e8d6e92f5e0b6f9a2f33', '63e4e8d6e92f5e0b6f9a2f34']\n   * @optional\n   * @type {Types.ObjectId[]}\n   */\n  @ApiProperty({\n    description: \"List of project members (MongoDB ObjectIds)\",\n    example: [\"63e4e8d6e92f5e0b6f9a2f33\", \"63e4e8d6e92f5e0b6f9a2f34\"],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  members?: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/create-ticket.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a ticket.\nThis class defines the structure of the data required to create a new ticket in the system.\nIt includes properties like the ticket's title, description, assignees, project ID, status,\npriority, and due date. The validation rules ensure that the input data meets the necessary criteria.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                assignees\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dueDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                projectId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        assignees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The list of assignees for the ticket', type: undefined, example: undefined, required: false})@IsArray()@IsOptional()@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:65\n                        \n                    \n\n            \n                \n                    The list of assignees for the ticket.\nThis is an optional field that contains an array of user IDs assigned to the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A detailed description of the ticket', type: String, example: 'The login page does not load after clicking the login button.'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:45\n                        \n                    \n\n            \n                \n                    A detailed description of the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The due date for completing the ticket', type: String, format: 'date-time', example: '2024-12-31T23:59:59Z', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:139\n                        \n                    \n\n            \n                \n                    The due date for completing the ticket.\nThis is an optional field representing the date and time by which the ticket should be completed.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The priority of the ticket', type: String, example: 'high', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:120\n                        \n                    \n\n            \n                \n                    The priority of the ticket.\nThis is an optional field indicating the priority level of the ticket, which can be 'low', 'medium', or 'high'.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the project this ticket belongs to', type: String, example: '507f1f77bcf86cd799439010'})@IsMongoId()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:81\n                        \n                    \n\n            \n                \n                    The ID of the project this ticket belongs to.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The current status of the ticket', type: String, example: 'open', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:101\n                        \n                    \n\n            \n                \n                    The current status of the ticket.\nThis is an optional field that represents the current status of the ticket. Possible values\ninclude 'open', 'in-progress', 'closed', etc.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the ticket', type: String, example: 'Bug in login page'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:29\n                        \n                    \n\n            \n                \n                    The title of the ticket.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsOptional, IsArray, IsMongoId } from \"class-validator\";\nimport { Types } from \"mongoose\";\n\n/**\n * DTO for creating a ticket.\n *\n * This class defines the structure of the data required to create a new ticket in the system.\n * It includes properties like the ticket's title, description, assignees, project ID, status,\n * priority, and due date. The validation rules ensure that the input data meets the necessary criteria.\n *\n * @class CreateTicketDto\n */\nexport class CreateTicketDto {\n  /**\n   * The title of the ticket.\n   *\n   * @example 'Bug in login page'\n   * @required\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"The title of the ticket\",\n    type: String,\n    example: \"Bug in login page\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  /**\n   * A detailed description of the ticket.\n   *\n   * @example 'The login page does not load after clicking the login button.'\n   * @required\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"A detailed description of the ticket\",\n    type: String,\n    example: \"The login page does not load after clicking the login button.\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  /**\n   * The list of assignees for the ticket.\n   *\n   * This is an optional field that contains an array of user IDs assigned to the ticket.\n   *\n   * @example ['507f1f77bcf86cd799439012', '507f1f77bcf86cd799439013']\n   * @optional\n   * @type {Types.ObjectId[]}\n   */\n  @ApiProperty({\n    description: \"The list of assignees for the ticket\",\n    type: [String],\n    example: [\"507f1f77bcf86cd799439012\", \"507f1f77bcf86cd799439013\"],\n    required: false,\n  })\n  @IsArray()\n  @IsOptional()\n  @IsMongoId({ each: true })\n  assignees?: Types.ObjectId[];\n\n  /**\n   * The ID of the project this ticket belongs to.\n   *\n   * @example '507f1f77bcf86cd799439010'\n   * @required\n   * @type {Types.ObjectId}\n   */\n  @ApiProperty({\n    description: \"The ID of the project this ticket belongs to\",\n    type: String,\n    example: \"507f1f77bcf86cd799439010\",\n  })\n  @IsMongoId()\n  @IsNotEmpty()\n  projectId: Types.ObjectId;\n\n  /**\n   * The current status of the ticket.\n   *\n   * This is an optional field that represents the current status of the ticket. Possible values\n   * include 'open', 'in-progress', 'closed', etc.\n   *\n   * @example 'open'\n   * @optional\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"The current status of the ticket\",\n    type: String,\n    example: \"open\",\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  status?: string;\n\n  /**\n   * The priority of the ticket.\n   *\n   * This is an optional field indicating the priority level of the ticket, which can be 'low', 'medium', or 'high'.\n   *\n   * @example 'high'\n   * @optional\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"The priority of the ticket\",\n    type: String,\n    example: \"high\",\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  priority?: string;\n\n  /**\n   * The due date for completing the ticket.\n   *\n   * This is an optional field representing the date and time by which the ticket should be completed.\n   *\n   * @example '2024-12-31T23:59:59Z'\n   * @optional\n   * @type {Date}\n   */\n  @ApiProperty({\n    description: \"The due date for completing the ticket\",\n    type: String,\n    format: \"date-time\",\n    example: \"2024-12-31T23:59:59Z\",\n    required: false,\n  })\n  @IsOptional()\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpressRequestWithUser.html":{"url":"interfaces/ExpressRequestWithUser.html","title":"interface - ExpressRequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpressRequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/user.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extends the Express Request object to include the authenticated user's information.\n\n            \n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user associated with the request, represented as a UserDocument.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UserDocument } from \"@/schemas/user.schema\";\n\n/**\n * Extends the Express Request object to include the authenticated user's information.\n *\n * @interface ExpressRequestWithUser\n */\nexport interface ExpressRequestWithUser extends Request {\n  /**\n   * The user associated with the request, represented as a UserDocument.\n   *\n   * @type {UserDocument}\n   */\n  user: UserDocument;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpressRequestWithUser-1.html":{"url":"interfaces/ExpressRequestWithUser-1.html","title":"interface - ExpressRequestWithUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpressRequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/interfaces/project.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extends the Express Request object to include the authenticated user's information.\n\n            \n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user associated with the request, represented as a UserDocument.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UserDocument } from \"@/schemas/user.schema\";\n\n/**\n * Extends the Express Request object to include the authenticated user's information.\n *\n * @interface ExpressRequestWithUser\n */\nexport interface ExpressRequestWithUser extends Request {\n  /**\n   * The user associated with the request, represented as a UserDocument.\n   *\n   * @type {UserDocument}\n   */\n  user: UserDocument;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExpressRequestWithUser-2.html":{"url":"interfaces/ExpressRequestWithUser-2.html","title":"interface - ExpressRequestWithUser-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExpressRequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/interfaces/ticket.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Extends the Express Request object to include the authenticated user's information.\n\n            \n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user associated with the request, represented as a UserDocument.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { UserDocument } from \"@/schemas/user.schema\";\n\n/**\n * Extends the Express Request object to include the authenticated user's information.\n *\n * @interface ExpressRequestWithUser\n */\nexport interface ExpressRequestWithUser extends Request {\n  /**\n   * The user associated with the request, represented as a UserDocument.\n   *\n   * @type {UserDocument}\n   */\n  user: UserDocument;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HbsRenderService.html":{"url":"injectables/HbsRenderService.html","title":"injectable - HbsRenderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  HbsRenderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/hbs-render.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlebarsInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMockData\n                            \n                            \n                                    Private\n                                initializeHandlebars\n                            \n                            \n                                    Private\n                                registerHelpers\n                            \n                            \n                                renderTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in docs/template-playground/hbs-render.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMockData\n                        \n                    \n                \n            \n            \n                \ngetMockData()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/hbs-render.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeHandlebars\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeHandlebars()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/hbs-render.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHelpers\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHelpers()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/hbs-render.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderTemplate\n                        \n                    \n                \n            \n            \n                \nrenderTemplate(templateContent: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/hbs-render.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                templateContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handlebarsInstance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in docs/template-playground/hbs-render.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const Handlebars: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HbsRenderService {\n  private handlebarsInstance: any;\n\n  constructor() {\n    this.initializeHandlebars();\n  }\n\n  private initializeHandlebars() {\n    // Create a new Handlebars instance for the playground\n    this.handlebarsInstance = Handlebars.create();\n\n    // Register common helpers used in Compodoc templates\n    this.registerHelpers();\n  }\n\n  private registerHelpers() {\n    // Register the 'compare' helper\n    this.handlebarsInstance.registerHelper('compare', (left: any, operator: string, right: any, options: any) => {\n      let result;\n      switch (operator) {\n        case '===':\n          result = left === right;\n          break;\n        case '!==':\n          result = left !== right;\n          break;\n        case '':\n          result = left > right;\n          break;\n        case '=':\n          result = left >= right;\n          break;\n        default:\n          result = false;\n      }\n      return result ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'unless' helper\n    this.handlebarsInstance.registerHelper('unless', (conditional: any, options: any) => {\n      return !conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'each' helper with index\n    this.handlebarsInstance.registerHelper('each', (context: any, options: any) => {\n      let ret = '';\n      for (let i = 0; i  {\n      return conditional ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'relativeURL' helper\n    this.handlebarsInstance.registerHelper('relativeURL', (depth: number, page?: string) => {\n      let url = '';\n      for (let i = 0; i  {\n      // Simple translation mapping for preview\n      const translations: { [key: string]: string } = {\n        'info': 'Information',\n        'source': 'Source',\n        'example': 'Example',\n        'template': 'Template',\n        'styles': 'Styles',\n        'component': 'Component',\n        'module': 'Module',\n        'overview': 'Overview',\n        'components': 'Components',\n        'modules': 'Modules',\n        'file': 'File',\n        'description': 'Description',\n        'selector': 'Selector',\n        'properties': 'Properties',\n        'methods': 'Methods',\n        'inputs': 'Inputs',\n        'outputs': 'Outputs'\n      };\n      return translations[key] || key;\n    });\n\n    // Register the 'orLength' helper\n    this.handlebarsInstance.registerHelper('orLength', (...args: any[]) => {\n      const options = args[args.length - 1];\n      const values = args.slice(0, -1);\n\n      for (const value of values) {\n        if (value && value.length && value.length > 0) {\n          return options.fn(this);\n        }\n      }\n      return options.inverse(this);\n    });\n\n    // Register the 'isTabEnabled' helper\n    this.handlebarsInstance.registerHelper('isTabEnabled', (navTabs: any[], tabId: string, options: any) => {\n      const tab = navTabs && navTabs.find((t: any) => t.id === tabId);\n      return tab ? options.fn(this) : options.inverse(this);\n    });\n\n    // Register the 'isInitialTab' helper\n    this.handlebarsInstance.registerHelper('isInitialTab', (navTabs: any[], tabId: string, options: any) => {\n      const isInitial = navTabs && navTabs.length > 0 && navTabs[0].id === tabId;\n      return isInitial ? options.fn(this) : options.inverse(this);\n    });\n  }\n\n  renderTemplate(templateContent: string, data: any): string {\n    try {\n      // Create a complete HTML document for preview\n      const template = this.handlebarsInstance.compile(templateContent);\n      const rendered = template({ data });\n\n      // Wrap in a basic HTML structure for preview\n      return `\n        \n        \n        \n          \n          Template Preview\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .preview-wrapper { border: 1px solid #ddd; padding: 20px; }\n            .preview-notice { background: #f0f8ff; padding: 10px; margin-bottom: 20px; border-left: 4px solid #007bff; }\n          \n        \n        \n          \n            Template Preview: This is a live preview of your template with mock data.\n          \n          \n            ${rendered}\n          \n        \n        \n      `;\n    } catch (error) {\n      return `\n        \n        \n        \n          \n          Template Preview - Error\n          \n            body { font-family: Arial, sans-serif; margin: 20px; }\n            .error { color: red; background: #fff5f5; padding: 20px; border: 1px solid #red; }\n          \n        \n        \n          \n            Template Error\n            Error: ${error.message}\n            Please check your template syntax and try again.\n          \n        \n        \n      `;\n    }\n  }\n\n  getMockData(): any {\n    return {\n      documentationMainName: 'Sample Documentation',\n      depth: 0,\n      context: 'component',\n      components: [\n        {\n          name: 'SampleComponent',\n          selector: 'app-sample',\n          file: 'src/app/sample/sample.component.ts',\n          description: 'A sample component for demonstration',\n          properties: [\n            { name: 'title', type: 'string', description: 'The component title' },\n            { name: 'isVisible', type: 'boolean', description: 'Whether the component is visible' }\n          ],\n          methods: [\n            { name: 'ngOnInit', description: 'Lifecycle hook', signature: 'ngOnInit(): void' },\n            { name: 'onClick', description: 'Handle click events', signature: 'onClick(event: MouseEvent): void' }\n          ]\n        }\n      ],\n      navTabs: [\n        { id: 'info', label: 'Info', href: '#info' },\n        { id: 'source', label: 'Source', href: '#source' },\n        { id: 'example', label: 'Example', href: '#example' }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                Controller for health check endpoints.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:47\n                        \n                    \n\n\n            \n                \n                        Performs health checks for various services including HTTP, MongoDB, memory, and disk.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves to the health check result.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { ApiTags } from \"@nestjs/swagger\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  HealthCheck,\n  MongooseHealthIndicator,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n  HealthIndicatorResult,\n  HealthCheckResult,\n} from \"@nestjs/terminus\";\n\n/**\n * Controller for health check endpoints.\n *\n * @class HealthController\n */\n@ApiTags(\"hEaLtH\")\n@Controller(\"health\")\nexport class HealthController {\n  /**\n   * Creates an instance of HealthController.\n   *\n   * @param {HealthCheckService} health - Service for health checks.\n   * @param {HttpHealthIndicator} http - Indicator for HTTP health checks.\n   * @param {MongooseHealthIndicator} mongoDb - Indicator for MongoDB health checks.\n   * @param {MemoryHealthIndicator} memory - Indicator for memory health checks.\n   * @param {DiskHealthIndicator} disk - Indicator for disk health checks.\n   */\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private mongoDb: MongooseHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n  ) {}\n\n  /**\n   * Performs health checks for various services including HTTP, MongoDB, memory, and disk.\n   *\n   * @returns {Promise} A promise that resolves to the health check result.\n   * @method check\n   */\n  @Get()\n  @HealthCheck()\n  check(): Promise {\n    return this.health.check([\n      (): Promise => this.http.pingCheck(\"uptime\", \"https://betterstack.com/better-uptime\"),\n      (): Promise => this.mongoDb.pingCheck(\"mongodb\", { timeout: 5000 }),\n      (): Promise => this.memory.checkRSS(\"memory_rss\", 300 * 1024 * 1024),\n      (): Promise => this.memory.checkHeap(\"memory_heap\", 300 * 1024 * 1024),\n      (): Promise =>\n        this.disk.checkStorage(\"storage\", {\n          path: \"/\",\n          threshold: 128 * 1024 * 1024 * 1024,\n        }),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from \"@nestjs/axios\";\nimport { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\n\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule, HttpModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                This guard uses the Passport JWT strategy to authenticate requests.\n\n            \n\n            \n                Extends\n            \n            \n                        AuthGuard(\"JWT Strategy\")\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n/**\n * @class JwtAuthGuard\n * @extends AuthGuard\n * @description Guard for protecting routes using JWT authentication.\n * This guard uses the Passport JWT strategy to authenticate requests.\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"JWT Strategy\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Strategy for authenticating users using JSON Web Tokens (JWT).\nThis strategy extracts the JWT from the authorization header and validates it.\n\n            \n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, \"JWT Strategy\")\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of JwtStrategy.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for retrieving user information from the database.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:38\n                        \n                    \n\n\n            \n                \n                        Validates the JWT payload and retrieves the associated user from the database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JWT payload containing the user's information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A promise that resolves to the authenticated user object.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { User } from \"src/schemas/user.schema\";\nimport { UserService } from \"src/user/user.service\";\n\n/**\n * Strategy for authenticating users using JSON Web Tokens (JWT).\n * This strategy extracts the JWT from the authorization header and validates it.\n *\n * @class JwtStrategy\n * @extends PassportStrategy\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, \"JWT Strategy\") {\n  /**\n   * Creates an instance of JwtStrategy.\n   *\n   * @constructor\n   * @param {UserService} userService - Service for retrieving user information from the database.\n   */\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  /**\n   * Validates the JWT payload and retrieves the associated user from the database.\n   *\n   * @method validate\n   * @param {{ sub: string; username: string }} payload - The JWT payload containing the user's information.\n   * @returns {Promise} A promise that resolves to the authenticated user object.\n   * @throws {UnauthorizedException} When the user associated with the JWT is not found.\n   */\n  public async validate(payload: { sub: string; username: string }): Promise {\n    const user = await this.userService.findByUsername(payload.username);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This DTO requires either a username or an email and a password to authenticate a user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                _hasUsernameOrEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        _hasUsernameOrEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @hasUsernameOrEmail({message: 'Either username or email must be provided.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:63\n                        \n                    \n\n            \n                \n                    This is an internal property for validation logic and should not be set directly by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email for the user account. Provide either username or email.', example: 'john_doe@example.com'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:38\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password for the user account', example: 'StrongP@ssw0rd!'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:52\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Username for the user account. Provide either username or email.', example: 'john_doe'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-user.dto.ts:24\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nimport { hasUsernameOrEmail } from \"../decorators/hasUsernameOrEmail.decorator\";\n\n/**\n * @class LoginUserDto\n * @description Data transfer object for user login credentials.\n * This DTO requires either a username or an email and a password to authenticate a user.\n */\nexport class LoginUserDto {\n  /**\n   * @property {string} [username]\n   * @description Username for the user account. Provide either username or email.\n   * @example \"john_doe\"\n   * @optional\n   */\n  @ApiProperty({\n    description: \"Username for the user account. Provide either username or email.\",\n    example: \"john_doe\",\n  })\n  @IsString()\n  @IsOptional()\n  username?: string;\n\n  /**\n   * @property {string} [email]\n   * @description Email for the user account. Provide either username or email.\n   * @example \"john_doe@example.com\"\n   * @optional\n   */\n  @ApiProperty({\n    description: \"Email for the user account. Provide either username or email.\",\n    example: \"john_doe@example.com\",\n  })\n  @IsString()\n  @IsOptional()\n  email?: string;\n\n  /**\n   * @property {string} password\n   * @description Password for the user account. This field is required for authentication.\n   * @example \"StrongP@ssw0rd!\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"Password for the user account\",\n    example: \"StrongP@ssw0rd!\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  /**\n   * @property {string} [_hasUsernameOrEmail]\n   * @description Custom validation decorator to ensure either username or email must be provided.\n   * This is an internal property for validation logic and should not be set directly by the user.\n   * @optional\n   */\n  @hasUsernameOrEmail({\n    message: \"Either username or email must be provided.\",\n  })\n  _hasUsernameOrEmail?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/project.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Project Schema represents the structure of a project in the database.\nThis schema defines the project properties, such as name, description, owner, members, and tickets,\nalong with relationships to the User and Ticket models.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                members\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                owner\n                            \n                            \n                                    \n                                tickets\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDocument\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'ObjectId', ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:84\n                        \n                    \n\n            \n                \n                    The user who created the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:49\n                        \n                    \n\n            \n                \n                    A description of the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:75\n                        \n                    \n\n            \n                \n                    A flag that indicates if the project is active or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:67\n                        \n                    \n\n            \n                \n                    An array of IDs of users who are members of the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:40\n                        \n                    \n\n            \n                \n                    The name of the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:58\n                        \n                    \n\n            \n                \n                    The ID of the user who owns the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tickets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:104\n                        \n                    \n\n            \n                \n                    An array of ticket IDs associated with the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDocument\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: 'ObjectId', ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/project.schema.ts:93\n                        \n                    \n\n            \n                \n                    The user who last updated the project.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { forwardRef } from \"@nestjs/common\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document, Types } from \"mongoose\";\n\nimport { Ticket } from \"./ticket.schema\";\nimport { User, UserDocument } from \"./user.schema\";\n\n/**\n * ProjectDocument type that combines the Project class with Mongoose Document.\n *\n * @extends Document\n */\nexport type ProjectDocument = Project & Document;\n\n/**\n * Project Schema represents the structure of a project in the database.\n *\n * This schema defines the project properties, such as `name`, `description`, `owner`, `members`, and `tickets`,\n * along with relationships to the `User` and `Ticket` models.\n *\n * @class Project\n * @property {string} name - The name of the project.\n * @property {string} description - A brief description of the project.\n * @property {Types.ObjectId} owner - The ID of the user who owns the project.\n * @property {Types.ObjectId[]} members - An array of IDs of users who are members of the project.\n * @property {boolean} isActive - A flag to indicate whether the project is active or not.\n * @property {UserDocument} createdBy - The user who created the project.\n * @property {UserDocument} [updatedBy] - The user who last updated the project (optional).\n * @property {Types.ObjectId[]} tickets - An array of ticket IDs associated with the project.\n */\n@Schema({ timestamps: true })\nexport class Project {\n  /**\n   * The name of the project.\n   *\n   * @example \"Project X\"\n   * @required\n   */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * A description of the project.\n   *\n   * @example \"A project to manage user tasks\"\n   * @required\n   */\n  @Prop({ required: true })\n  description: string;\n\n  /**\n   * The ID of the user who owns the project.\n   *\n   * @example \"60c72b2f5b1b2c6f5e8c9999\"\n   * @required\n   */\n  @Prop({ type: Types.ObjectId, ref: User.name, required: true })\n  owner: Types.ObjectId;\n\n  /**\n   * An array of IDs of users who are members of the project.\n   *\n   * @example [\"60c72b2f5b1b2c6f5e8c8888\", \"60c72b2f5b1b2c6f5e8c7777\"]\n   * @optional\n   */\n  @Prop([{ type: Types.ObjectId, ref: User.name }])\n  members: Types.ObjectId[];\n\n  /**\n   * A flag that indicates if the project is active or not.\n   *\n   * @default true\n   */\n  @Prop({ default: true })\n  isActive: boolean;\n\n  /**\n   * The user who created the project.\n   *\n   * @example \"60c72b2f5b1b2c6f5e8c6666\"\n   * @required\n   */\n  @Prop({ type: \"ObjectId\", ref: User.name, required: true })\n  createdBy: UserDocument;\n\n  /**\n   * The user who last updated the project.\n   *\n   * @example \"60c72b2f5b1b2c6f5e8c5555\"\n   * @optional\n   */\n  @Prop({ type: \"ObjectId\", ref: User.name })\n  updatedBy: UserDocument;\n\n  /**\n   * An array of ticket IDs associated with the project.\n   *\n   * @example [\"60c72b2f5b1b2c6f5e8c4444\", \"60c72b2f5b1b2c6f5e8c3333\"]\n   * @optional\n   */\n  @Prop({\n    type: [{ type: Types.ObjectId, ref: forwardRef(() => Ticket.name) }],\n  })\n  tickets: Types.ObjectId[];\n}\n\n/**\n * ProjectSchema is the Mongoose schema for the `Project` class.\n *\n * This schema is used by Mongoose to interact with the database.\n *\n * @constant ProjectSchema\n */\nexport const ProjectSchema = SchemaFactory.createForClass(Project);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectController.html":{"url":"controllers/ProjectController.html","title":"controller - ProjectController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  ProjectController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.controller.ts\n        \n            \n                Prefix\n            \n            \n                /api/v1/projects\n            \n\n\n            \n                Description\n            \n            \n                Controller class for managing project-related operations.\nProvides endpoints for creating, updating, retrieving, and deleting projects.\nThe controller is protected by JWT authentication and provides responses based on the success or failure of the requested operation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProjectDto: CreateProjectDto, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@ApiOperation({summary: 'Create a new project', description: 'Create a new project with the specified details.'})@ApiBody({description: 'Data required to create a project', type: CreateProjectDto})@ApiResponse({status: 201, description: 'Indicates, the project was successfully created.', type: Project})@ApiResponse({status: 400, description: 'Invalid data provided.'})@ApiResponse({status: 401, description: 'Indicates that the user is not authorized.'})@ApiResponse({status: 409, description: 'Indicates, the project already exists.'})@ApiResponse({status: 500, description: 'Indicates, the request failed.'})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:145\n                        \n                    \n\n\n            \n                \n                        Creates a new project.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createProjectDto\n                                            \n                                                            CreateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data required to create a project.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object containing the authenticated user's details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nThe response object containing the result of the operation and the created project.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete a project by ID', description: 'Remove a project from the system using its ID.'})@ApiParam({name: 'id', description: 'The ID of the project to delete.', type: String})@ApiResponse({status: 200, description: 'The project was successfully deleted.'})@ApiResponse({status: 400, description: 'Project id was not valid.'})@ApiResponse({status: 401, description: 'Indicates that the user is not authorized.'})@ApiResponse({status: 404, description: 'Project not found.'})@ApiResponse({status: 500, description: 'Indicates, the request failed.'})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:256\n                        \n                    \n\n\n            \n                \n                        Deletes a project by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project to delete.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object containing the authenticated user's details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nThe response object containing the result of the operation.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Retrieve all projects', description: 'Fetch all projects accessible to the authenticated user.'})@ApiResponse({status: 200, description: 'List of projects retrieved successfully.', type: undefined})@ApiResponse({status: 401, description: 'Indicates that the user is not authorized.'})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:47\n                        \n                    \n\n\n            \n                \n                        Retrieves all projects the authenticated user has access to.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object containing the authenticated user's details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nList of projects accessible by the user.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Retrieve a single project by ID', description: 'Fetch details of a project using its ID.'})@ApiParam({name: 'id', description: 'The ID of the project to retrieve.', type: String})@ApiResponse({status: 200, description: 'Project retrieved successfully.', type: Project})@ApiResponse({status: 400, description: 'Project id was not valid.'})@ApiResponse({status: 401, description: 'Indicates that the user is not authorized.'})@ApiResponse({status: 404, description: 'Project not found.'})@ApiResponse({status: 500, description: 'Indicates, the request failed.'})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:97\n                        \n                    \n\n\n            \n                \n                        Retrieves a single project by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project to retrieve.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object containing the authenticated user's details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe requested project.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update a project by ID', description: 'Update details of a project using its ID.'})@ApiParam({name: 'id', description: 'The ID of the project to update.', type: String})@ApiBody({description: 'Data required to update a project. Fields can be partial.', type: UpdateProjectDto})@ApiResponse({status: 200, description: 'The project was successfully updated.', type: Project})@ApiResponse({status: 400, description: 'Invalid data provided.'})@ApiResponse({status: 401, description: 'Indicates that the user is not authorized.'})@ApiResponse({status: 404, description: 'Project not found.'})@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/project/project.controller.ts:208\n                        \n                    \n\n\n            \n                \n                        Updates an existing project.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project to update.\n\n\n                                            \n                                        \n                                        \n                                                updateProjectDto\n                                            \n                                                            UpdateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data required to update the project.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe updated project.\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiBody, ApiOperation, ApiResponse, ApiParam, ApiTags } from \"@nestjs/swagger\";\n\nimport { CreateProjectDto } from \"./dto/create-project.dto\";\nimport { UpdateProjectDto } from \"./dto/update-project.dto\";\nimport { ExpressRequestWithUser } from \"./interfaces/project.interface\";\nimport { ProjectService } from \"./project.service\";\n\nimport { JwtAuthGuard } from \"@/auth/jwt-auth.guard\";\nimport { Project } from \"@/schemas/project.schema\";\nimport { handleDomainErrors } from \"@/utils\";\n\n/**\n * Controller class for managing project-related operations.\n * Provides endpoints for creating, updating, retrieving, and deleting projects.\n * The controller is protected by JWT authentication and provides responses based on the success or failure of the requested operation.\n */\n@ApiBearerAuth()\n@ApiTags(\"Project Management\")\n@Controller(\"/api/v1/projects\")\nexport class ProjectController {\n  constructor(private readonly projectService: ProjectService) {}\n\n  /**\n   * Retrieves all projects the authenticated user has access to.\n   *\n   * @param {ExpressRequestWithUser} req - The request object containing the authenticated user's details.\n   * @returns {Promise} - List of projects accessible by the user.\n   * @throws {ProjectDoesNotExist} - Throws if no projects are found.\n   * @throws {JwtAuthGuard} - Throws if authentication fails.\n   */\n  @Get()\n  @ApiOperation({\n    summary: \"Retrieve all projects\",\n    description: \"Fetch all projects accessible to the authenticated user.\",\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"List of projects retrieved successfully.\",\n    type: [Project],\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Indicates that the user is not authorized.\",\n  })\n  @UseGuards(JwtAuthGuard)\n  async findAll(@Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null;\n      const projects = await this.projectService.findAll(userId);\n      return projects;\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Retrieves a single project by its ID.\n   *\n   * @param {string} id - The ID of the project to retrieve.\n   * @param {ExpressRequestWithUser} req - The request object containing the authenticated user's details.\n   * @returns {Promise} - The requested project.\n   * @throws {ProjectIdValidationError} - Throws if the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - Throws if the project is not found.\n   * @throws {JwtAuthGuard} - Throws if authentication fails.\n   */\n  @Get(\":id\")\n  @ApiOperation({\n    summary: \"Retrieve a single project by ID\",\n    description: \"Fetch details of a project using its ID.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"The ID of the project to retrieve.\",\n    type: String,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"Project retrieved successfully.\",\n    type: Project,\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Project id was not valid.\",\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Indicates that the user is not authorized.\",\n  })\n  @ApiResponse({\n    status: 404,\n    description: \"Project not found.\",\n  })\n  @ApiResponse({ status: 500, description: \"Indicates, the request failed.\" })\n  @UseGuards(JwtAuthGuard)\n  async findOne(@Param(\"id\") id: string, @Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null;\n      const project = await this.projectService.findOne(id, userId);\n      return project;\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Creates a new project.\n   *\n   * @param {CreateProjectDto} createProjectDto - The data required to create a project.\n   * @param {ExpressRequestWithUser} req - The request object containing the authenticated user's details.\n   * @returns {Promise} - The response object containing the result of the operation and the created project.\n   * @throws {ProjectRelationConflict} - Throws if the project already exists.\n   * @throws {JwtAuthGuard} - Throws if authentication fails.\n   */\n  @Post(\"\")\n  @ApiOperation({\n    summary: \"Create a new project\",\n    description: \"Create a new project with the specified details.\",\n  })\n  @ApiBody({\n    description: \"Data required to create a project\",\n    type: CreateProjectDto,\n  })\n  @ApiResponse({\n    status: 201,\n    description: \"Indicates, the project was successfully created.\",\n    type: Project,\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Invalid data provided.\",\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Indicates that the user is not authorized.\",\n  })\n  @ApiResponse({\n    status: 409,\n    description: \"Indicates, the project already exists.\",\n  })\n  @ApiResponse({ status: 500, description: \"Indicates, the request failed.\" })\n  @UseGuards(JwtAuthGuard)\n  async create(\n    @Body() createProjectDto: CreateProjectDto,\n    @Request() req: ExpressRequestWithUser,\n  ): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null;\n      const createdProject = await this.projectService.create(createProjectDto, userId);\n      return {\n        result: \"success\",\n        project: createdProject,\n      };\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Updates an existing project.\n   *\n   * @param {string} id - The ID of the project to update.\n   * @param {UpdateProjectDto} updateProjectDto - The data required to update the project.\n   * @returns {Promise} - The updated project.\n   * @throws {ProjectIdValidationError} - Throws if the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - Throws if the project is not found.\n   * @throws {ProjectNotModifiedError} - Throws if no changes were made during the update.\n   * @throws {JwtAuthGuard} - Throws if authentication fails.\n   */\n  @Patch(\":id\")\n  @ApiOperation({\n    summary: \"Update a project by ID\",\n    description: \"Update details of a project using its ID.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"The ID of the project to update.\",\n    type: String,\n  })\n  @ApiBody({\n    description: \"Data required to update a project. Fields can be partial.\",\n    type: UpdateProjectDto,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"The project was successfully updated.\",\n    type: Project,\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Invalid data provided.\",\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Indicates that the user is not authorized.\",\n  })\n  @ApiResponse({\n    status: 404,\n    description: \"Project not found.\",\n  })\n  @UseGuards(JwtAuthGuard)\n  async update(@Param(\"id\") id: string, @Body() updateProjectDto: UpdateProjectDto): Promise {\n    try {\n      const updatedProject = await this.projectService.update(id, updateProjectDto);\n      return updatedProject;\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Deletes a project by its ID.\n   *\n   * @param {string} id - The ID of the project to delete.\n   * @param {ExpressRequestWithUser} req - The request object containing the authenticated user's details.\n   * @returns {Promise} - The response object containing the result of the operation.\n   * @throws {ProjectIdValidationError} - Throws if the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - Throws if the project is not found.\n   * @throws {ProjectInsufficientPermissionsError} - Throws if the user is not authorized to delete the project.\n   * @throws {JwtAuthGuard} - Throws if authentication fails.\n   */\n  @Delete(\":id\")\n  @ApiOperation({\n    summary: \"Delete a project by ID\",\n    description: \"Remove a project from the system using its ID.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"The ID of the project to delete.\",\n    type: String,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"The project was successfully deleted.\",\n  })\n  @ApiResponse({\n    status: 400,\n    description: \"Project id was not valid.\",\n  })\n  @ApiResponse({\n    status: 401,\n    description: \"Indicates that the user is not authorized.\",\n  })\n  @ApiResponse({\n    status: 404,\n    description: \"Project not found.\",\n  })\n  @ApiResponse({ status: 500, description: \"Indicates, the request failed.\" })\n  @UseGuards(JwtAuthGuard)\n  async delete(@Param(\"id\") id: string, @Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null;\n      await this.projectService.delete(id, userId);\n      return { result: \"success\" };\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectDoesNotExist.html":{"url":"classes/ProjectDoesNotExist.html","title":"class - ProjectDoesNotExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectDoesNotExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project not existing.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectError.html":{"url":"classes/ProjectError.html","title":"class - ProjectError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom error class for project-related errors.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/project/project.errors.ts:5\n                            \n                        \n\n                \n                    \n                            Creates an instance of ProjectError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe error message.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectIdValidationError.html":{"url":"classes/ProjectIdValidationError.html","title":"class - ProjectIdValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectIdValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project ID validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectInsufficientPermissionsError.html":{"url":"classes/ProjectInsufficientPermissionsError.html","title":"class - ProjectInsufficientPermissionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectInsufficientPermissionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project insufficient permissions.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectModule.html":{"url":"modules/ProjectModule.html","title":"module - ProjectModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    ProjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\n\nProjectService\n\nProjectService\n\n\n\nProjectModule\n\nProjectModule\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { ProjectController } from \"./project.controller\";\nimport { ProjectService } from \"./project.service\";\n\nimport { Project, ProjectSchema } from \"@/schemas/project.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Project.name, schema: ProjectSchema }])],\n  controllers: [ProjectController],\n  providers: [ProjectService],\n})\nexport class ProjectModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectNotModifiedError.html":{"url":"classes/ProjectNotModifiedError.html","title":"class - ProjectNotModifiedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectNotModifiedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project not being modified.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectRelationConflict.html":{"url":"classes/ProjectRelationConflict.html","title":"class - ProjectRelationConflict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectRelationConflict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project relation conflicts.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Project Service for handling operations related to projects, such as creation, updating,\ndeletion, and retrieval of projects for a user.\nThis service includes methods for CRUD operations on projects, ensuring that user roles\nand permissions are respected during operations like creation and deletion.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/project/project.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProjectDto: CreateProjectDto, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Creates a new project.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createProjectDto\n                                            \n                                                            CreateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing project creation details.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user creating the project.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe created project.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(projectId: string, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:187\n                        \n                    \n\n\n            \n                \n                        Deletes a project.\nThe project can only be deleted by its creator (owner).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project to delete.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user requesting deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nThe number of deleted projects (should be 1 if successful).\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Retrieves all projects associated with a user, either as the owner or a member.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA list of projects the user is either an owner or member of.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(projectId: string, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Retrieves a single project by its ID, ensuring the user has permission to view it.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe project that the user has access to.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(projectId: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/project/project.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Updates a project with the provided data.\nIf no changes are detected in the project, it throws an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project to update.\n\n\n                                            \n                                        \n                                        \n                                                updateProjectDto\n                                            \n                                                            UpdateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated project data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe updated project.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { plainToClass } from \"class-transformer\";\nimport mongoose, { Model } from \"mongoose\";\n\nimport { CreateProjectDto } from \"./dto/create-project.dto\";\nimport { UpdateProjectDto } from \"./dto/update-project.dto\";\nimport {\n  ProjectDoesNotExist,\n  ProjectError,\n  ProjectIdValidationError,\n  ProjectInsufficientPermissionsError,\n  ProjectNotModifiedError,\n  ProjectRelationConflict,\n  ProjectUpdateDataValidationError,\n} from \"./project.errors\";\n\nimport { Project, ProjectDocument } from \"@/schemas/project.schema\";\nimport { hasChanges, isMongoDbIdValid } from \"@/utils\";\n\n/**\n * Project Service for handling operations related to projects, such as creation, updating,\n * deletion, and retrieval of projects for a user.\n *\n * This service includes methods for CRUD operations on projects, ensuring that user roles\n * and permissions are respected during operations like creation and deletion.\n *\n * @class ProjectService\n */\n@Injectable()\nexport class ProjectService {\n  constructor(\n    @InjectModel(Project.name)\n    private readonly projectModel: Model,\n  ) {}\n\n  /**\n   * Creates a new project.\n   *\n   * @param {CreateProjectDto} createProjectDto - The data transfer object containing project creation details.\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user creating the project.\n   * @returns {Promise} - The created project.\n   * @throws {ProjectRelationConflict} - Throws if a project with the same name already exists.\n   */\n  public async create(createProjectDto: CreateProjectDto, userId: mongoose.Types.ObjectId): Promise {\n    const project = plainToClass(Project, createProjectDto);\n\n    const existingProject = await this.projectModel.findOne({\n      name: project.name,\n    });\n    if (existingProject) {\n      throw new ProjectRelationConflict(`Project with name \\\"${existingProject.name}\\\" already exists.`);\n    }\n\n    const objectIdUserId = new mongoose.Types.ObjectId(userId);\n\n    const newProject = new this.projectModel({\n      ...project,\n      owner: objectIdUserId,\n      createdBy: objectIdUserId,\n    });\n\n    const createdProject = await newProject.save();\n    return createdProject;\n  }\n\n  /**\n   * Retrieves all projects associated with a user, either as the owner or a member.\n   *\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user.\n   * @returns {Promise} - A list of projects the user is either an owner or member of.\n   * @throws {ProjectDoesNotExist} - If no projects are found for the user.\n   */\n  public async findAll(userId: mongoose.Types.ObjectId): Promise {\n    const projects = await this.projectModel\n      .find({\n        $or: [{ owner: userId }, { members: userId }],\n      })\n      .populate({ path: \"owner\", select: \"name _id\" })\n      .populate(\"tickets\")\n      .populate(\"members\")\n      .select(\"-__v\")\n      .exec();\n    if (projects.length } - The project that the user has access to.\n   * @throws {ProjectIdValidationError} - If the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - If the project does not exist or the user does not have access.\n   */\n  public async findOne(projectId: string, userId: mongoose.Types.ObjectId): Promise {\n    if (!isMongoDbIdValid(projectId)) {\n      throw new ProjectIdValidationError(\"Provided id is not valid\");\n    }\n    const project = await this.projectModel\n      .findOne({\n        _id: projectId,\n        $or: [{ owner: userId }, { members: userId }],\n      })\n      .populate({ path: \"owner\", select: \"name -_id\" })\n      .populate(\"tickets\")\n      .populate(\"members\")\n      .select(\"-__v -_id\")\n      .exec();\n    if (!project) {\n      throw new ProjectDoesNotExist(\"Project not found or you do not have access\");\n    }\n    return project;\n  }\n\n  /**\n   * Updates a project with the provided data.\n   *\n   * If no changes are detected in the project, it throws an error.\n   *\n   * @param {string} projectId - The ID of the project to update.\n   * @param {UpdateProjectDto} updateProjectDto - The updated project data.\n   * @returns {Promise} - The updated project.\n   * @throws {ProjectIdValidationError} - If the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - If the project does not exist.\n   * @throws {ProjectNotModifiedError} - If no changes were detected in the update.\n   * @throws {ProjectUpdateDataValidationError} - If update data were not valid according to db schema.\n   */\n  public async update(projectId: string, updateProjectDto: UpdateProjectDto): Promise {\n    if (!isMongoDbIdValid(projectId)) {\n      throw new ProjectIdValidationError(\"Provided id is not valid\");\n    }\n    const project = await this.projectModel.findById(projectId).exec();\n    if (!project) {\n      throw new ProjectDoesNotExist(`Project with id \\\"${projectId}\\\" doesn't exist.`);\n    }\n    const validUpdate = new this.projectModel(updateProjectDto);\n    if (!validUpdate.owner) {\n      validUpdate.owner = project.owner;\n    }\n    if (!validUpdate.createdBy) {\n      validUpdate.createdBy = project.createdBy;\n    }\n    const validationError = validUpdate.validateSync();\n    if (validationError) {\n      throw new ProjectUpdateDataValidationError(\"Invalid update data\");\n    }\n    if (!hasChanges(project, updateProjectDto)) {\n      throw new ProjectNotModifiedError(\"No changes detected\");\n    }\n    const updateFields = {};\n    for (const key in updateProjectDto) {\n      if (updateProjectDto.hasOwnProperty(key)) {\n        updateFields[key] = updateProjectDto[key];\n      }\n    }\n    const updatedProject = await this.projectModel\n      .findByIdAndUpdate(\n        projectId,\n        { $set: updateFields },\n        {\n          new: true,\n        },\n      )\n      .populate({ path: \"owner\", select: \"name -_id\" })\n      .populate(\"members\")\n      .exec();\n    return updatedProject;\n  }\n\n  /**\n   * Deletes a project.\n   *\n   * The project can only be deleted by its creator (owner).\n   *\n   * @param {string} projectId - The ID of the project to delete.\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user requesting deletion.\n   * @returns {Promise} - The number of deleted projects (should be 1 if successful).\n   * @throws {ProjectIdValidationError} - If the provided project ID is invalid.\n   * @throws {ProjectDoesNotExist} - If the project does not exist.\n   * @throws {ProjectInsufficientPermissionsError} - If the user does not have permission to delete the project.\n   * @throws {ProjectError} - If the deletion fails.\n   */\n  public async delete(projectId: string, userId: mongoose.Types.ObjectId): Promise {\n    if (!isMongoDbIdValid(projectId)) {\n      throw new ProjectIdValidationError(\"Provided id is not valid\");\n    }\n    const project = await this.projectModel.findOne({ _id: projectId }).select(\"-__v -_id\");\n    if (!project) {\n      throw new ProjectDoesNotExist(`Project with id \\\"${projectId}\\\" doesn't exist.`);\n    }\n\n    if (!project.createdBy._id.equals(userId)) {\n      throw new ProjectInsufficientPermissionsError(`You are not authorized to delete this project.`);\n    }\n\n    const result = await this.projectModel.deleteOne({ _id: projectId }).exec();\n    if (result.deletedCount === 0) {\n      throw new ProjectError(`Didn't delete project with \\\"${projectId}\\\" .`);\n    }\n    return result.deletedCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectSlugValidationError.html":{"url":"classes/ProjectSlugValidationError.html","title":"class - ProjectSlugValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectSlugValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project slug validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProjectUpdateDataValidationError.html":{"url":"classes/ProjectUpdateDataValidationError.html","title":"class - ProjectUpdateDataValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProjectUpdateDataValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/project.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for project provided update data being invalid.\n\n            \n\n            \n                Extends\n            \n            \n                            ProjectError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProjectError extends Error {\n  /**\n   * Creates an instance of ProjectError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for project relation conflicts.\n * @class\n * @extends ProjectError\n */\nexport class ProjectRelationConflict extends ProjectError {}\n\n/**\n * Error class for project not existing.\n * @class\n * @extends ProjectError\n */\nexport class ProjectDoesNotExist extends ProjectError {}\n\n/**\n * Error class for project slug validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectSlugValidationError extends ProjectError {}\n\n/**\n * Error class for project ID validation errors.\n * @class\n * @extends ProjectError\n */\nexport class ProjectIdValidationError extends ProjectError {}\n\n/**\n * Error class for project insufficient permissions.\n * @class\n * @extends ProjectError\n */\nexport class ProjectInsufficientPermissionsError extends ProjectError {}\n\n/**\n * Error class for project not being modified.\n * @class\n * @extends ProjectError\n */\nexport class ProjectNotModifiedError extends ProjectError {}\n\n/**\n * Error class for project provided update data being invalid.\n * @class\n * @extends ProjectError\n */\nexport class ProjectUpdateDataValidationError extends ProjectError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This DTO is used to validate the information provided during user registration.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email address of the user', example: 'john_doe@example.com'})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.dto.ts:64\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The user's real or display name', example: 'John Doe'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.dto.ts:78\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Password for the user account, must contain at least one uppercase letter, one lowercase letter, one number, and one special character', example: 'StrongP@ssw0rd!'})@IsString()@IsNotEmpty()@Length(8, 64)@Matches(/(?=.*[a-z])/, {message: 'Password must contain at least one lowercase letter'})@Matches(/(?=.*[A-Z])/, {message: 'Password must contain at least one uppercase letter'})@Matches(/(?=.*[0-9])/, {message: 'Password must contain at least one number'})@Matches(/(?=.*[!@#$%^&*])/, {message: 'Password must contain at least one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.dto.ts:50\n                        \n                    \n\n            \n                \n                    one lowercase letter, one number, and one special character. This field is required.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique username for the user', example: 'john_doe'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register-user.dto.ts:22\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNotEmpty, IsString, Length, Matches } from \"class-validator\";\n\n/**\n * @class RegisterUserDto\n * @description Data transfer object for user registration credentials.\n * This DTO is used to validate the information provided during user registration.\n */\nexport class RegisterUserDto {\n  /**\n   * @property {string} username\n   * @description Unique username for the user. This field is required and cannot be empty.\n   * @example \"john_doe\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"Unique username for the user\",\n    example: \"john_doe\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * @property {string} password\n   * @description Password for the user account. Must contain at least one uppercase letter,\n   * one lowercase letter, one number, and one special character. This field is required.\n   * @example \"StrongP@ssw0rd!\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"Password for the user account, must contain at least one uppercase letter, one lowercase letter, one number, and one special character\",\n    example: \"StrongP@ssw0rd!\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Length(8, 64)\n  @Matches(/(?=.*[a-z])/, {\n    message: \"Password must contain at least one lowercase letter\",\n  })\n  @Matches(/(?=.*[A-Z])/, {\n    message: \"Password must contain at least one uppercase letter\",\n  })\n  @Matches(/(?=.*[0-9])/, {\n    message: \"Password must contain at least one number\",\n  })\n  @Matches(/(?=.*[!@#$%^&*])/, {\n    message: \"Password must contain at least one special character\",\n  })\n  password: string;\n\n  /**\n   * @property {string} email\n   * @description Email address of the user. This field is required and must be a valid email format.\n   * @example \"john_doe@example.com\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"Email address of the user\",\n    example: \"john_doe@example.com\",\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * @property {string} name\n   * @description The user's real or display name. This field is required and cannot be empty.\n   * @example \"John Doe\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"The user's real or display name\",\n    example: \"John Doe\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Session.html":{"url":"interfaces/Session.html","title":"interface - Session","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Session\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            sessionId\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sessionId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sessionId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/template-playground.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"template\" | \"partial\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"template\" | \"partial\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\ninterface Template {\n  name: string;\n  path: string;\n  type: 'template' | 'partial';\n}\n\ninterface Session {\n  sessionId: string;\n  success: boolean;\n  message: string;\n}\n\ninterface CompoDocConfig {\n  hideGenerator?: boolean;\n  disableSourceCode?: boolean;\n  disableGraph?: boolean;\n  disableCoverage?: boolean;\n  disablePrivate?: boolean;\n  disableProtected?: boolean;\n  disableInternal?: boolean;\n  disableLifeCycleHooks?: boolean;\n  disableConstructors?: boolean;\n  disableRoutesGraph?: boolean;\n  disableSearch?: boolean;\n  disableDependencies?: boolean;\n  disableProperties?: boolean;\n  disableDomTree?: boolean;\n  disableTemplateTab?: boolean;\n  disableStyleTab?: boolean;\n  disableMainGraph?: boolean;\n  disableFilePath?: boolean;\n  disableOverview?: boolean;\n  hideDarkModeToggle?: boolean;\n  minimal?: boolean;\n  customFavicon?: string;\n  includes?: string;\n  includesName?: string;\n}\n\n@Component({\n  selector: 'template-playground-root',\n  template: `\n    \n      \n        Template Playground\n        \n          Session: {{sessionId.substring(0, 8)}}...\n          Saving...\n          Last saved: {{lastSaved | date:'short'}}\n        \n        \n          ⚙️ Config\n          Reset to Default\n          Download Templates\n        \n      \n\n      \n      \n        CompoDoc Configuration\n        \n           Hide Generator\n           Hide Dark Mode Toggle\n           Minimal Mode\n           Disable Overview\n           Disable File Path\n           Disable Source Code\n           Disable Graph\n           Disable Main Graph\n           Disable Routes Graph\n           Disable Coverage\n           Disable Search\n           Disable Dependencies\n           Disable Private\n           Disable Protected\n           Disable Internal\n           Disable Lifecycle Hooks\n           Disable Constructors\n           Disable Properties\n           Disable DOM Tree\n           Disable Template Tab\n           Disable Style Tab\n        \n      \n\n      \n        \n          \n            Templates\n            \n              \n                \n                {{template.name}}\n                {{template.type}}\n              \n            \n\n            \n              Loading templates...\n            \n          \n        \n\n        \n          \n            \n              {{selectedFile.path}}\n              {{selectedFile.type}}\n            \n            \n          \n\n          \n            \n              Live Preview\n              🔄 Refresh\n            \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .template-playground {\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    }\n\n    .template-playground-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 1rem 2rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .template-playground-status {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      font-size: 0.875rem;\n    }\n\n    .session-info {\n      color: #6c757d;\n      font-family: monospace;\n    }\n\n    .saving-indicator {\n      color: #ffc107;\n      font-weight: bold;\n    }\n\n    .last-saved {\n      color: #28a745;\n    }\n\n    .template-playground-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n\n    .config-panel {\n      background: #e9ecef;\n      padding: 1rem 2rem;\n      border-bottom: 1px solid #dee2e6;\n      transition: all 0.3s ease;\n      max-height: 200px;\n      overflow: hidden;\n    }\n\n    .config-panel.collapsed {\n      max-height: 0;\n      padding: 0 2rem;\n    }\n\n    .config-options {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      gap: 0.5rem;\n      margin-top: 0.5rem;\n    }\n\n    .config-options label {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n    }\n\n    .template-playground-body {\n      display: flex;\n      flex: 1;\n      overflow: hidden;\n    }\n\n    .template-playground-sidebar {\n      width: 250px;\n      background: #f8f9fa;\n      border-right: 1px solid #dee2e6;\n      overflow-y: auto;\n    }\n\n    .template-file-list {\n      padding: 1rem;\n    }\n\n    .template-file-list h3 {\n      margin: 0 0 0.5rem 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n      color: #495057;\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n\n    .file-list {\n      list-style: none;\n      padding: 0;\n      margin: 0 0 1.5rem 0;\n    }\n\n    .file-list li {\n      display: flex;\n      align-items: center;\n      padding: 0.5rem;\n      cursor: pointer;\n      border-radius: 4px;\n      font-size: 0.875rem;\n      transition: background-color 0.15s ease;\n    }\n\n    .file-list li:hover {\n      background: #e9ecef;\n    }\n\n    .file-list li.active {\n      background: #007bff;\n      color: white;\n    }\n\n    .file-icon {\n      margin-right: 0.5rem;\n      opacity: 0.7;\n    }\n\n    .file-type {\n      margin-left: auto;\n      font-size: 0.75rem;\n      opacity: 0.7;\n      text-transform: uppercase;\n    }\n\n    .loading-templates {\n      text-align: center;\n      color: #6c757d;\n      font-style: italic;\n      padding: 2rem;\n    }\n\n    .template-playground-main {\n      flex: 1;\n      display: flex;\n      overflow: hidden;\n    }\n\n    .template-playground-editor {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n      border-right: 1px solid #dee2e6;\n    }\n\n    .editor-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .editor-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .file-type-badge {\n      background: #6c757d;\n      color: white;\n      padding: 0.125rem 0.5rem;\n      border-radius: 12px;\n      font-size: 0.75rem;\n      text-transform: uppercase;\n    }\n\n    .editor-container {\n      flex: 1;\n      position: relative;\n    }\n\n    .template-playground-preview {\n      width: 50%;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .preview-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0.75rem 1rem;\n      background: #f8f9fa;\n      border-bottom: 1px solid #dee2e6;\n    }\n\n    .preview-header h4 {\n      margin: 0;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n\n    .preview-frame {\n      flex: 1;\n      border: none;\n      background: white;\n    }\n\n    .btn {\n      padding: 0.375rem 0.75rem;\n      border: 1px solid transparent;\n      border-radius: 0.25rem;\n      font-size: 0.875rem;\n      font-weight: 500;\n      text-decoration: none;\n      cursor: pointer;\n      transition: all 0.15s ease;\n    }\n\n    .btn-primary {\n      background: #007bff;\n      border-color: #007bff;\n      color: white;\n    }\n\n    .btn-primary:hover {\n      background: #0056b3;\n      border-color: #004085;\n    }\n\n    .btn-secondary {\n      background: #6c757d;\n      border-color: #6c757d;\n      color: white;\n    }\n\n    .btn-secondary:hover {\n      background: #545b62;\n      border-color: #4e555b;\n    }\n\n    .btn-success {\n      background: #28a745;\n      border-color: #28a745;\n      color: white;\n    }\n\n    .btn-success:hover {\n      background: #1e7e34;\n      border-color: #1c7430;\n    }\n\n    .btn-sm {\n      padding: 0.25rem 0.5rem;\n      font-size: 0.75rem;\n    }\n  `]\n})\nexport class TemplatePlaygroundComponent implements OnInit, OnDestroy {\n  @ViewChild('editorContainer', { static: true }) editorContainer!: ElementRef;\n  @ViewChild('previewFrame', { static: true }) previewFrame!: ElementRef;\n\n  sessionId: string = '';\n  templates: Template[] = [];\n  selectedFile: Template | null = null;\n  config: CompoDocConfig = {};\n  showConfigPanel: boolean = false;\n  saving: boolean = false;\n  lastSaved: Date | null = null;\n\n  private saveTimeout?: number;\n  private readonly SAVE_DELAY = 300; // 300ms debounce\n\n  get previewUrl(): string {\n    return this.sessionId ? `/api/session/${this.sessionId}/docs/` : '';\n  }\n\n  constructor(\n    private http: HttpClient,\n    private editorService: TemplateEditorService,\n    private zipService: ZipExportService,\n    private hbsService: HbsRenderService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      await this.createSession();\n      await this.loadSessionTemplates();\n      await this.loadSessionConfig();\n      this.initializeEditor();\n    } catch (error) {\n      console.error('Error initializing template playground:', error);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n  }\n\n  private async createSession(): Promise {\n    const response = await this.http.post('/api/session/create', {}).toPromise();\n    if (response && response.success) {\n      this.sessionId = response.sessionId;\n      console.log('Session created:', this.sessionId);\n    } else {\n      throw new Error('Failed to create session');\n    }\n  }\n\n  private async loadSessionTemplates(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/templates`).toPromise();\n    if (response && response.success) {\n      this.templates = response.templates;\n\n      // Auto-select the first template\n      if (this.templates.length > 0 && !this.selectedFile) {\n        this.selectFile(this.templates[0]);\n      }\n    }\n  }\n\n  private async loadSessionConfig(): Promise {\n    if (!this.sessionId) return;\n\n    const response = await this.http.get(`/api/session/${this.sessionId}/config`).toPromise();\n    if (response && response.success) {\n      this.config = response.config;\n    }\n  }\n\n  initializeEditor() {\n    this.editorService.initializeEditor(this.editorContainer.nativeElement);\n\n    // Set up debounced save on content change\n    this.editorService.setOnChangeCallback((content: string) => {\n      this.scheduleAutoSave(content);\n    });\n  }\n\n  async selectFile(template: Template) {\n    this.selectedFile = template;\n\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.get(`/api/session/${this.sessionId}/template/${template.path}`).toPromise();\n      if (response && response.success) {\n        this.editorService.setEditorContent(response.content, template.type === 'template' ? 'handlebars' : 'handlebars');\n      }\n    } catch (error) {\n      console.error('Error loading template:', error);\n    }\n  }\n\n  private scheduleAutoSave(content: string): void {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    // Clear existing timeout\n    if (this.saveTimeout) {\n      clearTimeout(this.saveTimeout);\n    }\n\n    // Set saving indicator\n    this.saving = true;\n\n    // Schedule new save\n    this.saveTimeout = window.setTimeout(async () => {\n      try {\n        await this.saveTemplate(content);\n        this.saving = false;\n        this.lastSaved = new Date();\n      } catch (error) {\n        console.error('Error saving template:', error);\n        this.saving = false;\n      }\n    }, this.SAVE_DELAY);\n  }\n\n  private async saveTemplate(content: string): Promise {\n    if (!this.selectedFile || !this.sessionId) return;\n\n    const response = await this.http.post(`/api/session/${this.sessionId}/template/${this.selectedFile.path}`, {\n      content\n    }).toPromise();\n\n    if (!response || !response.success) {\n      throw new Error('Failed to save template');\n    }\n  }\n\n  async updateConfig(): Promise {\n    if (!this.sessionId) return;\n\n    try {\n      const response = await this.http.post(`/api/session/${this.sessionId}/config`, {\n        config: this.config\n      }).toPromise();\n\n      if (response && response.success) {\n        // Config updated, documentation will be regenerated automatically\n      }\n    } catch (error) {\n      console.error('Error updating config:', error);\n    }\n  }\n\n  toggleConfigPanel(): void {\n    this.showConfigPanel = !this.showConfigPanel;\n  }\n\n  refreshPreview(): void {\n    if (this.previewFrame?.nativeElement) {\n      this.previewFrame.nativeElement.src = this.previewFrame.nativeElement.src;\n    }\n  }\n\n  resetToDefault(): void {\n    // Implementation for resetting to default templates\n    if (confirm('Are you sure you want to reset all templates to their default values? This action cannot be undone.')) {\n      // TODO: Implement reset functionality\n      console.log('Reset to default templates');\n    }\n  }\n\n  async exportZip(): Promise {\n    try {\n      if (!this.sessionId) {\n        console.error('No active session. Please refresh the page and try again.');\n        return;\n      }\n\n      console.log('Creating template package...');\n\n      // Call server-side ZIP creation endpoint for all templates\n      const response = await this.http.post(`/api/session/${this.sessionId}/download-all-templates`, {}, {\n        responseType: 'blob',\n        observe: 'response'\n      }).toPromise();\n\n      if (!response || !response.body) {\n        throw new Error('Failed to create template package');\n      }\n\n      // Get the ZIP file as a blob\n      const zipBlob = response.body;\n\n      // Get filename from response headers or construct it\n      const contentDisposition = response.headers.get('Content-Disposition');\n      let filename = `compodoc-templates-${this.sessionId}.zip`;\n\n      if (contentDisposition) {\n        const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n        if (filenameMatch) {\n          filename = filenameMatch[1];\n        }\n      }\n\n      // Create download link and trigger download\n      const url = URL.createObjectURL(zipBlob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      console.log('Template package downloaded successfully!');\n    } catch (error) {\n      console.error('Error downloading template package:', error);\n    }\n  }\n\n  trackByName(index: number, item: Template): string {\n    return item.name;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemplateEditorService.html":{"url":"injectables/TemplateEditorService.html","title":"injectable - TemplateEditorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TemplateEditorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/template-editor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                getLanguageFromFileType\n                            \n                            \n                                initializeEditor\n                            \n                            \n                                    Private\n                                registerHandlebarsLanguage\n                            \n                            \n                                setEditorContent\n                            \n                            \n                                setOnChangeCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getLanguageFromFileType\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageFromFileType(fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeEditor\n                        \n                    \n                \n            \n            \n                \ninitializeEditor(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        registerHandlebarsLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerHandlebarsLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEditorContent\n                        \n                    \n                \n            \n            \n                \nsetEditorContent(content: string, fileType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOnChangeCallback\n                        \n                    \n                \n            \n            \n                \nsetOnChangeCallback(callback: (value: string) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/template-editor.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        editor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in docs/template-playground/template-editor.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onChangeCallback\n                        \n                    \n                \n            \n                \n                    \n                        Type :      | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in docs/template-playground/template-editor.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const monaco: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TemplateEditorService {\n  private editor: any;\n  private onChangeCallback: ((value: string) => void) | null = null;\n\n  initializeEditor(container: HTMLElement) {\n    // Initialize Monaco Editor\n    this.editor = monaco.editor.create(container, {\n      value: '',\n      language: 'html',\n      theme: 'vs-dark',\n      automaticLayout: true,\n      minimap: {\n        enabled: true\n      },\n      scrollBeyondLastLine: false,\n      fontSize: 14,\n      wordWrap: 'on',\n      lineNumbers: 'on',\n      roundedSelection: false,\n      scrollbar: {\n        horizontal: 'visible',\n        vertical: 'visible'\n      },\n      overviewRulerLanes: 2,\n      quickSuggestions: {\n        other: true,\n        comments: true,\n        strings: true\n      },\n      parameterHints: {\n        enabled: true\n      },\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: false\n    });\n\n    // Set up change listener\n    this.editor.onDidChangeModelContent(() => {\n      if (this.onChangeCallback) {\n        this.onChangeCallback(this.editor.getValue());\n      }\n    });\n\n    // Register custom language definitions\n    this.registerHandlebarsLanguage();\n  }\n\n  setEditorContent(content: string, fileType: string) {\n    if (this.editor) {\n      const language = this.getLanguageFromFileType(fileType);\n      const model = monaco.editor.createModel(content, language);\n      this.editor.setModel(model);\n    }\n  }\n\n  setOnChangeCallback(callback: (value: string) => void) {\n    this.onChangeCallback = callback;\n  }\n\n  private getLanguageFromFileType(fileType: string): string {\n    switch (fileType) {\n      case 'hbs':\n        return 'handlebars';\n      case 'css':\n      case 'scss':\n        return 'css';\n      case 'js':\n        return 'javascript';\n      case 'ts':\n        return 'typescript';\n      default:\n        return 'html';\n    }\n  }\n\n  private registerHandlebarsLanguage() {\n    // Register Handlebars language for Monaco Editor\n    if (monaco.languages.getLanguages().find((lang: any) => lang.id === 'handlebars')) {\n      return; // Already registered\n    }\n\n    monaco.languages.register({ id: 'handlebars' });\n\n    monaco.languages.setMonarchTokensProvider('handlebars', {\n      tokenizer: {\n        root: [\n          [/\\{\\{\\{/, { token: 'keyword', next: '@handlebars_unescaped' }],\n          [/\\{\\{/, { token: 'keyword', next: '@handlebars' }],\n          [//, 'comment', '@pop'],\n          [/[^-]+/, 'comment'],\n          [/./, 'comment']\n        ],\n\n        doctype: [\n          [/[^>]+/, 'metatag.content'],\n          [/>/, 'metatag', '@pop']\n        ],\n\n        tag: [\n          [/[ \\t\\r\\n]+/, 'white'],\n          [/(\\w+)(\\s*=\\s*)(\"([^\"]*)\")/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/(\\w+)(\\s*=\\s*)('([^']*)')/, ['attribute.name', 'delimiter', 'attribute.value', 'attribute.value']],\n          [/\\w+/, 'attribute.name'],\n          [/>/, 'delimiter', '@pop']\n        ]\n      }\n    });\n\n    monaco.languages.setLanguageConfiguration('handlebars', {\n      comments: {\n        blockComment: ['']\n      },\n      brackets: [\n        [''],\n        ['{{', '}}'],\n        ['{{{', '}}}']\n      ],\n      autoClosingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ],\n      surroundingPairs: [\n        { open: '' },\n        { open: '{{', close: '}}' },\n        { open: '{{{', close: '}}}' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n      ]\n    });\n  }\n\n  destroy() {\n    if (this.editor) {\n      this.editor.dispose();\n      this.editor = null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TemplatePlaygroundModule.html":{"url":"modules/TemplatePlaygroundModule.html","title":"module - TemplatePlaygroundModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TemplatePlaygroundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            docs/template-playground/template-playground.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HbsRenderService\n                        \n                        \n                            TemplateEditorService\n                        \n                        \n                            ZipExportService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TemplatePlaygroundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TemplatePlaygroundComponent } from './template-playground.component';\nimport { TemplateEditorService } from './template-editor.service';\nimport { ZipExportService } from './zip-export.service';\nimport { HbsRenderService } from './hbs-render.service';\n\n@NgModule({\n  declarations: [\n    TemplatePlaygroundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    TemplateEditorService,\n    ZipExportService,\n    HbsRenderService\n  ],\n  bootstrap: [TemplatePlaygroundComponent]\n})\nexport class TemplatePlaygroundModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticket.html":{"url":"classes/Ticket.html","title":"class - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/ticket.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Ticket Schema represents the structure of a ticket in the database.\nThis schema defines the ticket properties, such as title, description, assignees, projectId, status,\nand priority, along with relationships to the User and Project models.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                assignees\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                dueDate\n                            \n                            \n                                    \n                                priority\n                            \n                            \n                                    \n                                projectId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        assignees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:59\n                        \n                    \n\n            \n                \n                    An array of IDs of users assigned to the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:50\n                        \n                    \n\n            \n                \n                    The ID of the user who created the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:41\n                        \n                    \n\n            \n                \n                    A description of the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:99\n                        \n                    \n\n            \n                \n                    The due date for the ticket.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'medium', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:89\n                        \n                    \n\n            \n                \n                    The priority level of the ticket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:68\n                        \n                    \n\n            \n                \n                    The ID of the project this ticket belongs to.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'open', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:80\n                        \n                    \n\n            \n                \n                    The current status of the ticket.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/ticket.schema.ts:32\n                        \n                    \n\n            \n                \n                    The title of the ticket.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Types } from \"mongoose\";\n\nimport { Project } from \"./project.schema\";\nimport { User } from \"./user.schema\";\n\n/**\n * Ticket Schema represents the structure of a ticket in the database.\n *\n * This schema defines the ticket properties, such as `title`, `description`, `assignees`, `projectId`, `status`,\n * and `priority`, along with relationships to the `User` and `Project` models.\n *\n * @class Ticket\n * @property {string} title - The title of the ticket.\n * @property {string} description - A description of the ticket.\n * @property {Types.ObjectId} createdBy - The ID of the user who created the ticket.\n * @property {Types.ObjectId[]} assignees - An array of IDs of users assigned to the ticket.\n * @property {Types.ObjectId} projectId - The ID of the project this ticket belongs to.\n * @property {string} status - The current status of the ticket.\n * @property {string} priority - The priority level of the ticket.\n * @property {Date} [dueDate] - The due date for the ticket (optional).\n */\n@Schema({ timestamps: true })\nexport class Ticket {\n  /**\n   * The title of the ticket.\n   *\n   * @example \"Fix login issue\"\n   * @required\n   */\n  @Prop({ required: true })\n  title: string;\n\n  /**\n   * A description of the ticket.\n   *\n   * @example \"The user is unable to log in with valid credentials\"\n   * @required\n   */\n  @Prop({ required: true })\n  description: string;\n\n  /**\n   * The ID of the user who created the ticket.\n   *\n   * @example \"60c72b2f5b1b2c6f5e8c9999\"\n   * @required\n   */\n  @Prop({ type: Types.ObjectId, ref: User.name, required: true })\n  createdBy: Types.ObjectId;\n\n  /**\n   * An array of IDs of users assigned to the ticket.\n   *\n   * @example [\"60c72b2f5b1b2c6f5e8c8888\", \"60c72b2f5b1b2c6f5e8c7777\"]\n   * @optional\n   */\n  @Prop({ type: [{ type: Types.ObjectId, ref: User.name }] })\n  assignees: Types.ObjectId[];\n\n  /**\n   * The ID of the project this ticket belongs to.\n   *\n   * @example \"60c72b2f5b1b2c6f5e8c6666\"\n   * @required\n   */\n  @Prop({ type: Types.ObjectId, ref: Project.name, required: true })\n  projectId: Types.ObjectId;\n\n  /**\n   * The current status of the ticket.\n   *\n   * @default 'open'\n   * @enum ['open', 'pending', 'in-progress', 'in-qa', 'staging', 'uat', 'production', 'wont-do', 'closed']\n   */\n  @Prop({\n    default: \"open\",\n    enum: [\"open\", \"pending\", \"in-progress\", \"in-qa\", \"staging\", \"uat\", \"production\", \"wont-do\", \"closed\"],\n  })\n  status: string;\n\n  /**\n   * The priority level of the ticket.\n   *\n   * @default 'medium'\n   * @enum ['low', 'medium', 'high']\n   */\n  @Prop({ default: \"medium\", enum: [\"low\", \"medium\", \"high\"] })\n  priority: string;\n\n  /**\n   * The due date for the ticket.\n   *\n   * @example \"2024-12-31T23:59:59Z\"\n   * @optional\n   * @default null\n   */\n  @Prop({ default: null })\n  dueDate: Date;\n}\n\n/**\n * TicketSchema is the Mongoose schema for the `Ticket` class.\n *\n * This schema is used by Mongoose to interact with the database.\n *\n * @constant TicketSchema\n */\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketController.html":{"url":"controllers/TicketController.html","title":"controller - TicketController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Controllers\n  TicketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.controller.ts\n        \n            \n                Prefix\n            \n            \n                /api/v1/tickets\n            \n\n\n            \n                Description\n            \n            \n                Controller for handling HTTP requests related to tickets.\nProvides CRUD operations for ticket management.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTicketDto: CreateTicketDto, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:73\n                        \n                    \n\n\n            \n                \n                        Creates a new ticket for the authenticated user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createTicketDto\n                                            \n                                                            CreateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data required to create a new ticket.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object, containing the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nResponse object with status, message, and the created ticket.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:143\n                        \n                    \n\n\n            \n                \n                        Deletes a ticket by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the ticket to delete.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object, containing the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nResponse object with the result status of the delete operation.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:32\n                        \n                    \n\n\n            \n                \n                        Retrieves all tickets accessible by the authenticated user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object, containing the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA list of tickets accessible to the user.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req: ExpressRequestWithUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:52\n                        \n                    \n\n\n            \n                \n                        Retrieves a specific ticket by its ID for the authenticated user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the ticket to retrieve.\n\n\n                                            \n                                        \n                                        \n                                                req\n                                            \n                                                            ExpressRequestWithUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe request object, containing the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe ticket object requested.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update an existing ticket by ID'})@ApiParam({name: 'id', description: 'The ID of the ticket to update', type: String})@ApiBody({type: UpdateTicketDto, description: 'The updated data for the ticket'})@ApiResponse({status: 200, description: 'Ticket successfully updated', type: Ticket})@ApiResponse({status: 304, description: 'Ticket not modified'})@ApiResponse({status: 500, description: 'Indicates, the request failed.'})\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:124\n                        \n                    \n\n\n            \n                \n                        Updates an existing ticket by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the ticket to update.\n\n\n                                            \n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated data for the ticket.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe updated ticket object.\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpStatus, Request, UseGuards } from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiBody, ApiOperation, ApiParam, ApiResponse, ApiTags } from \"@nestjs/swagger\";\n\nimport { CreateTicketDto } from \"./dto/create-ticket.dto\";\nimport { UpdateTicketDto } from \"./dto/update-ticket.dto\";\nimport { ExpressRequestWithUser } from \"./interfaces/ticket.interface\";\nimport { TicketService } from \"./ticket.service\";\n\nimport { JwtAuthGuard } from \"@/auth/jwt-auth.guard\";\nimport { Ticket } from \"@/schemas/ticket.schema\";\nimport { handleDomainErrors } from \"@/utils\";\n\n/**\n * Controller for handling HTTP requests related to tickets.\n * Provides CRUD operations for ticket management.\n */\n@ApiBearerAuth()\n@ApiTags(\"Ticket Management\")\n@Controller(\"/api/v1/tickets\")\nexport class TicketController {\n  constructor(private readonly ticketService: TicketService) {}\n\n  /**\n   * Retrieves all tickets accessible by the authenticated user.\n   *\n   * @param {ExpressRequestWithUser} req - The request object, containing the user.\n   * @returns {Promise} - A list of tickets accessible to the user.\n   * @throws {any} - Handles domain errors.\n   */\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  async findAll(@Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null; // Nullify the user object after usage to avoid unintended side effects\n      return await this.ticketService.findAll(userId);\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Retrieves a specific ticket by its ID for the authenticated user.\n   *\n   * @param {string} id - The ID of the ticket to retrieve.\n   * @param {ExpressRequestWithUser} req - The request object, containing the user.\n   * @returns {Promise} - The ticket object requested.\n   * @throws {any} - Handles domain errors.\n   */\n  @Get(\":id\")\n  @UseGuards(JwtAuthGuard)\n  async findOne(@Param(\"id\") id: string, @Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null; // Nullify the user object after usage to avoid unintended side effects\n      const ticket = await this.ticketService.findOne(id, userId);\n      return ticket;\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Creates a new ticket for the authenticated user.\n   *\n   * @param {CreateTicketDto} createTicketDto - The data required to create a new ticket.\n   * @param {ExpressRequestWithUser} req - The request object, containing the user.\n   * @returns {Promise} - Response object with status, message, and the created ticket.\n   * @throws {any} - Handles domain errors.\n   */\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  async create(\n    @Body() createTicketDto: CreateTicketDto,\n    @Request() req: ExpressRequestWithUser,\n  ): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null; // Nullify the user object after usage to avoid unintended side effects\n      const createdTicket = await this.ticketService.create(createTicketDto, userId);\n      return {\n        statusCode: HttpStatus.CREATED,\n        message: \"Ticket created successfully\",\n        data: createdTicket,\n      };\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Updates an existing ticket by its ID.\n   *\n   * @param {string} id - The ID of the ticket to update.\n   * @param {UpdateTicketDto} updateTicketDto - The updated data for the ticket.\n   * @returns {Promise} - The updated ticket object.\n   * @throws {any} - Handles domain errors.\n   */\n  @Patch(\":id\")\n  @ApiOperation({ summary: \"Update an existing ticket by ID\" })\n  @ApiParam({\n    name: \"id\",\n    description: \"The ID of the ticket to update\",\n    type: String,\n  })\n  @ApiBody({\n    type: UpdateTicketDto,\n    description: \"The updated data for the ticket\",\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"Ticket successfully updated\",\n    type: Ticket,\n  })\n  @ApiResponse({\n    status: 304,\n    description: \"Ticket not modified\",\n  })\n  @ApiResponse({ status: 500, description: \"Indicates, the request failed.\" })\n  async update(@Param(\"id\") id: string, @Body() updateTicketDto: UpdateTicketDto): Promise {\n    try {\n      const updatedTicket = await this.ticketService.update(id, updateTicketDto);\n      return updatedTicket;\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n\n  /**\n   * Deletes a ticket by its ID.\n   *\n   * @param {string} id - The ID of the ticket to delete.\n   * @param {ExpressRequestWithUser} req - The request object, containing the user.\n   * @returns {Promise} - Response object with the result status of the delete operation.\n   * @throws {any} - Handles domain errors.\n   */\n  @Delete(\":id\")\n  @UseGuards(JwtAuthGuard)\n  async delete(@Param(\"id\") id: string, @Request() req: ExpressRequestWithUser): Promise {\n    try {\n      const userId = req.user._id;\n      req.user = null; // Nullify the user object after usage to avoid unintended side effects\n      await this.ticketService.delete(id, userId);\n      return { result: \"success\" };\n    } catch (error) {\n      handleDomainErrors(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketDoesNotExist.html":{"url":"classes/TicketDoesNotExist.html","title":"class - TicketDoesNotExist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketDoesNotExist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket not existing.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketError.html":{"url":"classes/TicketError.html","title":"class - TicketError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Custom error class for ticket-related errors.\n\n            \n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/ticket/ticket.errors.ts:5\n                            \n                        \n\n                \n                    \n                            Creates an instance of TicketError.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe error message.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketIdValidationError.html":{"url":"classes/TicketIdValidationError.html","title":"class - TicketIdValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketIdValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket ID validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketInsufficientPermissionsError.html":{"url":"classes/TicketInsufficientPermissionsError.html","title":"class - TicketInsufficientPermissionsError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketInsufficientPermissionsError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket insufficient permissions.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketModule.html":{"url":"modules/TicketModule.html","title":"module - TicketModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    TicketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\n\nTicketService\n\nTicketService\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ticket/ticket.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { TicketController } from \"./ticket.controller\";\nimport { TicketService } from \"./ticket.service\";\n\nimport { Project, ProjectSchema } from \"@/schemas/project.schema\";\nimport { Ticket, TicketSchema } from \"@/schemas/ticket.schema\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Ticket.name, schema: TicketSchema }]), MongooseModule.forFeature([{ name: Project.name, schema: ProjectSchema }])],\n  controllers: [TicketController],\n  providers: [TicketService],\n})\nexport class TicketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketNotModifiedError.html":{"url":"classes/TicketNotModifiedError.html","title":"class - TicketNotModifiedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketNotModifiedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket not being modified.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketRelationConflict.html":{"url":"classes/TicketRelationConflict.html","title":"class - TicketRelationConflict","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketRelationConflict\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket relation conflicts.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service class for managing ticket-related operations within projects.\nProvides methods for creating, updating, retrieving, and deleting tickets.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketModel: Model, projectModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/ticket/ticket.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTicketDto: CreateTicketDto, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Creates a new ticket for a project.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createTicketDto\n                                            \n                                                            CreateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data required to create a ticket.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user creating the ticket.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe created ticket object.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(ticketId: string, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:148\n                        \n                    \n\n\n            \n                \n                        Deletes a ticket by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ticketId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the ticket to delete.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user attempting to delete the ticket.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nThe number of deleted tickets.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Retrieves all tickets accessible by the given user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user requesting the tickets.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA list of tickets accessible by the user.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(projectId: string, userId: mongoose.Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Retrieves a single ticket by its ID for the specified project and user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the project containing the ticket.\n\n\n                                            \n                                        \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user requesting the ticket.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe ticket that matches the provided ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(ticketId: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Updates an existing ticket.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ticketId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the ticket to update.\n\n\n                                            \n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to update the ticket with.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe updated ticket object.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { plainToClass } from \"class-transformer\";\nimport mongoose, { Model } from \"mongoose\";\n\nimport { CreateTicketDto } from \"./dto/create-ticket.dto\";\nimport { UpdateTicketDto } from \"./dto/update-ticket.dto\";\nimport { TicketDoesNotExist, TicketError, TicketIdValidationError, TicketInsufficientPermissionsError, TicketNotModifiedError } from \"./ticket.errors\";\nimport { sanitizeUpdateTicketDto } from \"./utils/ticket.utils\";\n\nimport { ProjectDoesNotExist, ProjectIdValidationError } from \"@/project/project.errors\";\nimport { Project } from \"@/schemas/project.schema\";\nimport { Ticket } from \"@/schemas/ticket.schema\";\nimport { hasChanges, isMongoDbIdValid } from \"@/utils\";\n\n/**\n * Service class for managing ticket-related operations within projects.\n * Provides methods for creating, updating, retrieving, and deleting tickets.\n */\n@Injectable()\nexport class TicketService {\n  constructor(\n    @InjectModel(Ticket.name) private readonly ticketModel: Model,\n    @InjectModel(Project.name) private readonly projectModel: Model, // Inject Project model\n  ) {}\n\n  /**\n   * Creates a new ticket for a project.\n   *\n   * @param {CreateTicketDto} createTicketDto - The data required to create a ticket.\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user creating the ticket.\n   * @returns {Promise} - The created ticket object.\n   * @throws {ProjectDoesNotExist} - Throws if the project with the provided ID doesn't exist.\n   * @throws {ProjectIdValidationError} - Throws if the provided project ID is invalid.\n   */\n  public async create(createTicketDto: CreateTicketDto, userId: mongoose.Types.ObjectId): Promise {\n    if (!isMongoDbIdValid(createTicketDto.projectId)) {\n      throw new ProjectIdValidationError(`Invalid project id: \\\"${createTicketDto.projectId}\\\"`);\n    }\n    const project = await this.projectModel.findById(createTicketDto.projectId).exec();\n    if (!project) {\n      throw new ProjectDoesNotExist(`Project with id \\\"${createTicketDto.projectId}\\\" doesn't exist.`);\n    }\n    const ticket = plainToClass(Ticket, createTicketDto);\n    const newTicket = new this.ticketModel({\n      ...ticket,\n      createdBy: userId,\n    });\n    const createdTicket = await newTicket.save();\n    project.tickets.push(createdTicket._id);\n    await project.save();\n    return createdTicket;\n  }\n\n  /**\n   * Retrieves all tickets accessible by the given user.\n   *\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user requesting the tickets.\n   * @returns {Promise} - A list of tickets accessible by the user.\n   * @throws {TicketDoesNotExist} - Throws if no tickets are found.\n   */\n  public async findAll(userId: mongoose.Types.ObjectId): Promise {\n    const tickets = await this.ticketModel\n      .find({\n        $or: [{ createdBy: userId }, { members: { $in: [userId] } }, { assignees: { $in: [userId] } }],\n      })\n      .select(\"-__v\")\n      .exec();\n    if (tickets.length } - The ticket that matches the provided ID.\n   * @throws {ProjectIdValidationError} - Throws if the provided project ID is invalid.\n   * @throws {TicketDoesNotExist} - Throws if the ticket is not found or if the user does not have access.\n   */\n  public async findOne(projectId: string, userId: mongoose.Types.ObjectId): Promise {\n    if (!isMongoDbIdValid(projectId)) {\n      throw new ProjectIdValidationError(\"Provided id is not valid\");\n    }\n    const ticket = await this.ticketModel\n      .findOne({\n        _id: projectId,\n        $or: [{ createdBy: userId }, { members: { $in: [userId] } }, { assignees: { $in: [userId] } }],\n      })\n      .select(\"-__v -_id\")\n      .exec();\n    if (!ticket) {\n      throw new TicketDoesNotExist(\"Ticket not found or you do not have access\");\n    }\n    return ticket;\n  }\n\n  /**\n   * Updates an existing ticket.\n   *\n   * @param {string} ticketId - The ID of the ticket to update.\n   * @param {UpdateTicketDto} updateTicketDto - The data to update the ticket with.\n   * @returns {Promise} - The updated ticket object.\n   * @throws {TicketIdValidationError} - Throws if the provided ticket ID is invalid.\n   * @throws {TicketDoesNotExist} - Throws if the ticket does not exist.\n   * @throws {TicketNotModifiedError} - Throws if no changes are detected during the update.\n   */\n  public async update(ticketId: string, updateTicketDto: UpdateTicketDto): Promise {\n    if (!isMongoDbIdValid(ticketId)) {\n      throw new TicketIdValidationError(\"Provided id is not valid\");\n    }\n    const ticket = await this.ticketModel.findById(ticketId).exec();\n    if (!ticket) {\n      throw new TicketDoesNotExist(`Ticket with id \\\"${ticketId}\\\" doesn't exist.`);\n    }\n    if (!hasChanges(ticket, updateTicketDto)) {\n      throw new TicketNotModifiedError(\"No changes detected\");\n    }\n    const sanitizedUpdate = sanitizeUpdateTicketDto(updateTicketDto);\n    const updatedTicket = await this.ticketModel\n      .findByIdAndUpdate(\n        ticketId,\n        { $set: sanitizedUpdate },\n        {\n          new: true,\n          runValidators: true,\n        },\n      )\n      .select(\"-__v\")\n      .exec();\n    return updatedTicket;\n  }\n\n  /**\n   * Deletes a ticket by its ID.\n   *\n   * @param {string} ticketId - The ID of the ticket to delete.\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user attempting to delete the ticket.\n   * @returns {Promise} - The number of deleted tickets.\n   * @throws {TicketIdValidationError} - Throws if the provided ticket ID is invalid.\n   * @throws {TicketDoesNotExist} - Throws if the ticket does not exist.\n   * @throws {TicketInsufficientPermissionsError} - Throws if the user does not have permissions to delete the ticket.\n   * @throws {TicketError} - Throws if an error occurs during ticket deletion.\n   */\n  public async delete(ticketId: string, userId: mongoose.Types.ObjectId): Promise {\n    if (!isMongoDbIdValid(ticketId)) {\n      throw new TicketIdValidationError(\"Provided id is not valid\");\n    }\n    const ticket = await this.ticketModel.findOne({ _id: ticketId }).select(\"-__v -_id\");\n    if (!ticket) {\n      throw new ProjectDoesNotExist(`Ticket with id \\\"${ticketId}\\\" doesn't exist.`);\n    }\n\n    if (!ticket.createdBy._id.equals(userId)) {\n      throw new TicketInsufficientPermissionsError(`You are not authorized to delete this ticket.`);\n    }\n\n    const result = await this.ticketModel.deleteOne({ _id: ticketId }).exec();\n    if (result.deletedCount === 0) {\n      throw new TicketError(`Didn't delete ticket with \\\"${ticketId}\\\" .`);\n    }\n    return result.deletedCount;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketSlugValidationError.html":{"url":"classes/TicketSlugValidationError.html","title":"class - TicketSlugValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketSlugValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.errors.ts\n        \n\n\n            \n                Description\n            \n            \n                Error class for ticket slug validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                            TicketError\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TicketError extends Error {\n  /**\n   * Creates an instance of TicketError.\n   * @param {string} message - The error message.\n   */\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Error class for ticket relation conflicts.\n * @class\n * @extends TicketError\n */\nexport class TicketRelationConflict extends TicketError {}\n\n/**\n * Error class for ticket not existing.\n * @class\n * @extends TicketError\n */\nexport class TicketDoesNotExist extends TicketError {}\n\n/**\n * Error class for ticket slug validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketSlugValidationError extends TicketError {}\n\n/**\n * Error class for ticket ID validation errors.\n * @class\n * @extends TicketError\n */\nexport class TicketIdValidationError extends TicketError {}\n\n/**\n * Error class for ticket insufficient permissions.\n * @class\n * @extends TicketError\n */\nexport class TicketInsufficientPermissionsError extends TicketError {}\n\n/**\n * Error class for ticket not being modified.\n * @class\n * @extends TicketError\n */\nexport class TicketNotModifiedError extends TicketError {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/update-project.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for updating an existing project.\nThis class defines the structure and validation rules for the data required to update a project.\nIt extends the CreateProjectDto class, meaning it inherits the properties for name, description, and members,\nwith all properties being optional for updates.\n\n            \n\n            \n                Extends\n            \n            \n                        PartialType(CreateProjectDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    Optional\n                                members\n                            \n                            \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                tickets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The updated description of the project', example: 'Final Description', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:48\n                        \n                    \n\n            \n                \n                    The updated description of the project.\nThis field is optional. If provided, it must be a string representing the new description of the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of user IDs who are members of the project', example: undefined, type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:82\n                        \n                    \n\n            \n                \n                    List of user IDs who are members of the project.\nThis field is optional. If provided, it must be an array of MongoDB ObjectIds that represent\nthe users who should be members of the project.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The updated name of the project', example: 'New Project Name', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:32\n                        \n                    \n\n            \n                \n                    The updated name of the project.\nThis field is optional. If provided, it must be a string representing the new project name.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:64\n                        \n                    \n\n            \n                \n                    The ID of the user who owns the project.\nThis field is optional. If provided, it must be a valid MongoDB ObjectId that represents a user.\nThe owner field is typically set during project creation and is usually not updated.\nExample: '63e4e8d6e92f5e0b6f9a2f33'\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        tickets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/update-project.dto.ts:97\n                        \n                    \n\n            \n                \n                    List of ticket IDs associated with the project.\nThis field is optional. If provided, it must be an array of MongoDB ObjectIds that represent\nthe tickets associated with the project.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, IsMongoId, IsOptional } from \"class-validator\";\nimport { Types } from \"mongoose\";\n\nimport { CreateProjectDto } from \"./create-project.dto\";\n\n/**\n * DTO (Data Transfer Object) for updating an existing project.\n *\n * This class defines the structure and validation rules for the data required to update a project.\n * It extends the `CreateProjectDto` class, meaning it inherits the properties for `name`, `description`, and `members`,\n * with all properties being optional for updates.\n *\n * @class UpdateProjectDto\n */\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) {\n  /**\n   * The updated name of the project.\n   *\n   * This field is optional. If provided, it must be a string representing the new project name.\n   *\n   * @example 'New Project Name'\n   * @optional\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"The updated name of the project\",\n    example: \"New Project Name\",\n    required: false,\n  })\n  name?: string;\n\n  /**\n   * The updated description of the project.\n   *\n   * This field is optional. If provided, it must be a string representing the new description of the project.\n   *\n   * @example 'Final Description'\n   * @optional\n   * @type {string}\n   */\n  @ApiProperty({\n    description: \"The updated description of the project\",\n    example: \"Final Description\",\n    required: false,\n  })\n  description?: string;\n\n  /**\n   * The ID of the user who owns the project.\n   *\n   * This field is optional. If provided, it must be a valid MongoDB ObjectId that represents a user.\n   * The `owner` field is typically set during project creation and is usually not updated.\n   *\n   * Example: '63e4e8d6e92f5e0b6f9a2f33'\n   *\n   * @example '63e4e8d6e92f5e0b6f9a2f33'\n   * @optional\n   * @type {Types.ObjectId}\n   */\n  @IsOptional()\n  @IsMongoId()\n  owner?: Types.ObjectId;\n\n  /**\n   * List of user IDs who are members of the project.\n   *\n   * This field is optional. If provided, it must be an array of MongoDB ObjectIds that represent\n   * the users who should be members of the project.\n   *\n   * @example ['63e4e8d6e92f5e0b6f9a2f33', '63e4e8d6e92f5e0b6f9a2f34']\n   * @optional\n   * @type {Types.ObjectId[]}\n   */\n  @ApiProperty({\n    description: \"List of user IDs who are members of the project\",\n    example: [\"63e4e8d6e92f5e0b6f9a2f33\", \"63e4e8d6e92f5e0b6f9a2f34\"],\n    type: [Types.ObjectId],\n    required: false,\n  })\n  members?: Types.ObjectId[];\n\n  /**\n   * List of ticket IDs associated with the project.\n   *\n   * This field is optional. If provided, it must be an array of MongoDB ObjectIds that represent\n   * the tickets associated with the project.\n   *\n   * @example ['63e4e8d6e92f5e0b6f9a2f35', '63e4e8d6e92f5e0b6f9a2f36']\n   * @optional\n   * @type {Types.ObjectId[]}\n   */\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  tickets?: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketDto.html":{"url":"classes/UpdateTicketDto.html","title":"class - UpdateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/update-ticket.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO (Data Transfer Object) for updating a ticket.\nThis class defines the structure of the data required to update an existing ticket.\nIt extends the CreateTicketDto class, making all fields optional, and includes additional validation\nto ensure the correct data types are provided for the update operation.\n\n            \n\n            \n                Extends\n            \n            \n                        PartialType(CreateTicketDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                assignees\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                dueDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                priority\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        assignees\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsMongoId({each: true})@ApiProperty({description: 'List of assignees for the ticket.', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:69\n                        \n                    \n\n            \n                \n                    The list of assignees for the ticket.\nThis field is optional for updating. If provided, it must be an array of valid MongoDB ObjectIds.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The description of the ticket.', example: 'The login page does not load after clicking the login button.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:51\n                        \n                    \n\n            \n                \n                    The description of the ticket.\nThis field is optional for updating. If provided, it must be a string.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@Type(undefined)@ApiProperty({description: 'The due date for completing the ticket.', example: '2024-12-31T23:59:59.000Z'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:124\n                        \n                    \n\n            \n                \n                    The due date for completing the ticket.\nThis field is optional for updating. If provided, it must be a valid date.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        priority\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The priority of the ticket.', example: 'high', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:87\n                        \n                    \n\n            \n                \n                    The priority of the ticket.\nThis field is optional for updating. If provided, it must be one of the specified values: 'low', 'medium', or 'high'.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The status of the ticket.', example: 'in-progress', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:106\n                        \n                    \n\n            \n                \n                    The status of the ticket.\nThis field is optional for updating. If provided, it must be one of the specified values:\n'open', 'pending', 'in-progress', 'in-qa', 'staging', 'uat', 'production', 'wont-do', or 'closed'.\nExample :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The title of the ticket.', example: 'Bug in login page'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:34\n                        \n                    \n\n            \n                \n                    The title of the ticket.\nThis field is optional for updating. If provided, it must be a string.\nExample :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsString, IsOptional, IsMongoId, IsArray, IsDate } from \"class-validator\";\nimport { Types } from \"mongoose\";\n\nimport { CreateTicketDto } from \"./create-ticket.dto\";\n\n/**\n * DTO (Data Transfer Object) for updating a ticket.\n *\n * This class defines the structure of the data required to update an existing ticket.\n * It extends the `CreateTicketDto` class, making all fields optional, and includes additional validation\n * to ensure the correct data types are provided for the update operation.\n *\n * @class UpdateTicketDto\n */\nexport class UpdateTicketDto extends PartialType(CreateTicketDto) {\n  /**\n   * The title of the ticket.\n   *\n   * This field is optional for updating. If provided, it must be a string.\n   *\n   * @example 'Bug in login page'\n   * @optional\n   * @type {string}\n   */\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: \"The title of the ticket.\",\n    example: \"Bug in login page\",\n  })\n  title?: string;\n\n  /**\n   * The description of the ticket.\n   *\n   * This field is optional for updating. If provided, it must be a string.\n   *\n   * @example 'The login page does not load after clicking the login button.'\n   * @optional\n   * @type {string}\n   */\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: \"The description of the ticket.\",\n    example: \"The login page does not load after clicking the login button.\",\n  })\n  description?: string;\n\n  /**\n   * The list of assignees for the ticket.\n   *\n   * This field is optional for updating. If provided, it must be an array of valid MongoDB ObjectIds.\n   *\n   * @example ['507f1f77bcf86cd799439012', '507f1f77bcf86cd799439013']\n   * @optional\n   * @type {Types.ObjectId[]}\n   */\n  @IsOptional()\n  @IsArray()\n  @IsMongoId({ each: true })\n  @ApiProperty({\n    description: \"List of assignees for the ticket.\",\n    example: [\"507f1f77bcf86cd799439012\", \"507f1f77bcf86cd799439013\"],\n  })\n  assignees?: Types.ObjectId[];\n\n  /**\n   * The priority of the ticket.\n   *\n   * This field is optional for updating. If provided, it must be one of the specified values: 'low', 'medium', or 'high'.\n   *\n   * @example 'high'\n   * @optional\n   * @type {string}\n   */\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: \"The priority of the ticket.\",\n    example: \"high\",\n    enum: [\"low\", \"medium\", \"high\"],\n  })\n  priority?: string;\n\n  /**\n   * The status of the ticket.\n   *\n   * This field is optional for updating. If provided, it must be one of the specified values:\n   * 'open', 'pending', 'in-progress', 'in-qa', 'staging', 'uat', 'production', 'wont-do', or 'closed'.\n   *\n   * @example 'in-progress'\n   * @optional\n   * @type {string}\n   */\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: \"The status of the ticket.\",\n    example: \"in-progress\",\n    enum: [\"open\", \"pending\", \"in-progress\", \"in-qa\", \"staging\", \"uat\", \"production\", \"wont-do\", \"closed\"],\n  })\n  status?: string;\n\n  /**\n   * The due date for completing the ticket.\n   *\n   * This field is optional for updating. If provided, it must be a valid date.\n   *\n   * @example '2024-12-31T23:59:59.000Z'\n   * @optional\n   * @type {Date}\n   */\n  @IsOptional()\n  @IsDate()\n  @Type(() => Date)\n  @ApiProperty({\n    description: \"The due date for completing the ticket.\",\n    example: \"2024-12-31T23:59:59.000Z\",\n  })\n  dueDate?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This DTO is used to validate the new details provided for a user's profile update.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The new name of the user', example: 'John Doe'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/update-user.dto.ts:22\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty } from \"class-validator\";\n\n/**\n * @class UpdateUserDto\n * @description Data transfer object for updating user information.\n * This DTO is used to validate the new details provided for a user's profile update.\n */\nexport class UpdateUserDto {\n  /**\n   * @property {string} name\n   * @description The new name of the user. This field is required and cannot be empty.\n   * @example \"John Doe\"\n   * @required\n   */\n  @ApiProperty({\n    description: \"The new name of the user\",\n    example: \"John Doe\",\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/schemas/user.schema.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a user in the ticket management system.\nThe User schema defines the structure of the user documents stored in MongoDB,\nincluding properties such as username, password, email, name, role, and active status.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:22\n                        \n                    \n\n            \n                \n                    The unique email address for the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:40\n                        \n                    \n\n            \n                \n                    Indicates whether the user account is active.\nInactive accounts may be restricted from accessing the system.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:26\n                        \n                    \n\n            \n                \n                    The name of the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:18\n                        \n                    \n\n            \n                \n                    The hashed password for the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 'user', enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:33\n                        \n                    \n\n            \n                \n                    The role of the user in the system.\nDetermines permissions and access levels. Defaults to \"user\".\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/schemas/user.schema.ts:14\n                        \n                    \n\n            \n                \n                    The unique username for the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { HydratedDocument } from \"mongoose\";\n\n/**\n * Represents a user in the ticket management system.\n *\n * The User schema defines the structure of the user documents stored in MongoDB,\n * including properties such as username, password, email, name, role, and active status.\n */\n@Schema({ timestamps: true })\nexport class User {\n  /** The unique username for the user. */\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  /** The hashed password for the user. */\n  @Prop({ required: true })\n  password: string;\n\n  /** The unique email address for the user. */\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  /** The name of the user. */\n  @Prop({ required: true })\n  name: string;\n\n  /**\n   * The role of the user in the system.\n   * Determines permissions and access levels. Defaults to \"user\".\n   */\n  @Prop({ default: \"user\", enum: [\"user\", \"admin\", \"manager\"] })\n  role: string;\n\n  /**\n   * Indicates whether the user account is active.\n   * Inactive accounts may be restricted from accessing the system.\n   */\n  @Prop({ default: true })\n  isActive: boolean;\n}\n\n/**\n * The Mongoose schema for the User.\n * This schema is used to create and manage user documents in the MongoDB database.\n */\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n/**\n * The type representing a hydrated User document.\n * This type is used to work with user documents retrieved from MongoDB.\n */\nexport type UserDocument = HydratedDocument;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { User, UserSchema } from \"src/schemas/user.schema\";\n\nimport { UserService } from \"./user.service\";\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n  controllers: [],\n  providers: [UserService],\n  exports: [UserService, MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                UserService is responsible for managing user-related operations,\nincluding registration, user information updates and more.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findByUsernameOrEmail\n                            \n                            \n                                    Public\n                                    Async\n                                register\n                            \n                            \n                                    Public\n                                    Async\n                                updateUserName\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of the UserService.\nallowing interaction with the user data in the database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Mongoose model for the User schema,\nallowing interaction with the user data in the database.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    comparePassword(password: string, hashedPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Compares a plain text password with a hashed password.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe plain text password to compare.\n\n\n                                            \n                                        \n                                        \n                                                hashedPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe hashed password to compare against.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to a boolean indicating whether the passwords match.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Finds a user by their ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise that resolves to the user document if found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Finds a user by their username.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe username of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise that resolves to the user document if found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUsernameOrEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUsernameOrEmail(identifier: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Finds a user by their username or email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                identifier\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe username or email of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise that resolves to the user document if found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Registers a new user in the system after validating that\nthe username and email are not already in use.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing user registration information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \nA promise that resolves to the newly created user data, excluding the password.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserName(userId: mongoose.Types.ObjectId, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Updates the name of a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        mongoose.Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to update.\n\n\n                                            \n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the new user name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \nA promise that resolves to the updated user data, excluding the password.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(loginUserDto: LoginUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Validates a user by their login credentials, checking if the user exists and\nif the password is correct.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data transfer object containing the login credentials.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nA promise that resolves to the user document if validation is successful.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, ConflictException, UnauthorizedException } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport * as bcrypt from \"bcrypt\";\nimport mongoose, { Model } from \"mongoose\";\nimport { LoginUserDto } from \"src/auth/dto/login-user.dto\";\nimport { RegisterUserDto } from \"src/auth/dto/register-user.dto\";\n\nimport { UpdateUserDto } from \"../auth/dto/update-user.dto\";\nimport { User, UserDocument } from \"../schemas/user.schema\";\n\n/**\n * @class UserService\n * UserService is responsible for managing user-related operations,\n * including registration, user information updates and more.\n */\n@Injectable()\nexport class UserService {\n  /**\n   * Creates an instance of the UserService.\n   *\n   * @param {Model} userModel - The Mongoose model for the User schema,\n   * allowing interaction with the user data in the database.\n   */\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  /**\n   * Registers a new user in the system after validating that\n   * the username and email are not already in use.\n   *\n   * @param {RegisterUserDto} registerUserDto - The data transfer object containing user registration information.\n   * @returns {Promise>} - A promise that resolves to the newly created user data, excluding the password.\n   * @throws {ConflictException} - If a user with the same username or email already exists.\n   */\n  public async register(registerUserDto: RegisterUserDto): Promise> {\n    const { username, password, email, name } = registerUserDto;\n    const existingUser = await this.userModel.findOne({ $or: [{ username }, { email }] }).exec();\n    if (existingUser) {\n      throw new ConflictException(\"User with this username or email already exists.\");\n    }\n\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    const newUser = new this.userModel({\n      username,\n      password: hashedPassword,\n      email,\n      name,\n    });\n    const savedUser = await newUser.save();\n\n    const { password: _, ...userWithoutPassword } = savedUser.toObject();\n    return userWithoutPassword;\n  }\n\n  /**\n   * Compares a plain text password with a hashed password.\n   *\n   * @param {string} password - The plain text password to compare.\n   * @param {string} hashedPassword - The hashed password to compare against.\n   * @returns {Promise} - A promise that resolves to a boolean indicating whether the passwords match.\n   */\n  public async comparePassword(password: string, hashedPassword: string): Promise {\n    return await bcrypt.compare(password, hashedPassword);\n  }\n\n  /**\n   * Finds a user by their username.\n   *\n   * @param {string} username - The username of the user to find.\n   * @returns {Promise} - A promise that resolves to the user document if found.\n   */\n  async findByUsername(username: string): Promise {\n    return await this.userModel.findOne({ username }).exec();\n  }\n\n  /**\n   * Finds a user by their username or email.\n   *\n   * @param {string} identifier - The username or email of the user to find.\n   * @returns {Promise} - A promise that resolves to the user document if found.\n   */\n  async findByUsernameOrEmail(identifier: string): Promise {\n    return await this.userModel.findOne({ $or: [{ username: identifier }, { email: identifier }] }).exec();\n  }\n\n  /**\n   * Finds a user by their ID.\n   *\n   * @param {string} userId - The ID of the user to find.\n   * @returns {Promise} - A promise that resolves to the user document if found.\n   * @throws {NotFoundException} - If the user is not found.\n   */\n  async findById(userId: string): Promise {\n    const user = await this.userModel.findById(userId).exec();\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n    return user;\n  }\n\n  /**\n   * Validates a user by their login credentials, checking if the user exists and\n   * if the password is correct.\n   *\n   * @param {LoginUserDto} loginUserDto - The data transfer object containing the login credentials.\n   * @returns {Promise} - A promise that resolves to the user document if validation is successful.\n   * @throws {NotFoundException} - If the user is not found.\n   * @throws {UnauthorizedException} - If the password is invalid.\n   */\n  async validateUser(loginUserDto: LoginUserDto): Promise {\n    const user = await this.findByUsernameOrEmail(loginUserDto.email ?? loginUserDto.username);\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n    const passwordMatches = await this.comparePassword(loginUserDto.password, user.password);\n    if (!passwordMatches) {\n      throw new UnauthorizedException(\"Invalid password\");\n    }\n    return user;\n  }\n\n  /**\n   * Updates the name of a user.\n   *\n   * @param {mongoose.Types.ObjectId} userId - The ID of the user to update.\n   * @param {UpdateUserDto} updateUserDto - The data transfer object containing the new user name.\n   * @returns {Promise>} - A promise that resolves to the updated user data, excluding the password.\n   * @throws {NotFoundException} - If the user is not found.\n   */\n  public async updateUserName(userId: mongoose.Types.ObjectId, updateUserDto: UpdateUserDto): Promise> {\n    const { name } = updateUserDto;\n\n    const user = await this.userModel.findById(userId).exec();\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    user.name = name;\n    const updatedUser = await user.save();\n\n    const { password: _, ...userWithoutPassword } = updatedUser.toObject();\n    return userWithoutPassword;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipExportService.html":{"url":"injectables/ZipExportService.html","title":"injectable - ZipExportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipExportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            docs/template-playground/zip-export.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                downloadBlob\n                            \n                            \n                                exportTemplates\n                            \n                            \n                                    Private\n                                generateReadme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        downloadBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadBlob(blob: Blob, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/zip-export.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportTemplates\n                        \n                    \n                \n            \n            \n                \nexportTemplates(files: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/zip-export.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateReadme\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateReadme()\n                \n            \n\n\n                    \n                        \n                            Defined in docs/template-playground/zip-export.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\ndeclare const JSZip: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipExportService {\n\n  exportTemplates(files: any[]) {\n    const zip = new JSZip();\n\n    // Add all template files to the ZIP\n    files.forEach(file => {\n      zip.file(file.path, file.content);\n    });\n\n    // Add a README with instructions\n    const readme = this.generateReadme();\n    zip.file('README.md', readme);\n\n    // Generate and download the ZIP file\n    zip.generateAsync({ type: 'blob' })\n      .then((content: Blob) => {\n        this.downloadBlob(content, 'compodoc-templates.zip');\n      });\n  }\n\n  private generateReadme(): string {\n    return `# Compodoc Custom Templates\n\nThis ZIP file contains customized templates for Compodoc documentation generation.\n\n## Contents\n\n- **Templates** (\\`.hbs\\` files): Handlebars templates for generating documentation pages\n- **Styles** (\\`.css\\` files): Stylesheets for customizing the appearance\n- **Scripts** (\\`.js\\` files): JavaScript files for additional functionality\n\n## Usage\n\n1. Extract this ZIP file to a directory on your system\n2. Use the \\`--templates\\` flag when running Compodoc to specify the path to your custom templates:\n\n   \\`\\`\\`bash\n   compodoc -p tsconfig.json --templates ./path/to/custom/templates/\n   \\`\\`\\`\n\n## Template Structure\n\n- \\`page.hbs\\` - Main page template\n- \\`partials/\\` - Directory containing partial templates\n- \\`styles/\\` - Directory containing CSS files\n- \\`js/\\` - Directory containing JavaScript files\n\n## Customization Tips\n\n1. **Templates**: Use Handlebars syntax to customize the HTML structure\n2. **Styles**: Modify CSS to change colors, fonts, layout, etc.\n3. **Scripts**: Add custom JavaScript functionality\n\n## Backup\n\nAlways keep a backup of your original templates before making changes.\n\n## Documentation\n\nFor more information about customizing Compodoc templates, visit:\nhttps://compodoc.app/guides/template-customization.html\n\nGenerated by Compodoc Template Playground\n`;\n  }\n\n  private downloadBlob(blob: Blob, filename: string) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.style.display = 'none';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        docs/template-playground/hbs-render.service.ts\n            \n            injectable\n            HbsRenderService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        docs/template-playground/hbs-render.service.ts\n            \n            variable\n            Handlebars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-editor.service.ts\n            \n            injectable\n            TemplateEditorService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-editor.service.ts\n            \n            variable\n            monaco\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-playground.component.ts\n            \n            component\n            TemplatePlaygroundComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-playground.component.ts\n            \n            interface\n            CompoDocConfig\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-playground.component.ts\n            \n            interface\n            Session\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        docs/template-playground/template-playground.component.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        docs/template-playground/zip-export.service.ts\n            \n            injectable\n            ZipExportService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        docs/template-playground/zip-export.service.ts\n            \n            variable\n            JSZip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/auth/decorators/hasUsernameOrEmail.decorator.ts\n            \n            function\n            hasUsernameOrEmail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/auth/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        src/auth/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/auth/interfaces/user.interface.ts\n            \n            interface\n            ExpressRequestWithUser\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                        src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/project/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/project/interfaces/project.interface.ts\n            \n            interface\n            ExpressRequestWithUser\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/project/project.controller.ts\n            \n            controller\n            ProjectController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectDoesNotExist\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectError\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectIdValidationError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectInsufficientPermissionsError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectNotModifiedError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectRelationConflict\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectSlugValidationError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.errors.ts\n            \n            class\n            ProjectUpdateDataValidationError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/project/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                        src/schemas/project.schema.ts\n            \n            class\n            Project\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/schemas/project.schema.ts\n            \n            variable\n            ProjectSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/schemas/project.schema.ts\n            \n            type alias\n            ProjectDocument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/schemas/ticket.schema.ts\n            \n            class\n            Ticket\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/schemas/ticket.schema.ts\n            \n            variable\n            TicketSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/schemas/user.schema.ts\n            \n            class\n            User\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/dto/create-ticket.dto.ts\n            \n            class\n            CreateTicketDto\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                        src/ticket/dto/update-ticket.dto.ts\n            \n            class\n            UpdateTicketDto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        src/ticket/interfaces/ticket.interface.ts\n            \n            interface\n            ExpressRequestWithUser\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.controller.ts\n            \n            controller\n            TicketController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketDoesNotExist\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketError\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketIdValidationError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketInsufficientPermissionsError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketNotModifiedError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketRelationConflict\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.errors.ts\n            \n            class\n            TicketSlugValidationError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/ticket/ticket.service.ts\n            \n            injectable\n            TicketService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                        src/ticket/utils/ticket.utils.ts\n            \n            function\n            sanitizeUpdateTicketDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        src/utils/index.ts\n            \n            function\n            deepEqualArrays\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/utils/index.ts\n            \n            function\n            handleDomainErrors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/utils/index.ts\n            \n            function\n            hasChanges\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/utils/index.ts\n            \n            function\n            isMongoDbIdValid\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^4.0.1\n        \n            @nestjs/common : ^11.1.7\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.1.7\n        \n            @nestjs/jwt : ^11.0.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.1.7\n        \n            @nestjs/swagger : ^11.2.1\n        \n            @nestjs/terminus : ^11.0.0\n        \n            @swc/helpers : ^0.5.17\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            compression : ^1.8.1\n        \n            mongoose : ^8.19.2\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            deepEqualArrays   (src/.../index.ts)\n                        \n                        \n                            handleDomainErrors   (src/.../index.ts)\n                        \n                        \n                            hasChanges   (src/.../index.ts)\n                        \n                        \n                            hasUsernameOrEmail   (src/.../hasUsernameOrEmail.decorator.ts)\n                        \n                        \n                            isMongoDbIdValid   (src/.../index.ts)\n                        \n                        \n                            sanitizeUpdateTicketDto   (src/.../ticket.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                        Initializes and bootstraps the NestJS application.\nThis function creates the Nest application, sets up Swagger documentation\nif the environment is development, applies global middlewares, and starts\nthe server on the specified port.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the application is bootstrapped.\n\n                            \n                \n            \n        \n    \n    src/utils/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deepEqualArrays\n                        \n                    \n                \n            \n            \n                \ndeepEqualArrays(arr1, arr2)\n                \n            \n\n\n\n\n            \n                \n                        Compares two arrays for deep equality.\nThis function checks if two arrays are identical in length and contents, comparing each element in order.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                arr1\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe first array to compare.\n\n\n                                            \n                                        \n                                        \n                                                arr2\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe second array to compare.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if both arrays are equal, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDomainErrors\n                        \n                    \n                \n            \n            \n                \nhandleDomainErrors(error)\n                \n            \n\n\n\n\n            \n                \n                        Handles domain-specific errors and maps them to appropriate HTTP exceptions.\nThis function checks if the error belongs to specific domain error classes (e.g., Ticket or Project errors) and\nthrows an HttpException with the correct HTTP status code and error message. If the error doesn't match any\nknown domain error, a generic internal server error is thrown.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe error object to handle.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasChanges\n                        \n                    \n                \n            \n            \n                \nhasChanges(original: T, updated: Partial)\n                \n            \n\n\n\n\n            \n                \n                        Checks whether there are any changes between the original and updated objects.\nThis function compares the original object and the updated object (which may contain partial fields) to\ndetermine if there are any differences. It handles arrays, Date objects, and simple field comparisons.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                original\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe original object before any changes.\n\n\n                                            \n                                        \n                                        \n                                                updated\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated object, possibly containing only some of the fields of original.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if there are changes between the two objects, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMongoDbIdValid\n                        \n                    \n                \n            \n            \n                \nisMongoDbIdValid(id)\n                \n            \n\n\n\n\n            \n                \n                        Checks if a given string is a valid MongoDB ObjectId.\nThis function uses Mongoose's ObjectId.isValid method to determine if the provided string\nis a valid representation of a MongoDB ObjectId. MongoDB ObjectIds are 24-character hexadecimal\nstrings that are unique identifiers for documents in MongoDB collections.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe string to check for validity as a MongoDB ObjectId.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nReturns true if the string is a valid MongoDB ObjectId, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    src/auth/decorators/hasUsernameOrEmail.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasUsernameOrEmail\n                        \n                    \n                \n            \n            \n                \nhasUsernameOrEmail(validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n                        A custom validation decorator that checks if either a username or an email is provided.\nThis is useful for scenarios where one of the two fields is required for user login or registration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    \nOptional validation options to customize the error message and behavior.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/ticket/utils/ticket.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sanitizeUpdateTicketDto\n                        \n                    \n                \n            \n            \n                \nsanitizeUpdateTicketDto(updateTicketDto: UpdateTicketDto)\n                \n            \n\n\n\n\n            \n                \n                        Sanitizes the updateTicketDto object to ensure it only contains allowed fields and values.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to update the ticket with.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Partial\n\n                        \n                            \n                                \nThe sanitized update data.\n\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \n\n\n\n  \n    \n      \n    \n  \n  Parchment TMS\n  A Headless Ticket Management System\n  \n    This is a toy project for a headless TMS built with \n    NestJS and MongoDB, enabling teams to \n    create, manage, and close tickets, \n    track their status and prioritize tasks.\n  \n  \n   \n  \n\n\n🚀 Getting Started\nTo get started with this project, you can choose to either run the project natively on your machine, or with Docker.\n🏠 Running natively\nTo run the project natively, you will need to have Node.js v22.21.0 or higher and npm v10.9.4 or higher installed on your machine.\n\n🍴 Clone this repository to your local machine.\n💻 Run npm install to install the necessary dependencies.\n🚀 Start a MongoDB instance on your machine by following the instructions provided by MongoDB for your specific operating system. You can download the MongoDB Community Server from here.\n📝 Rename .env.example to .env and replace the values with your own MongoDB connection details and desired api port.\n🚀 Run npm start to start the server.\n\n🐳 Running with Docker\nTo run the project with Docker, you will need to have Docker installed on your machine.\n\n🍴 Clone this repository to your local machine.\n📝 Copy the .env.example file and rename it to .env. Open the .env file and specify the desired values for MONGODB_URI and PORT variables.\nFor example:Example :# The MongoDB connection string for the TMS database\nMONGODB_URI=\"mongodb://mongodb/test\"\n# The port on which the TMS API will run\nPORT=\"3000\"\n# The seed string to be used for the JwtStrategy\nJWT_SECRET=\"42\"\n🐳 Run docker compose build to build the containers.\n🐳 Run docker compose up to start the containers.\n🌍 The API will be available at http://localhost:3000/.\n\n📖 Usage\nOnce the server is running, you can use the following endpoints to manage your projects/tickets:\nAuthenticate\n\nPOST /api/v1/register: Gives the ability to register\nPOST /api/v1/login: Returns a jwt token for authentication\n\nProjects\n\nGET /api/v1/projects: Returns a list of all projects\nPOST /api/v1/projects: Create a new project\nGET /api/v1/projects/:id: Returns a specific project by project ID.\nPATCH /api/v1/projects/:id: Update a project by ID\nDELETE /api/v1/projects/:id: Delete a project by ID\n\nTickets\n\nGET /api/v1/tickets: Returns a list of all tickets\nPOST /api/v1/tickets: Create a new ticket\nGET /api/v1/tickets/:id: Returns a specific ticket by ticket ID.\nPATCH /api/v1/tickets/:id: Update an existing ticket by ID\nDELETE /api/v1/tickets:id: Delete a ticket by ID\n\nHealth\n\nGET /heath: Returns useful system information, such as server uptime and memory usage. This endpoint can be used to monitor the health of the application.\n\n🚀 Future Improvements\nHere are some potential improvements that could be made to this project:\n\n Write Jest tests\n Add a process manager\n Add API rate limiting to prevent abuse\n Introduce automated ticket workflows or rules\n Create a frontend interface for ticket management.\n Add support for more auth providers (Auth0, OAuth2, etc)\n Implement backup and restore mechanism for data recovery\n Implement real-time ticket updates using WebSockets or SSE\n Add search and filter functionality for tickets and projects\n Enable file attachments for tickets (e.g., screenshots, logs)\n Improve documentation with detailed user guides and API examples\n Implement audit logs to track changes made to tickets and projects\n Optimize system performance (database queries, caching, file uploads)\n Support multiple languages for localization/internationalization (i18n)\n Add Github Actions to publish image to Docker Hub, Github Registry, etc.\n Allow customization of ticket fields (priority, labels, custom statuses)\n Support multiple deployment environments (e.g., dev, staging, production)\n Enable user profile changes and preferences (e.g., email notifications, themes)\n Create a reporting feature for ticket data (e.g., total tickets, resolution time)\n Add User Roles and Permissions for different access levels (admin, manager, developer)\n\n🤝 Contributing\nContributions to this project are welcome! If you have any suggestions, bug reports, or feature requests, please open an issue or submit a pull request.\n📝 License\nThis project is licensed under the Apache License, Version 2.0. See the LICENSE file for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"license - license","body":"\n                   \n\n\n\n\n\nExample :                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\nExample :  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2025 Nikolaos Grigoropoulos\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\nExample :   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TemplatePlaygroundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n\n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProjectModule\n\n\n\ncluster_ProjectModule_providers\n\n\n\ncluster_TemplatePlaygroundModule\n\n\n\ncluster_TemplatePlaygroundModule_declarations\n\n\n\ncluster_TemplatePlaygroundModule_bootstrap\n\n\n\ncluster_TemplatePlaygroundModule_providers\n\n\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProjectModule\n\nProjectModule\n\nAppModule -->\n\nProjectModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProjectService\n\nProjectService\n\nProjectModule -->\n\nProjectService->ProjectModule\n\n\n\n\n\nTemplatePlaygroundComponent\n\nTemplatePlaygroundComponent\n\n\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule\n\nTemplatePlaygroundModule -->\n\nTemplatePlaygroundComponent->TemplatePlaygroundModule\n\n\n\n\n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent \n\nTemplatePlaygroundComponent  -->\n\nTemplatePlaygroundModule->TemplatePlaygroundComponent \n\n\n\n\n\nHbsRenderService\n\nHbsRenderService\n\nTemplatePlaygroundModule -->\n\nHbsRenderService->TemplatePlaygroundModule\n\n\n\n\n\nTemplateEditorService\n\nTemplateEditorService\n\nTemplatePlaygroundModule -->\n\nTemplateEditorService->TemplatePlaygroundModule\n\n\n\n\n\nZipExportService\n\nZipExportService\n\nTemplatePlaygroundModule -->\n\nZipExportService->TemplatePlaygroundModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : A basic headless TMS to create and manage your own project/tickets with the help of mongodb and nestjs(express).\n        \n            Keywords : \n        \n            License : Apache-2.0\n        \n            Author : Nikolaos Grigoropoulos\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ProjectDocument   (src/.../project.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/schemas/project.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProjectDocument\n                \n            \n            \n                \n                    ProjectDocument type that combines the Project class with Mongoose Document.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                    The type representing a hydrated User document.\nThis type is used to work with user documents retrieved from MongoDB.\n\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Handlebars   (docs/.../hbs-render.service.ts)\n                        \n                        \n                            JSZip   (docs/.../zip-export.service.ts)\n                        \n                        \n                            monaco   (docs/.../template-editor.service.ts)\n                        \n                        \n                            ProjectSchema   (src/.../project.schema.ts)\n                        \n                        \n                            TicketSchema   (src/.../ticket.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    docs/template-playground/hbs-render.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Handlebars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    docs/template-playground/zip-export.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JSZip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    docs/template-playground/template-editor.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        monaco\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/schemas/project.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProjectSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Project)\n                    \n                \n\n            \n                \n                    ProjectSchema is the Mongoose schema for the Project class.\nThis schema is used by Mongoose to interact with the database.\n\n                \n            \n\n        \n    \n\n    src/schemas/ticket.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Ticket)\n                    \n                \n\n            \n                \n                    TicketSchema is the Mongoose schema for the Ticket class.\nThis schema is used by Mongoose to interact with the database.\n\n                \n            \n\n        \n    \n\n    src/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n            \n                \n                    The Mongoose schema for the User.\nThis schema is used to create and manage user documents in the MongoDB database.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
